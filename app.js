(function(){function r(e,n,t){function o(i,f){if(!n[i]){if(!e[i]){var c="function"==typeof require&&require;if(!f&&c)return c(i,!0);if(u)return u(i,!0);var a=new Error("Cannot find module '"+i+"'");throw a.code="MODULE_NOT_FOUND",a}var p=n[i]={exports:{}};e[i][0].call(p.exports,function(r){var n=e[i][1][r];return o(n||r)},p,p.exports,r,e,n,t)}return n[i].exports}for(var u="function"==typeof require&&require,i=0;i<t.length;i++)o(t[i]);return o}return r})()({1:[function(require,module,exports){
// Generated by purs bundle 0.13.8
var PS = {};
(function($PS) {
  // Generated by purs version 0.13.8
  "use strict";
  $PS["Control.Alt"] = $PS["Control.Alt"] || {};
  var exports = $PS["Control.Alt"];                          
  var Alt = function (Functor0, alt) {
      this.Functor0 = Functor0;
      this.alt = alt;
  };                                                       
  var alt = function (dict) {
      return dict.alt;
  };
  exports["Alt"] = Alt;
  exports["alt"] = alt;
})(PS);
(function($PS) {
  // Generated by purs version 0.13.8
  "use strict";
  $PS["Control.Semigroupoid"] = $PS["Control.Semigroupoid"] || {};
  var exports = $PS["Control.Semigroupoid"];
  var Semigroupoid = function (compose) {
      this.compose = compose;
  };
  var semigroupoidFn = new Semigroupoid(function (f) {
      return function (g) {
          return function (x) {
              return f(g(x));
          };
      };
  });
  var compose = function (dict) {
      return dict.compose;
  };
  exports["compose"] = compose;
  exports["semigroupoidFn"] = semigroupoidFn;
})(PS);
(function($PS) {
  // Generated by purs version 0.13.8
  "use strict";
  $PS["Control.Category"] = $PS["Control.Category"] || {};
  var exports = $PS["Control.Category"];
  var Control_Semigroupoid = $PS["Control.Semigroupoid"];                
  var Category = function (Semigroupoid0, identity) {
      this.Semigroupoid0 = Semigroupoid0;
      this.identity = identity;
  };
  var identity = function (dict) {
      return dict.identity;
  };
  var categoryFn = new Category(function () {
      return Control_Semigroupoid.semigroupoidFn;
  }, function (x) {
      return x;
  });
  exports["identity"] = identity;
  exports["categoryFn"] = categoryFn;
})(PS);
(function($PS) {
  // Generated by purs version 0.13.8
  "use strict";
  $PS["Data.Function"] = $PS["Data.Function"] || {};
  var exports = $PS["Data.Function"];                    
  var on = function (f) {
      return function (g) {
          return function (x) {
              return function (y) {
                  return f(g(x))(g(y));
              };
          };
      };
  };
  var flip = function (f) {
      return function (b) {
          return function (a) {
              return f(a)(b);
          };
      };
  };
  var $$const = function (a) {
      return function (v) {
          return a;
      };
  };
  exports["flip"] = flip;
  exports["const"] = $$const;
  exports["on"] = on;
})(PS);
(function(exports) {
  "use strict";

  exports.arrayMap = function (f) {
    return function (arr) {
      var l = arr.length;
      var result = new Array(l);
      for (var i = 0; i < l; i++) {
        result[i] = f(arr[i]);
      }
      return result;
    };
  };
})(PS["Data.Functor"] = PS["Data.Functor"] || {});
(function(exports) {
  "use strict";

  exports.unit = {};
})(PS["Data.Unit"] = PS["Data.Unit"] || {});
(function($PS) {
  // Generated by purs version 0.13.8
  "use strict";
  $PS["Data.Unit"] = $PS["Data.Unit"] || {};
  var exports = $PS["Data.Unit"];
  var $foreign = $PS["Data.Unit"];
  exports["unit"] = $foreign.unit;
})(PS);
(function($PS) {
  // Generated by purs version 0.13.8
  "use strict";
  $PS["Data.Functor"] = $PS["Data.Functor"] || {};
  var exports = $PS["Data.Functor"];
  var $foreign = $PS["Data.Functor"];
  var Control_Semigroupoid = $PS["Control.Semigroupoid"];
  var Data_Function = $PS["Data.Function"];
  var Data_Unit = $PS["Data.Unit"];                
  var Functor = function (map) {
      this.map = map;
  };
  var map = function (dict) {
      return dict.map;
  };
  var mapFlipped = function (dictFunctor) {
      return function (fa) {
          return function (f) {
              return map(dictFunctor)(f)(fa);
          };
      };
  };
  var $$void = function (dictFunctor) {
      return map(dictFunctor)(Data_Function["const"](Data_Unit.unit));
  };
  var voidRight = function (dictFunctor) {
      return function (x) {
          return map(dictFunctor)(Data_Function["const"](x));
      };
  };
  var functorFn = new Functor(Control_Semigroupoid.compose(Control_Semigroupoid.semigroupoidFn));
  var functorArray = new Functor($foreign.arrayMap);
  exports["Functor"] = Functor;
  exports["map"] = map;
  exports["mapFlipped"] = mapFlipped;
  exports["void"] = $$void;
  exports["voidRight"] = voidRight;
  exports["functorFn"] = functorFn;
  exports["functorArray"] = functorArray;
})(PS);
(function($PS) {
  // Generated by purs version 0.13.8
  "use strict";
  $PS["Control.Apply"] = $PS["Control.Apply"] || {};
  var exports = $PS["Control.Apply"];
  var Control_Category = $PS["Control.Category"];
  var Data_Function = $PS["Data.Function"];
  var Data_Functor = $PS["Data.Functor"];                
  var Apply = function (Functor0, apply) {
      this.Functor0 = Functor0;
      this.apply = apply;
  };                      
  var apply = function (dict) {
      return dict.apply;
  };
  var applyFirst = function (dictApply) {
      return function (a) {
          return function (b) {
              return apply(dictApply)(Data_Functor.map(dictApply.Functor0())(Data_Function["const"])(a))(b);
          };
      };
  };
  var applySecond = function (dictApply) {
      return function (a) {
          return function (b) {
              return apply(dictApply)(Data_Functor.map(dictApply.Functor0())(Data_Function["const"](Control_Category.identity(Control_Category.categoryFn)))(a))(b);
          };
      };
  };
  exports["Apply"] = Apply;
  exports["apply"] = apply;
  exports["applyFirst"] = applyFirst;
  exports["applySecond"] = applySecond;
})(PS);
(function($PS) {
  // Generated by purs version 0.13.8
  "use strict";
  $PS["Control.Lazy"] = $PS["Control.Lazy"] || {};
  var exports = $PS["Control.Lazy"];               
  var Lazy = function (defer) {
      this.defer = defer;
  }; 
  var defer = function (dict) {
      return dict.defer;
  };
  exports["defer"] = defer;
  exports["Lazy"] = Lazy;
})(PS);
(function(exports) {
  "use strict";

  //------------------------------------------------------------------------------
  // Array creation --------------------------------------------------------------
  //------------------------------------------------------------------------------

  exports.range = function (start) {
    return function (end) {
      var step = start > end ? -1 : 1;
      var result = new Array(step * (end - start) + 1);
      var i = start, n = 0;
      while (i !== end) {
        result[n++] = i;
        i += step;
      }
      result[n] = i;
      return result;
    };
  };                                                                                                 

  exports.fromFoldableImpl = (function () {
    function Cons(head, tail) {
      this.head = head;
      this.tail = tail;
    }
    var emptyList = {};

    function curryCons(head) {
      return function (tail) {
        return new Cons(head, tail);
      };
    }

    function listToArray(list) {
      var result = [];
      var count = 0;
      var xs = list;
      while (xs !== emptyList) {
        result[count++] = xs.head;
        xs = xs.tail;
      }
      return result;
    }

    return function (foldr) {
      return function (xs) {
        return listToArray(foldr(curryCons)(emptyList)(xs));
      };
    };
  })();

  //------------------------------------------------------------------------------
  // Array size ------------------------------------------------------------------
  //------------------------------------------------------------------------------

  exports.length = function (xs) {
    return xs.length;
  };

  //------------------------------------------------------------------------------
  // Extending arrays ------------------------------------------------------------
  //------------------------------------------------------------------------------

  exports.cons = function (e) {
    return function (l) {
      return [e].concat(l);
    };
  };

  exports.snoc = function (l) {
    return function (e) {
      var l1 = l.slice();
      l1.push(e);
      return l1;
    };
  };

  //------------------------------------------------------------------------------
  // Non-indexed reads -----------------------------------------------------------
  //------------------------------------------------------------------------------

  exports["uncons'"] = function (empty) {
    return function (next) {
      return function (xs) {
        return xs.length === 0 ? empty({}) : next(xs[0])(xs.slice(1));
      };
    };
  };

  //------------------------------------------------------------------------------
  // Indexed operations ----------------------------------------------------------
  //------------------------------------------------------------------------------

  exports.indexImpl = function (just) {
    return function (nothing) {
      return function (xs) {
        return function (i) {
          return i < 0 || i >= xs.length ? nothing :  just(xs[i]);
        };
      };
    };
  };

  exports._updateAt = function (just) {
    return function (nothing) {
      return function (i) {
        return function (a) {
          return function (l) {
            if (i < 0 || i >= l.length) return nothing;
            var l1 = l.slice();
            l1[i] = a;
            return just(l1);
          };
        };
      };
    };
  };

  exports.partition = function (f) {
    return function (xs) {
      var yes = [];
      var no  = [];
      for (var i = 0; i < xs.length; i++) {
        var x = xs[i];
        if (f(x))
          yes.push(x);
        else
          no.push(x);
      }
      return { yes: yes, no: no };
    };
  };

  //------------------------------------------------------------------------------
  // Subarrays -------------------------------------------------------------------
  //------------------------------------------------------------------------------

  exports.slice = function (s) {
    return function (e) {
      return function (l) {
        return l.slice(s, e);
      };
    };
  };

  //------------------------------------------------------------------------------
  // Zipping ---------------------------------------------------------------------
  //------------------------------------------------------------------------------

  exports.zipWith = function (f) {
    return function (xs) {
      return function (ys) {
        var l = xs.length < ys.length ? xs.length : ys.length;
        var result = new Array(l);
        for (var i = 0; i < l; i++) {
          result[i] = f(xs[i])(ys[i]);
        }
        return result;
      };
    };
  };
})(PS["Data.Array"] = PS["Data.Array"] || {});
(function($PS) {
  // Generated by purs version 0.13.8
  "use strict";
  $PS["Control.Applicative"] = $PS["Control.Applicative"] || {};
  var exports = $PS["Control.Applicative"];
  var Control_Apply = $PS["Control.Apply"];
  var Data_Unit = $PS["Data.Unit"];                
  var Applicative = function (Apply0, pure) {
      this.Apply0 = Apply0;
      this.pure = pure;
  };
  var pure = function (dict) {
      return dict.pure;
  };
  var unless = function (dictApplicative) {
      return function (v) {
          return function (v1) {
              if (!v) {
                  return v1;
              };
              if (v) {
                  return pure(dictApplicative)(Data_Unit.unit);
              };
              throw new Error("Failed pattern match at Control.Applicative (line 62, column 1 - line 62, column 65): " + [ v.constructor.name, v1.constructor.name ]);
          };
      };
  };
  var when = function (dictApplicative) {
      return function (v) {
          return function (v1) {
              if (v) {
                  return v1;
              };
              if (!v) {
                  return pure(dictApplicative)(Data_Unit.unit);
              };
              throw new Error("Failed pattern match at Control.Applicative (line 57, column 1 - line 57, column 63): " + [ v.constructor.name, v1.constructor.name ]);
          };
      };
  };
  var liftA1 = function (dictApplicative) {
      return function (f) {
          return function (a) {
              return Control_Apply.apply(dictApplicative.Apply0())(pure(dictApplicative)(f))(a);
          };
      };
  };
  exports["Applicative"] = Applicative;
  exports["pure"] = pure;
  exports["liftA1"] = liftA1;
  exports["unless"] = unless;
  exports["when"] = when;
})(PS);
(function(exports) {
  "use strict";

  exports.foldrArray = function (f) {
    return function (init) {
      return function (xs) {
        var acc = init;
        var len = xs.length;
        for (var i = len - 1; i >= 0; i--) {
          acc = f(xs[i])(acc);
        }
        return acc;
      };
    };
  };

  exports.foldlArray = function (f) {
    return function (init) {
      return function (xs) {
        var acc = init;
        var len = xs.length;
        for (var i = 0; i < len; i++) {
          acc = f(acc)(xs[i]);
        }
        return acc;
      };
    };
  };
})(PS["Data.Foldable"] = PS["Data.Foldable"] || {});
(function(exports) {
  "use strict";

  var refEq = function (r1) {
    return function (r2) {
      return r1 === r2;
    };
  };

  exports.eqBooleanImpl = refEq;
  exports.eqIntImpl = refEq;   
  exports.eqCharImpl = refEq;
  exports.eqStringImpl = refEq;

  exports.eqArrayImpl = function (f) {
    return function (xs) {
      return function (ys) {
        if (xs === ys) return true;
        if (xs.length !== ys.length) return false;
        for (var i = 0; i < xs.length; i++) {
          if (!f(xs[i])(ys[i])) return false;
        }
        return true;
      };
    };
  };
})(PS["Data.Eq"] = PS["Data.Eq"] || {});
(function($PS) {
  // Generated by purs version 0.13.8
  "use strict";
  $PS["Data.Symbol"] = $PS["Data.Symbol"] || {};
  var exports = $PS["Data.Symbol"];      
  var SProxy = (function () {
      function SProxy() {

      };
      SProxy.value = new SProxy();
      return SProxy;
  })();
  var IsSymbol = function (reflectSymbol) {
      this.reflectSymbol = reflectSymbol;
  };
  var reflectSymbol = function (dict) {
      return dict.reflectSymbol;
  };
  exports["IsSymbol"] = IsSymbol;
  exports["reflectSymbol"] = reflectSymbol;
  exports["SProxy"] = SProxy;
})(PS);
(function(exports) {
  "use strict";

  exports.unsafeGet = function (label) {
    return function (rec) {
      return rec[label];
    };
  };
})(PS["Record.Unsafe"] = PS["Record.Unsafe"] || {});
(function($PS) {
  // Generated by purs version 0.13.8
  "use strict";
  $PS["Record.Unsafe"] = $PS["Record.Unsafe"] || {};
  var exports = $PS["Record.Unsafe"];
  var $foreign = $PS["Record.Unsafe"];
  exports["unsafeGet"] = $foreign.unsafeGet;
})(PS);
(function($PS) {
  // Generated by purs version 0.13.8
  "use strict";
  $PS["Type.Data.RowList"] = $PS["Type.Data.RowList"] || {};
  var exports = $PS["Type.Data.RowList"];
  var RLProxy = (function () {
      function RLProxy() {

      };
      RLProxy.value = new RLProxy();
      return RLProxy;
  })();
  exports["RLProxy"] = RLProxy;
})(PS);
(function($PS) {
  // Generated by purs version 0.13.8
  "use strict";
  $PS["Data.Eq"] = $PS["Data.Eq"] || {};
  var exports = $PS["Data.Eq"];
  var $foreign = $PS["Data.Eq"];
  var Data_Symbol = $PS["Data.Symbol"];
  var Record_Unsafe = $PS["Record.Unsafe"];
  var Type_Data_RowList = $PS["Type.Data.RowList"];                
  var EqRecord = function (eqRecord) {
      this.eqRecord = eqRecord;
  };
  var Eq = function (eq) {
      this.eq = eq;
  }; 
  var eqString = new Eq($foreign.eqStringImpl);
  var eqRowNil = new EqRecord(function (v) {
      return function (v1) {
          return function (v2) {
              return true;
          };
      };
  });
  var eqRecord = function (dict) {
      return dict.eqRecord;
  };
  var eqRec = function (dictRowToList) {
      return function (dictEqRecord) {
          return new Eq(eqRecord(dictEqRecord)(Type_Data_RowList.RLProxy.value));
      };
  };                                           
  var eqInt = new Eq($foreign.eqIntImpl);
  var eqChar = new Eq($foreign.eqCharImpl);
  var eqBoolean = new Eq($foreign.eqBooleanImpl);
  var eq = function (dict) {
      return dict.eq;
  };
  var eqArray = function (dictEq) {
      return new Eq($foreign.eqArrayImpl(eq(dictEq)));
  }; 
  var eqRowCons = function (dictEqRecord) {
      return function (dictCons) {
          return function (dictIsSymbol) {
              return function (dictEq) {
                  return new EqRecord(function (v) {
                      return function (ra) {
                          return function (rb) {
                              var tail = eqRecord(dictEqRecord)(Type_Data_RowList.RLProxy.value)(ra)(rb);
                              var key = Data_Symbol.reflectSymbol(dictIsSymbol)(Data_Symbol.SProxy.value);
                              var get = Record_Unsafe.unsafeGet(key);
                              return eq(dictEq)(get(ra))(get(rb)) && tail;
                          };
                      };
                  });
              };
          };
      };
  };
  var notEq = function (dictEq) {
      return function (x) {
          return function (y) {
              return eq(eqBoolean)(eq(dictEq)(x)(y))(false);
          };
      };
  };
  exports["Eq"] = Eq;
  exports["eq"] = eq;
  exports["notEq"] = notEq;
  exports["eqInt"] = eqInt;
  exports["eqChar"] = eqChar;
  exports["eqString"] = eqString;
  exports["eqArray"] = eqArray;
  exports["eqRec"] = eqRec;
  exports["eqRowNil"] = eqRowNil;
  exports["eqRowCons"] = eqRowCons;
})(PS);
(function(exports) {
  "use strict";

  exports.boolConj = function (b1) {
    return function (b2) {
      return b1 && b2;
    };
  };

  exports.boolDisj = function (b1) {
    return function (b2) {
      return b1 || b2;
    };
  };

  exports.boolNot = function (b) {
    return !b;
  };
})(PS["Data.HeytingAlgebra"] = PS["Data.HeytingAlgebra"] || {});
(function($PS) {
  // Generated by purs version 0.13.8
  "use strict";
  $PS["Data.HeytingAlgebra"] = $PS["Data.HeytingAlgebra"] || {};
  var exports = $PS["Data.HeytingAlgebra"];
  var $foreign = $PS["Data.HeytingAlgebra"];
  var HeytingAlgebra = function (conj, disj, ff, implies, not, tt) {
      this.conj = conj;
      this.disj = disj;
      this.ff = ff;
      this.implies = implies;
      this.not = not;
      this.tt = tt;
  };
  var tt = function (dict) {
      return dict.tt;
  };
  var not = function (dict) {
      return dict.not;
  };
  var ff = function (dict) {
      return dict.ff;
  };
  var disj = function (dict) {
      return dict.disj;
  };
  var heytingAlgebraBoolean = new HeytingAlgebra($foreign.boolConj, $foreign.boolDisj, false, function (a) {
      return function (b) {
          return disj(heytingAlgebraBoolean)(not(heytingAlgebraBoolean)(a))(b);
      };
  }, $foreign.boolNot, true);
  var conj = function (dict) {
      return dict.conj;
  };
  exports["tt"] = tt;
  exports["ff"] = ff;
  exports["conj"] = conj;
  exports["disj"] = disj;
  exports["not"] = not;
  exports["heytingAlgebraBoolean"] = heytingAlgebraBoolean;
})(PS);
(function($PS) {
  // Generated by purs version 0.13.8
  "use strict";
  $PS["Data.Maybe"] = $PS["Data.Maybe"] || {};
  var exports = $PS["Data.Maybe"];
  var Control_Category = $PS["Control.Category"];
  var Data_Eq = $PS["Data.Eq"];
  var Data_Function = $PS["Data.Function"];
  var Data_Functor = $PS["Data.Functor"];          
  var Nothing = (function () {
      function Nothing() {

      };
      Nothing.value = new Nothing();
      return Nothing;
  })();
  var Just = (function () {
      function Just(value0) {
          this.value0 = value0;
      };
      Just.create = function (value0) {
          return new Just(value0);
      };
      return Just;
  })();
  var maybe = function (v) {
      return function (v1) {
          return function (v2) {
              if (v2 instanceof Nothing) {
                  return v;
              };
              if (v2 instanceof Just) {
                  return v1(v2.value0);
              };
              throw new Error("Failed pattern match at Data.Maybe (line 217, column 1 - line 217, column 51): " + [ v.constructor.name, v1.constructor.name, v2.constructor.name ]);
          };
      };
  };
  var isNothing = maybe(true)(Data_Function["const"](false));
  var functorMaybe = new Data_Functor.Functor(function (v) {
      return function (v1) {
          if (v1 instanceof Just) {
              return new Just(v(v1.value0));
          };
          return Nothing.value;
      };
  });
  var fromMaybe = function (a) {
      return maybe(a)(Control_Category.identity(Control_Category.categoryFn));
  };
  var fromJust = function (dictPartial) {
      return function (v) {
          if (v instanceof Just) {
              return v.value0;
          };
          throw new Error("Failed pattern match at Data.Maybe (line 268, column 1 - line 268, column 46): " + [ v.constructor.name ]);
      };
  }; 
  var eqMaybe = function (dictEq) {
      return new Data_Eq.Eq(function (x) {
          return function (y) {
              if (x instanceof Nothing && y instanceof Nothing) {
                  return true;
              };
              if (x instanceof Just && y instanceof Just) {
                  return Data_Eq.eq(dictEq)(x.value0)(y.value0);
              };
              return false;
          };
      });
  };
  exports["Nothing"] = Nothing;
  exports["Just"] = Just;
  exports["maybe"] = maybe;
  exports["fromMaybe"] = fromMaybe;
  exports["isNothing"] = isNothing;
  exports["fromJust"] = fromJust;
  exports["functorMaybe"] = functorMaybe;
  exports["eqMaybe"] = eqMaybe;
})(PS);
(function(exports) {
  "use strict";

  exports.concatString = function (s1) {
    return function (s2) {
      return s1 + s2;
    };
  };

  exports.concatArray = function (xs) {
    return function (ys) {
      if (xs.length === 0) return ys;
      if (ys.length === 0) return xs;
      return xs.concat(ys);
    };
  };
})(PS["Data.Semigroup"] = PS["Data.Semigroup"] || {});
(function($PS) {
  // Generated by purs version 0.13.8
  "use strict";
  $PS["Data.Semigroup"] = $PS["Data.Semigroup"] || {};
  var exports = $PS["Data.Semigroup"];
  var $foreign = $PS["Data.Semigroup"];
  var Semigroup = function (append) {
      this.append = append;
  }; 
  var semigroupString = new Semigroup($foreign.concatString);
  var semigroupArray = new Semigroup($foreign.concatArray);
  var append = function (dict) {
      return dict.append;
  };
  var semigroupFn = function (dictSemigroup) {
      return new Semigroup(function (f) {
          return function (g) {
              return function (x) {
                  return append(dictSemigroup)(f(x))(g(x));
              };
          };
      });
  };
  exports["Semigroup"] = Semigroup;
  exports["append"] = append;
  exports["semigroupString"] = semigroupString;
  exports["semigroupFn"] = semigroupFn;
  exports["semigroupArray"] = semigroupArray;
})(PS);
(function($PS) {
  // Generated by purs version 0.13.8
  "use strict";
  $PS["Data.Monoid"] = $PS["Data.Monoid"] || {};
  var exports = $PS["Data.Monoid"];
  var Data_Semigroup = $PS["Data.Semigroup"];
  var Monoid = function (Semigroup0, mempty) {
      this.Semigroup0 = Semigroup0;
      this.mempty = mempty;
  };                 
  var monoidString = new Monoid(function () {
      return Data_Semigroup.semigroupString;
  }, "");
  var mempty = function (dict) {
      return dict.mempty;
  };
  var monoidFn = function (dictMonoid) {
      return new Monoid(function () {
          return Data_Semigroup.semigroupFn(dictMonoid.Semigroup0());
      }, function (v) {
          return mempty(dictMonoid);
      });
  };
  var guard = function (dictMonoid) {
      return function (v) {
          return function (v1) {
              if (v) {
                  return v1;
              };
              if (!v) {
                  return mempty(dictMonoid);
              };
              throw new Error("Failed pattern match at Data.Monoid (line 73, column 1 - line 73, column 49): " + [ v.constructor.name, v1.constructor.name ]);
          };
      };
  };
  exports["Monoid"] = Monoid;
  exports["mempty"] = mempty;
  exports["guard"] = guard;
  exports["monoidFn"] = monoidFn;
  exports["monoidString"] = monoidString;
})(PS);
(function($PS) {
  // Generated by purs version 0.13.8
  "use strict";
  $PS["Data.Monoid.Conj"] = $PS["Data.Monoid.Conj"] || {};
  var exports = $PS["Data.Monoid.Conj"];
  var Data_HeytingAlgebra = $PS["Data.HeytingAlgebra"];
  var Data_Monoid = $PS["Data.Monoid"];
  var Data_Semigroup = $PS["Data.Semigroup"];      
  var Conj = function (x) {
      return x;
  };
  var semigroupConj = function (dictHeytingAlgebra) {
      return new Data_Semigroup.Semigroup(function (v) {
          return function (v1) {
              return Data_HeytingAlgebra.conj(dictHeytingAlgebra)(v)(v1);
          };
      });
  };
  var monoidConj = function (dictHeytingAlgebra) {
      return new Data_Monoid.Monoid(function () {
          return semigroupConj(dictHeytingAlgebra);
      }, Data_HeytingAlgebra.tt(dictHeytingAlgebra));
  };
  exports["Conj"] = Conj;
  exports["monoidConj"] = monoidConj;
})(PS);
(function($PS) {
  // Generated by purs version 0.13.8
  "use strict";
  $PS["Data.Monoid.Disj"] = $PS["Data.Monoid.Disj"] || {};
  var exports = $PS["Data.Monoid.Disj"];
  var Data_HeytingAlgebra = $PS["Data.HeytingAlgebra"];
  var Data_Monoid = $PS["Data.Monoid"];
  var Data_Semigroup = $PS["Data.Semigroup"];      
  var Disj = function (x) {
      return x;
  };
  var semigroupDisj = function (dictHeytingAlgebra) {
      return new Data_Semigroup.Semigroup(function (v) {
          return function (v1) {
              return Data_HeytingAlgebra.disj(dictHeytingAlgebra)(v)(v1);
          };
      });
  };
  var monoidDisj = function (dictHeytingAlgebra) {
      return new Data_Monoid.Monoid(function () {
          return semigroupDisj(dictHeytingAlgebra);
      }, Data_HeytingAlgebra.ff(dictHeytingAlgebra));
  };
  exports["Disj"] = Disj;
  exports["monoidDisj"] = monoidDisj;
})(PS);
(function($PS) {
  // Generated by purs version 0.13.8
  "use strict";
  $PS["Data.Newtype"] = $PS["Data.Newtype"] || {};
  var exports = $PS["Data.Newtype"];
  var Data_Functor = $PS["Data.Functor"];
  var Data_Monoid_Conj = $PS["Data.Monoid.Conj"];
  var Data_Monoid_Disj = $PS["Data.Monoid.Disj"];                      
  var Newtype = function (unwrap, wrap) {
      this.unwrap = unwrap;
      this.wrap = wrap;
  };
  var wrap = function (dict) {
      return dict.wrap;
  };
  var unwrap = function (dict) {
      return dict.unwrap;
  };
  var un = function (dictNewtype) {
      return function (v) {
          return unwrap(dictNewtype);
      };
  };                        
  var newtypeDisj = new Newtype(function (v) {
      return v;
  }, Data_Monoid_Disj.Disj);
  var newtypeConj = new Newtype(function (v) {
      return v;
  }, Data_Monoid_Conj.Conj);
  var alaF = function (dictFunctor) {
      return function (dictFunctor1) {
          return function (dictNewtype) {
              return function (dictNewtype1) {
                  return function (v) {
                      return function (f) {
                          var $96 = Data_Functor.map(dictFunctor1)(unwrap(dictNewtype1));
                          var $97 = Data_Functor.map(dictFunctor)(wrap(dictNewtype));
                          return function ($98) {
                              return $96(f($97($98)));
                          };
                      };
                  };
              };
          };
      };
  };
  exports["unwrap"] = unwrap;
  exports["wrap"] = wrap;
  exports["Newtype"] = Newtype;
  exports["un"] = un;
  exports["alaF"] = alaF;
  exports["newtypeConj"] = newtypeConj;
  exports["newtypeDisj"] = newtypeDisj;
})(PS);
(function($PS) {
  // Generated by purs version 0.13.8
  "use strict";
  $PS["Data.Foldable"] = $PS["Data.Foldable"] || {};
  var exports = $PS["Data.Foldable"];
  var $foreign = $PS["Data.Foldable"];
  var Control_Applicative = $PS["Control.Applicative"];
  var Control_Apply = $PS["Control.Apply"];
  var Data_Eq = $PS["Data.Eq"];
  var Data_Function = $PS["Data.Function"];
  var Data_Functor = $PS["Data.Functor"];
  var Data_HeytingAlgebra = $PS["Data.HeytingAlgebra"];
  var Data_Maybe = $PS["Data.Maybe"];
  var Data_Monoid = $PS["Data.Monoid"];
  var Data_Monoid_Conj = $PS["Data.Monoid.Conj"];
  var Data_Monoid_Disj = $PS["Data.Monoid.Disj"];
  var Data_Newtype = $PS["Data.Newtype"];
  var Data_Semigroup = $PS["Data.Semigroup"];
  var Data_Unit = $PS["Data.Unit"];                
  var Foldable = function (foldMap, foldl, foldr) {
      this.foldMap = foldMap;
      this.foldl = foldl;
      this.foldr = foldr;
  };
  var foldr = function (dict) {
      return dict.foldr;
  };
  var traverse_ = function (dictApplicative) {
      return function (dictFoldable) {
          return function (f) {
              return foldr(dictFoldable)((function () {
                  var $197 = Control_Apply.applySecond(dictApplicative.Apply0());
                  return function ($198) {
                      return $197(f($198));
                  };
              })())(Control_Applicative.pure(dictApplicative)(Data_Unit.unit));
          };
      };
  };
  var for_ = function (dictApplicative) {
      return function (dictFoldable) {
          return Data_Function.flip(traverse_(dictApplicative)(dictFoldable));
      };
  };
  var foldl = function (dict) {
      return dict.foldl;
  };
  var intercalate = function (dictFoldable) {
      return function (dictMonoid) {
          return function (sep) {
              return function (xs) {
                  var go = function (v) {
                      return function (x) {
                          if (v.init) {
                              return {
                                  init: false,
                                  acc: x
                              };
                          };
                          return {
                              init: false,
                              acc: Data_Semigroup.append(dictMonoid.Semigroup0())(v.acc)(Data_Semigroup.append(dictMonoid.Semigroup0())(sep)(x))
                          };
                      };
                  };
                  return (foldl(dictFoldable)(go)({
                      init: true,
                      acc: Data_Monoid.mempty(dictMonoid)
                  })(xs)).acc;
              };
          };
      };
  }; 
  var foldableMaybe = new Foldable(function (dictMonoid) {
      return function (f) {
          return function (v) {
              if (v instanceof Data_Maybe.Nothing) {
                  return Data_Monoid.mempty(dictMonoid);
              };
              if (v instanceof Data_Maybe.Just) {
                  return f(v.value0);
              };
              throw new Error("Failed pattern match at Data.Foldable (line 129, column 1 - line 135, column 27): " + [ f.constructor.name, v.constructor.name ]);
          };
      };
  }, function (v) {
      return function (z) {
          return function (v1) {
              if (v1 instanceof Data_Maybe.Nothing) {
                  return z;
              };
              if (v1 instanceof Data_Maybe.Just) {
                  return v(z)(v1.value0);
              };
              throw new Error("Failed pattern match at Data.Foldable (line 129, column 1 - line 135, column 27): " + [ v.constructor.name, z.constructor.name, v1.constructor.name ]);
          };
      };
  }, function (v) {
      return function (z) {
          return function (v1) {
              if (v1 instanceof Data_Maybe.Nothing) {
                  return z;
              };
              if (v1 instanceof Data_Maybe.Just) {
                  return v(v1.value0)(z);
              };
              throw new Error("Failed pattern match at Data.Foldable (line 129, column 1 - line 135, column 27): " + [ v.constructor.name, z.constructor.name, v1.constructor.name ]);
          };
      };
  });
  var foldMapDefaultR = function (dictFoldable) {
      return function (dictMonoid) {
          return function (f) {
              return foldr(dictFoldable)(function (x) {
                  return function (acc) {
                      return Data_Semigroup.append(dictMonoid.Semigroup0())(f(x))(acc);
                  };
              })(Data_Monoid.mempty(dictMonoid));
          };
      };
  };
  var foldableArray = new Foldable(function (dictMonoid) {
      return foldMapDefaultR(foldableArray)(dictMonoid);
  }, $foreign.foldlArray, $foreign.foldrArray);
  var foldMap = function (dict) {
      return dict.foldMap;
  };
  var findMap = function (dictFoldable) {
      return function (p) {
          var go = function (v) {
              return function (v1) {
                  if (v instanceof Data_Maybe.Nothing) {
                      return p(v1);
                  };
                  return v;
              };
          };
          return foldl(dictFoldable)(go)(Data_Maybe.Nothing.value);
      };
  };
  var any = function (dictFoldable) {
      return function (dictHeytingAlgebra) {
          return Data_Newtype.alaF(Data_Functor.functorFn)(Data_Functor.functorFn)(Data_Newtype.newtypeDisj)(Data_Newtype.newtypeDisj)(Data_Monoid_Disj.Disj)(foldMap(dictFoldable)(Data_Monoid_Disj.monoidDisj(dictHeytingAlgebra)));
      };
  };
  var elem = function (dictFoldable) {
      return function (dictEq) {
          var $204 = any(dictFoldable)(Data_HeytingAlgebra.heytingAlgebraBoolean);
          var $205 = Data_Eq.eq(dictEq);
          return function ($206) {
              return $204($205($206));
          };
      };
  };
  var all = function (dictFoldable) {
      return function (dictHeytingAlgebra) {
          return Data_Newtype.alaF(Data_Functor.functorFn)(Data_Functor.functorFn)(Data_Newtype.newtypeConj)(Data_Newtype.newtypeConj)(Data_Monoid_Conj.Conj)(foldMap(dictFoldable)(Data_Monoid_Conj.monoidConj(dictHeytingAlgebra)));
      };
  };
  exports["Foldable"] = Foldable;
  exports["foldr"] = foldr;
  exports["foldl"] = foldl;
  exports["foldMap"] = foldMap;
  exports["traverse_"] = traverse_;
  exports["for_"] = for_;
  exports["intercalate"] = intercalate;
  exports["all"] = all;
  exports["elem"] = elem;
  exports["findMap"] = findMap;
  exports["foldableArray"] = foldableArray;
  exports["foldableMaybe"] = foldableMaybe;
})(PS);
(function($PS) {
  // Generated by purs version 0.13.8
  "use strict";
  $PS["Data.Array"] = $PS["Data.Array"] || {};
  var exports = $PS["Data.Array"];
  var $foreign = $PS["Data.Array"];
  var Control_Alt = $PS["Control.Alt"];
  var Control_Applicative = $PS["Control.Applicative"];
  var Control_Apply = $PS["Control.Apply"];
  var Control_Lazy = $PS["Control.Lazy"];
  var Data_Foldable = $PS["Data.Foldable"];
  var Data_Function = $PS["Data.Function"];
  var Data_Functor = $PS["Data.Functor"];
  var Data_Maybe = $PS["Data.Maybe"];
  var updateAt = $foreign["_updateAt"](Data_Maybe.Just.create)(Data_Maybe.Nothing.value);
  var uncons = $foreign["uncons'"](Data_Function["const"](Data_Maybe.Nothing.value))(function (x) {
      return function (xs) {
          return new Data_Maybe.Just({
              head: x,
              tail: xs
          });
      };
  });
  var $$null = function (xs) {
      return $foreign.length(xs) === 0;
  };
  var mapWithIndex = function (f) {
      return function (xs) {
          return $foreign.zipWith(f)($foreign.range(0)($foreign.length(xs) - 1 | 0))(xs);
      };
  };
  var some = function (dictAlternative) {
      return function (dictLazy) {
          return function (v) {
              return Control_Apply.apply((dictAlternative.Applicative0()).Apply0())(Data_Functor.map(((dictAlternative.Plus1()).Alt0()).Functor0())($foreign.cons)(v))(Control_Lazy.defer(dictLazy)(function (v1) {
                  return many(dictAlternative)(dictLazy)(v);
              }));
          };
      };
  };
  var many = function (dictAlternative) {
      return function (dictLazy) {
          return function (v) {
              return Control_Alt.alt((dictAlternative.Plus1()).Alt0())(some(dictAlternative)(dictLazy)(v))(Control_Applicative.pure(dictAlternative.Applicative0())([  ]));
          };
      };
  };
  var index = $foreign.indexImpl(Data_Maybe.Just.create)(Data_Maybe.Nothing.value);
  var modifyAt = function (i) {
      return function (f) {
          return function (xs) {
              var go = function (x) {
                  return updateAt(i)(f(x))(xs);
              };
              return Data_Maybe.maybe(Data_Maybe.Nothing.value)(go)(index(xs)(i));
          };
      };
  };
  var span = function (p) {
      return function (arr) {
          var go = function ($copy_i) {
              var $tco_done = false;
              var $tco_result;
              function $tco_loop(i) {
                  var v = index(arr)(i);
                  if (v instanceof Data_Maybe.Just) {
                      var $60 = p(v.value0);
                      if ($60) {
                          $copy_i = i + 1 | 0;
                          return;
                      };
                      $tco_done = true;
                      return new Data_Maybe.Just(i);
                  };
                  if (v instanceof Data_Maybe.Nothing) {
                      $tco_done = true;
                      return Data_Maybe.Nothing.value;
                  };
                  throw new Error("Failed pattern match at Data.Array (line 834, column 5 - line 836, column 25): " + [ v.constructor.name ]);
              };
              while (!$tco_done) {
                  $tco_result = $tco_loop($copy_i);
              };
              return $tco_result;
          };
          var breakIndex = go(0);
          if (breakIndex instanceof Data_Maybe.Just && breakIndex.value0 === 0) {
              return {
                  init: [  ],
                  rest: arr
              };
          };
          if (breakIndex instanceof Data_Maybe.Just) {
              return {
                  init: $foreign.slice(0)(breakIndex.value0)(arr),
                  rest: $foreign.slice(breakIndex.value0)($foreign.length(arr))(arr)
              };
          };
          if (breakIndex instanceof Data_Maybe.Nothing) {
              return {
                  init: arr,
                  rest: [  ]
              };
          };
          throw new Error("Failed pattern match at Data.Array (line 821, column 3 - line 827, column 30): " + [ breakIndex.constructor.name ]);
      };
  };
  var head = function (xs) {
      return index(xs)(0);
  };
  var fromFoldable = function (dictFoldable) {
      return $foreign.fromFoldableImpl(Data_Foldable.foldr(dictFoldable));
  };
  exports["fromFoldable"] = fromFoldable;
  exports["some"] = some;
  exports["many"] = many;
  exports["null"] = $$null;
  exports["head"] = head;
  exports["uncons"] = uncons;
  exports["modifyAt"] = modifyAt;
  exports["mapWithIndex"] = mapWithIndex;
  exports["span"] = span;
  exports["length"] = $foreign.length;
  exports["cons"] = $foreign.cons;
  exports["snoc"] = $foreign.snoc;
  exports["partition"] = $foreign.partition;
})(PS);
(function($PS) {
  // Generated by purs version 0.13.8
  "use strict";
  $PS["Data.Boolean"] = $PS["Data.Boolean"] || {};
  var exports = $PS["Data.Boolean"];
  var otherwise = true;
  exports["otherwise"] = otherwise;
})(PS);
(function($PS) {
  // Generated by purs version 0.13.8
  "use strict";
  $PS["Control.Bind"] = $PS["Control.Bind"] || {};
  var exports = $PS["Control.Bind"];
  var Data_Function = $PS["Data.Function"];                
  var Discard = function (discard) {
      this.discard = discard;
  };
  var Bind = function (Apply0, bind) {
      this.Apply0 = Apply0;
      this.bind = bind;
  };
  var discard = function (dict) {
      return dict.discard;
  };                     
  var bind = function (dict) {
      return dict.bind;
  };
  var bindFlipped = function (dictBind) {
      return Data_Function.flip(bind(dictBind));
  };
  var composeKleisli = function (dictBind) {
      return function (f) {
          return function (g) {
              return function (a) {
                  return bind(dictBind)(f(a))(g);
              };
          };
      };
  };
  var discardUnit = new Discard(function (dictBind) {
      return bind(dictBind);
  });
  exports["Bind"] = Bind;
  exports["bind"] = bind;
  exports["bindFlipped"] = bindFlipped;
  exports["discard"] = discard;
  exports["composeKleisli"] = composeKleisli;
  exports["discardUnit"] = discardUnit;
})(PS);
(function($PS) {
  // Generated by purs version 0.13.8
  "use strict";
  $PS["Control.Monad"] = $PS["Control.Monad"] || {};
  var exports = $PS["Control.Monad"];
  var Control_Applicative = $PS["Control.Applicative"];
  var Control_Bind = $PS["Control.Bind"];                
  var Monad = function (Applicative0, Bind1) {
      this.Applicative0 = Applicative0;
      this.Bind1 = Bind1;
  };
  var ap = function (dictMonad) {
      return function (f) {
          return function (a) {
              return Control_Bind.bind(dictMonad.Bind1())(f)(function (f$prime) {
                  return Control_Bind.bind(dictMonad.Bind1())(a)(function (a$prime) {
                      return Control_Applicative.pure(dictMonad.Applicative0())(f$prime(a$prime));
                  });
              });
          };
      };
  };
  exports["Monad"] = Monad;
  exports["ap"] = ap;
})(PS);
(function($PS) {
  // Generated by purs version 0.13.8
  "use strict";
  $PS["Data.Bifunctor"] = $PS["Data.Bifunctor"] || {};
  var exports = $PS["Data.Bifunctor"];
  var Control_Category = $PS["Control.Category"];                
  var Bifunctor = function (bimap) {
      this.bimap = bimap;
  };
  var bimap = function (dict) {
      return dict.bimap;
  };
  var lmap = function (dictBifunctor) {
      return function (f) {
          return bimap(dictBifunctor)(f)(Control_Category.identity(Control_Category.categoryFn));
      };
  };
  exports["bimap"] = bimap;
  exports["Bifunctor"] = Bifunctor;
  exports["lmap"] = lmap;
})(PS);
(function($PS) {
  // Generated by purs version 0.13.8
  "use strict";
  $PS["Data.Either"] = $PS["Data.Either"] || {};
  var exports = $PS["Data.Either"];
  var Control_Applicative = $PS["Control.Applicative"];
  var Control_Apply = $PS["Control.Apply"];
  var Control_Bind = $PS["Control.Bind"];
  var Control_Monad = $PS["Control.Monad"];
  var Data_Bifunctor = $PS["Data.Bifunctor"];
  var Data_Foldable = $PS["Data.Foldable"];
  var Data_Functor = $PS["Data.Functor"];
  var Data_Monoid = $PS["Data.Monoid"];            
  var Left = (function () {
      function Left(value0) {
          this.value0 = value0;
      };
      Left.create = function (value0) {
          return new Left(value0);
      };
      return Left;
  })();
  var Right = (function () {
      function Right(value0) {
          this.value0 = value0;
      };
      Right.create = function (value0) {
          return new Right(value0);
      };
      return Right;
  })();
  var functorEither = new Data_Functor.Functor(function (f) {
      return function (m) {
          if (m instanceof Left) {
              return new Left(m.value0);
          };
          if (m instanceof Right) {
              return new Right(f(m.value0));
          };
          throw new Error("Failed pattern match at Data.Either (line 38, column 1 - line 38, column 52): " + [ m.constructor.name ]);
      };
  });
  var foldableEither = new Data_Foldable.Foldable(function (dictMonoid) {
      return function (f) {
          return function (v) {
              if (v instanceof Left) {
                  return Data_Monoid.mempty(dictMonoid);
              };
              if (v instanceof Right) {
                  return f(v.value0);
              };
              throw new Error("Failed pattern match at Data.Either (line 187, column 1 - line 193, column 28): " + [ f.constructor.name, v.constructor.name ]);
          };
      };
  }, function (v) {
      return function (z) {
          return function (v1) {
              if (v1 instanceof Left) {
                  return z;
              };
              if (v1 instanceof Right) {
                  return v(z)(v1.value0);
              };
              throw new Error("Failed pattern match at Data.Either (line 187, column 1 - line 193, column 28): " + [ v.constructor.name, z.constructor.name, v1.constructor.name ]);
          };
      };
  }, function (v) {
      return function (z) {
          return function (v1) {
              if (v1 instanceof Left) {
                  return z;
              };
              if (v1 instanceof Right) {
                  return v(v1.value0)(z);
              };
              throw new Error("Failed pattern match at Data.Either (line 187, column 1 - line 193, column 28): " + [ v.constructor.name, z.constructor.name, v1.constructor.name ]);
          };
      };
  });
  var either = function (v) {
      return function (v1) {
          return function (v2) {
              if (v2 instanceof Left) {
                  return v(v2.value0);
              };
              if (v2 instanceof Right) {
                  return v1(v2.value0);
              };
              throw new Error("Failed pattern match at Data.Either (line 238, column 1 - line 238, column 64): " + [ v.constructor.name, v1.constructor.name, v2.constructor.name ]);
          };
      };
  };
  var bifunctorEither = new Data_Bifunctor.Bifunctor(function (v) {
      return function (v1) {
          return function (v2) {
              if (v2 instanceof Left) {
                  return new Left(v(v2.value0));
              };
              if (v2 instanceof Right) {
                  return new Right(v1(v2.value0));
              };
              throw new Error("Failed pattern match at Data.Either (line 46, column 1 - line 48, column 36): " + [ v.constructor.name, v1.constructor.name, v2.constructor.name ]);
          };
      };
  });
  var applyEither = new Control_Apply.Apply(function () {
      return functorEither;
  }, function (v) {
      return function (v1) {
          if (v instanceof Left) {
              return new Left(v.value0);
          };
          if (v instanceof Right) {
              return Data_Functor.map(functorEither)(v.value0)(v1);
          };
          throw new Error("Failed pattern match at Data.Either (line 82, column 1 - line 84, column 30): " + [ v.constructor.name, v1.constructor.name ]);
      };
  });
  var bindEither = new Control_Bind.Bind(function () {
      return applyEither;
  }, either(function (e) {
      return function (v) {
          return new Left(e);
      };
  })(function (a) {
      return function (f) {
          return f(a);
      };
  }));
  var applicativeEither = new Control_Applicative.Applicative(function () {
      return applyEither;
  }, Right.create);
  var monadEither = new Control_Monad.Monad(function () {
      return applicativeEither;
  }, function () {
      return bindEither;
  });
  exports["Left"] = Left;
  exports["Right"] = Right;
  exports["either"] = either;
  exports["functorEither"] = functorEither;
  exports["bifunctorEither"] = bifunctorEither;
  exports["applicativeEither"] = applicativeEither;
  exports["bindEither"] = bindEither;
  exports["monadEither"] = monadEither;
  exports["foldableEither"] = foldableEither;
})(PS);
(function($PS) {
  // Generated by purs version 0.13.8
  "use strict";
  $PS["Data.Tuple"] = $PS["Data.Tuple"] || {};
  var exports = $PS["Data.Tuple"];
  var Data_Functor = $PS["Data.Functor"];                  
  var Tuple = (function () {
      function Tuple(value0, value1) {
          this.value0 = value0;
          this.value1 = value1;
      };
      Tuple.create = function (value0) {
          return function (value1) {
              return new Tuple(value0, value1);
          };
      };
      return Tuple;
  })();
  var snd = function (v) {
      return v.value1;
  };
  var functorTuple = new Data_Functor.Functor(function (f) {
      return function (m) {
          return new Tuple(m.value0, f(m.value1));
      };
  });                                                                                                   
  var fst = function (v) {
      return v.value0;
  };
  exports["Tuple"] = Tuple;
  exports["fst"] = fst;
  exports["snd"] = snd;
  exports["functorTuple"] = functorTuple;
})(PS);
(function(exports) {
  "use strict";

  // module Partial.Unsafe

  exports.unsafePartial = function (f) {
    return f();
  };
})(PS["Partial.Unsafe"] = PS["Partial.Unsafe"] || {});
(function(exports) {
  "use strict";

  // module Partial

  exports.crashWith = function () {
    return function (msg) {
      throw new Error(msg);
    };
  };
})(PS["Partial"] = PS["Partial"] || {});
(function($PS) {
  // Generated by purs version 0.13.8
  "use strict";
  $PS["Partial"] = $PS["Partial"] || {};
  var exports = $PS["Partial"];
  var $foreign = $PS["Partial"];
  exports["crashWith"] = $foreign.crashWith;
})(PS);
(function($PS) {
  // Generated by purs version 0.13.8
  "use strict";
  $PS["Partial.Unsafe"] = $PS["Partial.Unsafe"] || {};
  var exports = $PS["Partial.Unsafe"];
  var $foreign = $PS["Partial.Unsafe"];
  var Partial = $PS["Partial"];
  var unsafeCrashWith = function (msg) {
      return $foreign.unsafePartial(function (dictPartial) {
          return Partial.crashWith()(msg);
      });
  };
  exports["unsafeCrashWith"] = unsafeCrashWith;
})(PS);
(function(exports) {
  "use strict";

  exports["null"] = null;

  exports.nullable = function (a, r, f) {
    return a == null ? r : f(a);
  };

  exports.notNull = function (x) {
    return x;
  };
})(PS["Data.Nullable"] = PS["Data.Nullable"] || {});
(function($PS) {
  // Generated by purs version 0.13.8
  "use strict";
  $PS["Data.Nullable"] = $PS["Data.Nullable"] || {};
  var exports = $PS["Data.Nullable"];
  var $foreign = $PS["Data.Nullable"];
  var Data_Maybe = $PS["Data.Maybe"];              
  var toNullable = Data_Maybe.maybe($foreign["null"])($foreign.notNull);
  var toMaybe = function (n) {
      return $foreign.nullable(n, Data_Maybe.Nothing.value, Data_Maybe.Just.create);
  };
  exports["toMaybe"] = toMaybe;
  exports["toNullable"] = toNullable;
})(PS);
(function(exports) {
  "use strict";

  exports.new = function (val) {
    return function () {
      return { value: val };
    };
  };

  exports.read = function (ref) {
    return function () {
      return ref.value;
    };
  };

  exports["modify'"] = function (f) {
    return function (ref) {
      return function () {
        var t = f(ref.value);
        ref.value = t.state;
        return t.value;
      };
    };
  };

  exports.write = function (val) {
    return function (ref) {
      return function () {
        ref.value = val;
        return {};
      };
    };
  };
})(PS["Effect.Ref"] = PS["Effect.Ref"] || {});
(function(exports) {
  "use strict";

  exports.pureE = function (a) {
    return function () {
      return a;
    };
  };

  exports.bindE = function (a) {
    return function (f) {
      return function () {
        return f(a())();
      };
    };
  };

  exports.foreachE = function (as) {
    return function (f) {
      return function () {
        for (var i = 0, l = as.length; i < l; i++) {
          f(as[i])();
        }
      };
    };
  };
})(PS["Effect"] = PS["Effect"] || {});
(function($PS) {
  // Generated by purs version 0.13.8
  "use strict";
  $PS["Effect"] = $PS["Effect"] || {};
  var exports = $PS["Effect"];
  var $foreign = $PS["Effect"];
  var Control_Applicative = $PS["Control.Applicative"];
  var Control_Apply = $PS["Control.Apply"];
  var Control_Bind = $PS["Control.Bind"];
  var Control_Monad = $PS["Control.Monad"];
  var Data_Functor = $PS["Data.Functor"];                    
  var monadEffect = new Control_Monad.Monad(function () {
      return applicativeEffect;
  }, function () {
      return bindEffect;
  });
  var bindEffect = new Control_Bind.Bind(function () {
      return applyEffect;
  }, $foreign.bindE);
  var applyEffect = new Control_Apply.Apply(function () {
      return functorEffect;
  }, Control_Monad.ap(monadEffect));
  var applicativeEffect = new Control_Applicative.Applicative(function () {
      return applyEffect;
  }, $foreign.pureE);
  var functorEffect = new Data_Functor.Functor(Control_Applicative.liftA1(applicativeEffect));
  exports["functorEffect"] = functorEffect;
  exports["applyEffect"] = applyEffect;
  exports["applicativeEffect"] = applicativeEffect;
  exports["bindEffect"] = bindEffect;
  exports["monadEffect"] = monadEffect;
  exports["foreachE"] = $foreign.foreachE;
})(PS);
(function($PS) {
  // Generated by purs version 0.13.8
  "use strict";
  $PS["Effect.Ref"] = $PS["Effect.Ref"] || {};
  var exports = $PS["Effect.Ref"];
  var $foreign = $PS["Effect.Ref"];
  var Data_Functor = $PS["Data.Functor"];
  var Effect = $PS["Effect"];                
  var modify = function (f) {
      return $foreign["modify'"](function (s) {
          var s$prime = f(s);
          return {
              state: s$prime,
              value: s$prime
          };
      });
  };
  var modify_ = function (f) {
      return function (s) {
          return Data_Functor["void"](Effect.functorEffect)(modify(f)(s));
      };
  };
  exports["modify_"] = modify_;
  exports["new"] = $foreign["new"];
  exports["read"] = $foreign.read;
  exports["write"] = $foreign.write;
})(PS);
(function(exports) {
  "use strict";

  exports.unsafeToForeign = function (value) {
    return value;
  };

  exports.unsafeFromForeign = function (value) {
    return value;
  };

  exports.typeOf = function (value) {
    return typeof value;
  };

  exports.tagOf = function (value) {
    return Object.prototype.toString.call(value).slice(8, -1);
  };
})(PS["Foreign"] = PS["Foreign"] || {});
(function($PS) {
  // Generated by purs version 0.13.8
  "use strict";
  $PS["Control.Monad.Error.Class"] = $PS["Control.Monad.Error.Class"] || {};
  var exports = $PS["Control.Monad.Error.Class"];                
  var MonadThrow = function (Monad0, throwError) {
      this.Monad0 = Monad0;
      this.throwError = throwError;
  };
  var throwError = function (dict) {
      return dict.throwError;
  };
  exports["throwError"] = throwError;
  exports["MonadThrow"] = MonadThrow;
})(PS);
(function($PS) {
  // Generated by purs version 0.13.8
  "use strict";
  $PS["Control.Monad.State.Class"] = $PS["Control.Monad.State.Class"] || {};
  var exports = $PS["Control.Monad.State.Class"];
  var Data_Tuple = $PS["Data.Tuple"];
  var Data_Unit = $PS["Data.Unit"];                
  var MonadState = function (Monad0, state) {
      this.Monad0 = Monad0;
      this.state = state;
  };
  var state = function (dict) {
      return dict.state;
  };
  var modify_ = function (dictMonadState) {
      return function (f) {
          return state(dictMonadState)(function (s) {
              return new Data_Tuple.Tuple(Data_Unit.unit, f(s));
          });
      };
  };
  var gets = function (dictMonadState) {
      return function (f) {
          return state(dictMonadState)(function (s) {
              return new Data_Tuple.Tuple(f(s), s);
          });
      };
  };
  var get = function (dictMonadState) {
      return state(dictMonadState)(function (s) {
          return new Data_Tuple.Tuple(s, s);
      });
  };
  exports["state"] = state;
  exports["MonadState"] = MonadState;
  exports["get"] = get;
  exports["gets"] = gets;
  exports["modify_"] = modify_;
})(PS);
(function($PS) {
  // Generated by purs version 0.13.8
  "use strict";
  $PS["Control.Monad.Trans.Class"] = $PS["Control.Monad.Trans.Class"] || {};
  var exports = $PS["Control.Monad.Trans.Class"];
  var MonadTrans = function (lift) {
      this.lift = lift;
  };
  var lift = function (dict) {
      return dict.lift;
  };
  exports["lift"] = lift;
  exports["MonadTrans"] = MonadTrans;
})(PS);
(function($PS) {
  // Generated by purs version 0.13.8
  "use strict";
  $PS["Control.Monad.Except.Trans"] = $PS["Control.Monad.Except.Trans"] || {};
  var exports = $PS["Control.Monad.Except.Trans"];
  var Control_Applicative = $PS["Control.Applicative"];
  var Control_Apply = $PS["Control.Apply"];
  var Control_Bind = $PS["Control.Bind"];
  var Control_Monad = $PS["Control.Monad"];
  var Control_Monad_Error_Class = $PS["Control.Monad.Error.Class"];
  var Control_Monad_State_Class = $PS["Control.Monad.State.Class"];
  var Control_Monad_Trans_Class = $PS["Control.Monad.Trans.Class"];
  var Data_Either = $PS["Data.Either"];
  var Data_Functor = $PS["Data.Functor"];                
  var ExceptT = function (x) {
      return x;
  };
  var runExceptT = function (v) {
      return v;
  };          
  var monadTransExceptT = new Control_Monad_Trans_Class.MonadTrans(function (dictMonad) {
      return function (m) {
          return Control_Bind.bind(dictMonad.Bind1())(m)(function (a) {
              return Control_Applicative.pure(dictMonad.Applicative0())(new Data_Either.Right(a));
          });
      };
  });
  var mapExceptT = function (f) {
      return function (v) {
          return f(v);
      };
  };
  var functorExceptT = function (dictFunctor) {
      return new Data_Functor.Functor(function (f) {
          return mapExceptT(Data_Functor.map(dictFunctor)(Data_Functor.map(Data_Either.functorEither)(f)));
      });
  };
  var monadExceptT = function (dictMonad) {
      return new Control_Monad.Monad(function () {
          return applicativeExceptT(dictMonad);
      }, function () {
          return bindExceptT(dictMonad);
      });
  };
  var bindExceptT = function (dictMonad) {
      return new Control_Bind.Bind(function () {
          return applyExceptT(dictMonad);
      }, function (v) {
          return function (k) {
              return Control_Bind.bind(dictMonad.Bind1())(v)(Data_Either.either((function () {
                  var $90 = Control_Applicative.pure(dictMonad.Applicative0());
                  return function ($91) {
                      return $90(Data_Either.Left.create($91));
                  };
              })())(function (a) {
                  var v1 = k(a);
                  return v1;
              }));
          };
      });
  };
  var applyExceptT = function (dictMonad) {
      return new Control_Apply.Apply(function () {
          return functorExceptT(((dictMonad.Bind1()).Apply0()).Functor0());
      }, Control_Monad.ap(monadExceptT(dictMonad)));
  };
  var applicativeExceptT = function (dictMonad) {
      return new Control_Applicative.Applicative(function () {
          return applyExceptT(dictMonad);
      }, (function () {
          var $92 = Control_Applicative.pure(dictMonad.Applicative0());
          return function ($93) {
              return ExceptT($92(Data_Either.Right.create($93)));
          };
      })());
  };
  var monadStateExceptT = function (dictMonadState) {
      return new Control_Monad_State_Class.MonadState(function () {
          return monadExceptT(dictMonadState.Monad0());
      }, function (f) {
          return Control_Monad_Trans_Class.lift(monadTransExceptT)(dictMonadState.Monad0())(Control_Monad_State_Class.state(dictMonadState)(f));
      });
  };
  var monadThrowExceptT = function (dictMonad) {
      return new Control_Monad_Error_Class.MonadThrow(function () {
          return monadExceptT(dictMonad);
      }, (function () {
          var $102 = Control_Applicative.pure(dictMonad.Applicative0());
          return function ($103) {
              return ExceptT($102(Data_Either.Left.create($103)));
          };
      })());
  };
  exports["ExceptT"] = ExceptT;
  exports["runExceptT"] = runExceptT;
  exports["functorExceptT"] = functorExceptT;
  exports["applyExceptT"] = applyExceptT;
  exports["applicativeExceptT"] = applicativeExceptT;
  exports["bindExceptT"] = bindExceptT;
  exports["monadThrowExceptT"] = monadThrowExceptT;
  exports["monadStateExceptT"] = monadStateExceptT;
})(PS);
(function($PS) {
  // Generated by purs version 0.13.8
  "use strict";
  $PS["Data.Identity"] = $PS["Data.Identity"] || {};
  var exports = $PS["Data.Identity"];
  var Control_Applicative = $PS["Control.Applicative"];
  var Control_Apply = $PS["Control.Apply"];
  var Control_Bind = $PS["Control.Bind"];
  var Control_Monad = $PS["Control.Monad"];
  var Data_Functor = $PS["Data.Functor"];
  var Data_Newtype = $PS["Data.Newtype"];          
  var Identity = function (x) {
      return x;
  };
  var newtypeIdentity = new Data_Newtype.Newtype(function (n) {
      return n;
  }, Identity);
  var functorIdentity = new Data_Functor.Functor(function (f) {
      return function (m) {
          return f(m);
      };
  });
  var applyIdentity = new Control_Apply.Apply(function () {
      return functorIdentity;
  }, function (v) {
      return function (v1) {
          return v(v1);
      };
  });
  var bindIdentity = new Control_Bind.Bind(function () {
      return applyIdentity;
  }, function (v) {
      return function (f) {
          return f(v);
      };
  });
  var applicativeIdentity = new Control_Applicative.Applicative(function () {
      return applyIdentity;
  }, Identity);
  var monadIdentity = new Control_Monad.Monad(function () {
      return applicativeIdentity;
  }, function () {
      return bindIdentity;
  });
  exports["newtypeIdentity"] = newtypeIdentity;
  exports["functorIdentity"] = functorIdentity;
  exports["monadIdentity"] = monadIdentity;
})(PS);
(function($PS) {
  // Generated by purs version 0.13.8
  "use strict";
  $PS["Control.Plus"] = $PS["Control.Plus"] || {};
  var exports = $PS["Control.Plus"];                   
  var Plus = function (Alt0, empty) {
      this.Alt0 = Alt0;
      this.empty = empty;
  };       
  var empty = function (dict) {
      return dict.empty;
  };
  exports["Plus"] = Plus;
  exports["empty"] = empty;
})(PS);
(function($PS) {
  // Generated by purs version 0.13.8
  "use strict";
  $PS["Data.List.Types"] = $PS["Data.List.Types"] || {};
  var exports = $PS["Data.List.Types"];
  var Control_Alt = $PS["Control.Alt"];
  var Control_Applicative = $PS["Control.Applicative"];
  var Control_Apply = $PS["Control.Apply"];
  var Control_Plus = $PS["Control.Plus"];
  var Data_Foldable = $PS["Data.Foldable"];
  var Data_Function = $PS["Data.Function"];
  var Data_Functor = $PS["Data.Functor"];
  var Data_Monoid = $PS["Data.Monoid"];
  var Data_Semigroup = $PS["Data.Semigroup"];                    
  var Nil = (function () {
      function Nil() {

      };
      Nil.value = new Nil();
      return Nil;
  })();
  var Cons = (function () {
      function Cons(value0, value1) {
          this.value0 = value0;
          this.value1 = value1;
      };
      Cons.create = function (value0) {
          return function (value1) {
              return new Cons(value0, value1);
          };
      };
      return Cons;
  })();
  var NonEmptyList = function (x) {
      return x;
  };
  var listMap = function (f) {
      var chunkedRevMap = function ($copy_chunksAcc) {
          return function ($copy_v) {
              var $tco_var_chunksAcc = $copy_chunksAcc;
              var $tco_done = false;
              var $tco_result;
              function $tco_loop(chunksAcc, v) {
                  if (v instanceof Cons && (v.value1 instanceof Cons && v.value1.value1 instanceof Cons)) {
                      $tco_var_chunksAcc = new Cons(v, chunksAcc);
                      $copy_v = v.value1.value1.value1;
                      return;
                  };
                  var unrolledMap = function (v1) {
                      if (v1 instanceof Cons && (v1.value1 instanceof Cons && v1.value1.value1 instanceof Nil)) {
                          return new Cons(f(v1.value0), new Cons(f(v1.value1.value0), Nil.value));
                      };
                      if (v1 instanceof Cons && v1.value1 instanceof Nil) {
                          return new Cons(f(v1.value0), Nil.value);
                      };
                      return Nil.value;
                  };
                  var reverseUnrolledMap = function ($copy_v1) {
                      return function ($copy_acc) {
                          var $tco_var_v1 = $copy_v1;
                          var $tco_done = false;
                          var $tco_result;
                          function $tco_loop(v1, acc) {
                              if (v1 instanceof Cons && (v1.value0 instanceof Cons && (v1.value0.value1 instanceof Cons && v1.value0.value1.value1 instanceof Cons))) {
                                  $tco_var_v1 = v1.value1;
                                  $copy_acc = new Cons(f(v1.value0.value0), new Cons(f(v1.value0.value1.value0), new Cons(f(v1.value0.value1.value1.value0), acc)));
                                  return;
                              };
                              $tco_done = true;
                              return acc;
                          };
                          while (!$tco_done) {
                              $tco_result = $tco_loop($tco_var_v1, $copy_acc);
                          };
                          return $tco_result;
                      };
                  };
                  $tco_done = true;
                  return reverseUnrolledMap(chunksAcc)(unrolledMap(v));
              };
              while (!$tco_done) {
                  $tco_result = $tco_loop($tco_var_chunksAcc, $copy_v);
              };
              return $tco_result;
          };
      };
      return chunkedRevMap(Nil.value);
  };
  var functorList = new Data_Functor.Functor(listMap);                 
  var foldableList = new Data_Foldable.Foldable(function (dictMonoid) {
      return function (f) {
          return Data_Foldable.foldl(foldableList)(function (acc) {
              var $202 = Data_Semigroup.append(dictMonoid.Semigroup0())(acc);
              return function ($203) {
                  return $202(f($203));
              };
          })(Data_Monoid.mempty(dictMonoid));
      };
  }, function (f) {
      var go = function ($copy_b) {
          return function ($copy_v) {
              var $tco_var_b = $copy_b;
              var $tco_done = false;
              var $tco_result;
              function $tco_loop(b, v) {
                  if (v instanceof Nil) {
                      $tco_done = true;
                      return b;
                  };
                  if (v instanceof Cons) {
                      $tco_var_b = f(b)(v.value0);
                      $copy_v = v.value1;
                      return;
                  };
                  throw new Error("Failed pattern match at Data.List.Types (line 109, column 12 - line 111, column 30): " + [ v.constructor.name ]);
              };
              while (!$tco_done) {
                  $tco_result = $tco_loop($tco_var_b, $copy_v);
              };
              return $tco_result;
          };
      };
      return go;
  }, function (f) {
      return function (b) {
          var rev = Data_Foldable.foldl(foldableList)(Data_Function.flip(Cons.create))(Nil.value);
          var $204 = Data_Foldable.foldl(foldableList)(Data_Function.flip(f))(b);
          return function ($205) {
              return $204(rev($205));
          };
      };
  });
  var semigroupList = new Data_Semigroup.Semigroup(function (xs) {
      return function (ys) {
          return Data_Foldable.foldr(foldableList)(Cons.create)(ys)(xs);
      };
  });
  var applyList = new Control_Apply.Apply(function () {
      return functorList;
  }, function (v) {
      return function (v1) {
          if (v instanceof Nil) {
              return Nil.value;
          };
          if (v instanceof Cons) {
              return Data_Semigroup.append(semigroupList)(Data_Functor.map(functorList)(v.value0)(v1))(Control_Apply.apply(applyList)(v.value1)(v1));
          };
          throw new Error("Failed pattern match at Data.List.Types (line 155, column 1 - line 157, column 48): " + [ v.constructor.name, v1.constructor.name ]);
      };
  });
  var applicativeList = new Control_Applicative.Applicative(function () {
      return applyList;
  }, function (a) {
      return new Cons(a, Nil.value);
  });                                              
  var altList = new Control_Alt.Alt(function () {
      return functorList;
  }, Data_Semigroup.append(semigroupList));
  var plusList = new Control_Plus.Plus(function () {
      return altList;
  }, Nil.value);
  exports["Nil"] = Nil;
  exports["Cons"] = Cons;
  exports["NonEmptyList"] = NonEmptyList;
  exports["semigroupList"] = semigroupList;
  exports["foldableList"] = foldableList;
  exports["applicativeList"] = applicativeList;
  exports["plusList"] = plusList;
})(PS);
(function($PS) {
  // Generated by purs version 0.13.8
  "use strict";
  $PS["Data.NonEmpty"] = $PS["Data.NonEmpty"] || {};
  var exports = $PS["Data.NonEmpty"];
  var Control_Plus = $PS["Control.Plus"];                        
  var NonEmpty = (function () {
      function NonEmpty(value0, value1) {
          this.value0 = value0;
          this.value1 = value1;
      };
      NonEmpty.create = function (value0) {
          return function (value1) {
              return new NonEmpty(value0, value1);
          };
      };
      return NonEmpty;
  })();
  var singleton = function (dictPlus) {
      return function (a) {
          return new NonEmpty(a, Control_Plus.empty(dictPlus));
      };
  };
  exports["NonEmpty"] = NonEmpty;
  exports["singleton"] = singleton;
})(PS);
(function($PS) {
  // Generated by purs version 0.13.8
  "use strict";
  $PS["Data.List.NonEmpty"] = $PS["Data.List.NonEmpty"] || {};
  var exports = $PS["Data.List.NonEmpty"];
  var Data_List_Types = $PS["Data.List.Types"];
  var Data_NonEmpty = $PS["Data.NonEmpty"];
  var toList = function (v) {
      return new Data_List_Types.Cons(v.value0, v.value1);
  };
  var singleton = (function () {
      var $168 = Data_NonEmpty.singleton(Data_List_Types.plusList);
      return function ($169) {
          return Data_List_Types.NonEmptyList($168($169));
      };
  })();
  exports["toList"] = toList;
  exports["singleton"] = singleton;
})(PS);
(function($PS) {
  // Generated by purs version 0.13.8
  "use strict";
  $PS["Foreign"] = $PS["Foreign"] || {};
  var exports = $PS["Foreign"];
  var $foreign = $PS["Foreign"];
  var Control_Applicative = $PS["Control.Applicative"];
  var Control_Monad_Error_Class = $PS["Control.Monad.Error.Class"];
  var Control_Monad_Except_Trans = $PS["Control.Monad.Except.Trans"];
  var Data_Boolean = $PS["Data.Boolean"];
  var Data_Identity = $PS["Data.Identity"];
  var Data_List_NonEmpty = $PS["Data.List.NonEmpty"];
  var TypeMismatch = (function () {
      function TypeMismatch(value0, value1) {
          this.value0 = value0;
          this.value1 = value1;
      };
      TypeMismatch.create = function (value0) {
          return function (value1) {
              return new TypeMismatch(value0, value1);
          };
      };
      return TypeMismatch;
  })();
  var fail = (function () {
      var $107 = Control_Monad_Error_Class.throwError(Control_Monad_Except_Trans.monadThrowExceptT(Data_Identity.monadIdentity));
      return function ($108) {
          return $107(Data_List_NonEmpty.singleton($108));
      };
  })();
  var unsafeReadTagged = function (tag) {
      return function (value) {
          if ($foreign.tagOf(value) === tag) {
              return Control_Applicative.pure(Control_Monad_Except_Trans.applicativeExceptT(Data_Identity.monadIdentity))($foreign.unsafeFromForeign(value));
          };
          if (Data_Boolean.otherwise) {
              return fail(new TypeMismatch(tag, $foreign.tagOf(value)));
          };
          throw new Error("Failed pattern match at Foreign (line 106, column 1 - line 106, column 55): " + [ tag.constructor.name, value.constructor.name ]);
      };
  };
  var readString = unsafeReadTagged("String");
  exports["TypeMismatch"] = TypeMismatch;
  exports["readString"] = readString;
  exports["fail"] = fail;
  exports["unsafeToForeign"] = $foreign.unsafeToForeign;
  exports["typeOf"] = $foreign.typeOf;
})(PS);
(function(exports) {
  "use strict";

  exports._lookup = function (no, yes, k, m) {
    return k in m ? yes(m[k]) : no;
  };

  function toArrayWithKey(f) {
    return function (m) {
      var r = [];
      for (var k in m) {
        if (hasOwnProperty.call(m, k)) {
          r.push(f(k)(m[k]));
        }
      }
      return r;
    };
  }
})(PS["Foreign.Object"] = PS["Foreign.Object"] || {});
(function(exports) {
  "use strict";

  exports.runFn4 = function (fn) {
    return function (a) {
      return function (b) {
        return function (c) {
          return function (d) {
            return fn(a, b, c, d);
          };
        };
      };
    };
  };
})(PS["Data.Function.Uncurried"] = PS["Data.Function.Uncurried"] || {});
(function($PS) {
  // Generated by purs version 0.13.8
  "use strict";
  $PS["Data.Function.Uncurried"] = $PS["Data.Function.Uncurried"] || {};
  var exports = $PS["Data.Function.Uncurried"];
  var $foreign = $PS["Data.Function.Uncurried"];
  exports["runFn4"] = $foreign.runFn4;
})(PS);
(function($PS) {
  // Generated by purs version 0.13.8
  "use strict";
  $PS["Foreign.Object"] = $PS["Foreign.Object"] || {};
  var exports = $PS["Foreign.Object"];
  var $foreign = $PS["Foreign.Object"];
  var Data_Function_Uncurried = $PS["Data.Function.Uncurried"];
  var Data_Maybe = $PS["Data.Maybe"];
  var lookup = Data_Function_Uncurried.runFn4($foreign["_lookup"])(Data_Maybe.Nothing.value)(Data_Maybe.Just.create);
  exports["lookup"] = lookup;
})(PS);
(function(exports) {
  "use strict";

  // module Unsafe.Coerce

  exports.unsafeCoerce = function (x) {
    return x;
  };
})(PS["Unsafe.Coerce"] = PS["Unsafe.Coerce"] || {});
(function($PS) {
  // Generated by purs version 0.13.8
  "use strict";
  $PS["Unsafe.Coerce"] = $PS["Unsafe.Coerce"] || {};
  var exports = $PS["Unsafe.Coerce"];
  var $foreign = $PS["Unsafe.Coerce"];
  exports["unsafeCoerce"] = $foreign.unsafeCoerce;
})(PS);
(function($PS) {
  // Generated by purs version 0.13.8
  "use strict";
  $PS["Halogen.VDom.Machine"] = $PS["Halogen.VDom.Machine"] || {};
  var exports = $PS["Halogen.VDom.Machine"];
  var Unsafe_Coerce = $PS["Unsafe.Coerce"];                
  var Step = (function () {
      function Step(value0, value1, value2, value3) {
          this.value0 = value0;
          this.value1 = value1;
          this.value2 = value2;
          this.value3 = value3;
      };
      Step.create = function (value0) {
          return function (value1) {
              return function (value2) {
                  return function (value3) {
                      return new Step(value0, value1, value2, value3);
                  };
              };
          };
      };
      return Step;
  })();
  var unStep = Unsafe_Coerce.unsafeCoerce;
  var step = function (v, a) {
      return v.value2(v.value1, a);
  };
  var mkStep = Unsafe_Coerce.unsafeCoerce;
  var halt = function (v) {
      return v.value3(v.value1);
  };
  var extract = unStep(function (v) {
      return v.value0;
  });
  exports["Step"] = Step;
  exports["mkStep"] = mkStep;
  exports["unStep"] = unStep;
  exports["extract"] = extract;
  exports["step"] = step;
  exports["halt"] = halt;
})(PS);
(function(exports) {
  "use strict";

  exports.unsafeGetAny = function (key, obj) {
    return obj[key];
  };

  exports.unsafeHasAny = function (key, obj) {
    return obj.hasOwnProperty(key);
  };

  exports.unsafeSetAny = function (key, val, obj) {
      obj[key] = val;
  };

  exports.forE = function (a, f) {
    var b = [];
    for (var i = 0; i < a.length; i++) {
      b.push(f(i, a[i]));
    }
    return b;
  };

  exports.forEachE = function (a, f) {
    for (var i = 0; i < a.length; i++) {
      f(a[i]);
    }
  };

  exports.forInE = function (o, f) {
    var ks = Object.keys(o);
    for (var i = 0; i < ks.length; i++) {
      var k = ks[i];
      f(k, o[k]);
    }
  };

  exports.diffWithIxE = function (a1, a2, f1, f2, f3) {
    var a3 = [];
    var l1 = a1.length;
    var l2 = a2.length;
    var i  = 0;
    while (1) {
      if (i < l1) {
        if (i < l2) {
          a3.push(f1(i, a1[i], a2[i]));
        } else {
          f2(i, a1[i]);
        }
      } else if (i < l2) {
        a3.push(f3(i, a2[i]));
      } else {
        break;
      }
      i++;
    }
    return a3;
  };

  exports.strMapWithIxE = function (as, fk, f) {
    var o = {};
    for (var i = 0; i < as.length; i++) {
      var a = as[i];
      var k = fk(a);
      o[k] = f(k, i, a);
    }
    return o;
  };

  exports.diffWithKeyAndIxE = function (o1, as, fk, f1, f2, f3) {
    var o2 = {};
    for (var i = 0; i < as.length; i++) {
      var a = as[i];
      var k = fk(a);
      if (o1.hasOwnProperty(k)) {
        o2[k] = f1(k, i, o1[k], a);
      } else {
        o2[k] = f3(k, i, a);
      }
    }
    for (var k in o1) {
      if (k in o2) {
        continue;
      }
      f2(k, o1[k]);
    }
    return o2;
  };

  exports.refEq = function (a, b) {
    return a === b;
  };

  exports.createTextNode = function (s, doc) {
    return doc.createTextNode(s);
  };

  exports.setTextContent = function (s, n) {
    n.textContent = s;
  };

  exports.createElement = function (ns, name, doc) {
    if (ns != null) {
      return doc.createElementNS(ns, name);
    } else {
      return doc.createElement(name)
    }
  };

  exports.insertChildIx = function (i, a, b) {
    var n = b.childNodes.item(i) || null;
    if (n !== a) {
      b.insertBefore(a, n);
    }
  };

  exports.removeChild = function (a, b) {
    if (b && a.parentNode === b) {
      b.removeChild(a);
    }
  };

  exports.parentNode = function (a) {
    return a.parentNode;
  };

  exports.setAttribute = function (ns, attr, val, el) {
    if (ns != null) {
      el.setAttributeNS(ns, attr, val);
    } else {
      el.setAttribute(attr, val);
    }
  };

  exports.removeAttribute = function (ns, attr, el) {
    if (ns != null) {
      el.removeAttributeNS(ns, attr);
    } else {
      el.removeAttribute(attr);
    }
  };

  exports.addEventListener = function (ev, listener, el) {
    el.addEventListener(ev, listener, false);
  };

  exports.removeEventListener = function (ev, listener, el) {
    el.removeEventListener(ev, listener, false);
  };

  exports.jsUndefined = void 0;
})(PS["Halogen.VDom.Util"] = PS["Halogen.VDom.Util"] || {});
(function(exports) {
  "use strict";

  exports["new"] = function () {
    return {};
  };
})(PS["Foreign.Object.ST"] = PS["Foreign.Object.ST"] || {});
(function($PS) {
  // Generated by purs version 0.13.8
  "use strict";
  $PS["Foreign.Object.ST"] = $PS["Foreign.Object.ST"] || {};
  var exports = $PS["Foreign.Object.ST"];
  var $foreign = $PS["Foreign.Object.ST"];
  exports["new"] = $foreign["new"];
})(PS);
(function($PS) {
  // Generated by purs version 0.13.8
  "use strict";
  $PS["Halogen.VDom.Util"] = $PS["Halogen.VDom.Util"] || {};
  var exports = $PS["Halogen.VDom.Util"];
  var $foreign = $PS["Halogen.VDom.Util"];
  var Foreign_Object_ST = $PS["Foreign.Object.ST"];
  var Unsafe_Coerce = $PS["Unsafe.Coerce"];                
  var unsafeLookup = $foreign.unsafeGetAny;
  var unsafeFreeze = Unsafe_Coerce.unsafeCoerce;
  var pokeMutMap = $foreign.unsafeSetAny;
  var newMutMap = Foreign_Object_ST["new"];
  exports["newMutMap"] = newMutMap;
  exports["pokeMutMap"] = pokeMutMap;
  exports["unsafeFreeze"] = unsafeFreeze;
  exports["unsafeLookup"] = unsafeLookup;
  exports["unsafeGetAny"] = $foreign.unsafeGetAny;
  exports["unsafeHasAny"] = $foreign.unsafeHasAny;
  exports["unsafeSetAny"] = $foreign.unsafeSetAny;
  exports["forE"] = $foreign.forE;
  exports["forEachE"] = $foreign.forEachE;
  exports["forInE"] = $foreign.forInE;
  exports["diffWithIxE"] = $foreign.diffWithIxE;
  exports["diffWithKeyAndIxE"] = $foreign.diffWithKeyAndIxE;
  exports["strMapWithIxE"] = $foreign.strMapWithIxE;
  exports["refEq"] = $foreign.refEq;
  exports["createTextNode"] = $foreign.createTextNode;
  exports["setTextContent"] = $foreign.setTextContent;
  exports["createElement"] = $foreign.createElement;
  exports["insertChildIx"] = $foreign.insertChildIx;
  exports["removeChild"] = $foreign.removeChild;
  exports["parentNode"] = $foreign.parentNode;
  exports["setAttribute"] = $foreign.setAttribute;
  exports["removeAttribute"] = $foreign.removeAttribute;
  exports["addEventListener"] = $foreign.addEventListener;
  exports["removeEventListener"] = $foreign.removeEventListener;
  exports["jsUndefined"] = $foreign.jsUndefined;
})(PS);
(function(exports) {
  "use strict";

  exports.eventListener = function (fn) {
    return function () {
      return function (event) {
        return fn(event)();
      };
    };
  };
})(PS["Web.Event.EventTarget"] = PS["Web.Event.EventTarget"] || {});
(function($PS) {
  // Generated by purs version 0.13.8
  "use strict";
  $PS["Web.Event.EventTarget"] = $PS["Web.Event.EventTarget"] || {};
  var exports = $PS["Web.Event.EventTarget"];
  var $foreign = $PS["Web.Event.EventTarget"];
  exports["eventListener"] = $foreign.eventListener;
})(PS);
(function($PS) {
  // Generated by purs version 0.13.8
  "use strict";
  $PS["Halogen.VDom.DOM.Prop"] = $PS["Halogen.VDom.DOM.Prop"] || {};
  var exports = $PS["Halogen.VDom.DOM.Prop"];
  var Data_Functor = $PS["Data.Functor"];
  var Data_Maybe = $PS["Data.Maybe"];
  var Data_Nullable = $PS["Data.Nullable"];
  var Data_Tuple = $PS["Data.Tuple"];
  var Data_Unit = $PS["Data.Unit"];
  var Effect_Ref = $PS["Effect.Ref"];
  var Foreign = $PS["Foreign"];
  var Foreign_Object = $PS["Foreign.Object"];
  var Halogen_VDom_Machine = $PS["Halogen.VDom.Machine"];
  var Halogen_VDom_Util = $PS["Halogen.VDom.Util"];
  var Unsafe_Coerce = $PS["Unsafe.Coerce"];
  var Web_Event_EventTarget = $PS["Web.Event.EventTarget"];                
  var Created = (function () {
      function Created(value0) {
          this.value0 = value0;
      };
      Created.create = function (value0) {
          return new Created(value0);
      };
      return Created;
  })();
  var Removed = (function () {
      function Removed(value0) {
          this.value0 = value0;
      };
      Removed.create = function (value0) {
          return new Removed(value0);
      };
      return Removed;
  })();
  var Attribute = (function () {
      function Attribute(value0, value1, value2) {
          this.value0 = value0;
          this.value1 = value1;
          this.value2 = value2;
      };
      Attribute.create = function (value0) {
          return function (value1) {
              return function (value2) {
                  return new Attribute(value0, value1, value2);
              };
          };
      };
      return Attribute;
  })();
  var Property = (function () {
      function Property(value0, value1) {
          this.value0 = value0;
          this.value1 = value1;
      };
      Property.create = function (value0) {
          return function (value1) {
              return new Property(value0, value1);
          };
      };
      return Property;
  })();
  var Handler = (function () {
      function Handler(value0, value1) {
          this.value0 = value0;
          this.value1 = value1;
      };
      Handler.create = function (value0) {
          return function (value1) {
              return new Handler(value0, value1);
          };
      };
      return Handler;
  })();
  var Ref = (function () {
      function Ref(value0) {
          this.value0 = value0;
      };
      Ref.create = function (value0) {
          return new Ref(value0);
      };
      return Ref;
  })();
  var unsafeGetProperty = Halogen_VDom_Util.unsafeGetAny;
  var setProperty = Halogen_VDom_Util.unsafeSetAny;
  var removeProperty = function (key, el) {
      var v = Foreign.typeOf(Halogen_VDom_Util.unsafeGetAny(key, el));
      if (v === "string") {
          return Halogen_VDom_Util.unsafeSetAny(key, "", el);
      };
      if (key === "rowSpan") {
          return Halogen_VDom_Util.unsafeSetAny(key, 1, el);
      };
      if (key === "colSpan") {
          return Halogen_VDom_Util.unsafeSetAny(key, 1, el);
      };
      return Halogen_VDom_Util.unsafeSetAny(key, Halogen_VDom_Util.jsUndefined, el);
  };
  var propToStrKey = function (v) {
      if (v instanceof Attribute && v.value0 instanceof Data_Maybe.Just) {
          return "attr/" + (v.value0.value0 + (":" + v.value1));
      };
      if (v instanceof Attribute) {
          return "attr/:" + v.value1;
      };
      if (v instanceof Property) {
          return "prop/" + v.value0;
      };
      if (v instanceof Handler) {
          return "handler/" + v.value0;
      };
      if (v instanceof Ref) {
          return "ref";
      };
      throw new Error("Failed pattern match at Halogen.VDom.DOM.Prop (line 182, column 16 - line 187, column 16): " + [ v.constructor.name ]);
  };
  var propFromString = Unsafe_Coerce.unsafeCoerce; 
  var functorProp = new Data_Functor.Functor(function (f) {
      return function (v) {
          if (v instanceof Handler) {
              return new Handler(v.value0, Data_Functor.map(Data_Functor.functorFn)(Data_Functor.map(Data_Maybe.functorMaybe)(f))(v.value1));
          };
          if (v instanceof Ref) {
              return new Ref(Data_Functor.map(Data_Functor.functorFn)(Data_Functor.map(Data_Maybe.functorMaybe)(f))(v.value0));
          };
          return v;
      };
  });
  var buildProp = function (emit) {
      return function (el) {
          var removeProp = function (prevEvents) {
              return function (v, v1) {
                  if (v1 instanceof Attribute) {
                      return Halogen_VDom_Util.removeAttribute(Data_Nullable.toNullable(v1.value0), v1.value1, el);
                  };
                  if (v1 instanceof Property) {
                      return removeProperty(v1.value0, el);
                  };
                  if (v1 instanceof Handler) {
                      var handler = Halogen_VDom_Util.unsafeLookup(v1.value0, prevEvents);
                      return Halogen_VDom_Util.removeEventListener(v1.value0, Data_Tuple.fst(handler), el);
                  };
                  if (v1 instanceof Ref) {
                      return Data_Unit.unit;
                  };
                  throw new Error("Failed pattern match at Halogen.VDom.DOM.Prop (line 169, column 5 - line 179, column 18): " + [ v1.constructor.name ]);
              };
          };
          var mbEmit = function (v) {
              if (v instanceof Data_Maybe.Just) {
                  return emit(v.value0)();
              };
              return Data_Unit.unit;
          };
          var haltProp = function (state) {
              var v = Foreign_Object.lookup("ref")(state.props);
              if (v instanceof Data_Maybe.Just && v.value0 instanceof Ref) {
                  return mbEmit(v.value0.value0(new Removed(el)));
              };
              return Data_Unit.unit;
          };
          var diffProp = function (prevEvents, events) {
              return function (v, v1, v11, v2) {
                  if (v11 instanceof Attribute && v2 instanceof Attribute) {
                      var $54 = v11.value2 === v2.value2;
                      if ($54) {
                          return v2;
                      };
                      Halogen_VDom_Util.setAttribute(Data_Nullable.toNullable(v2.value0), v2.value1, v2.value2, el);
                      return v2;
                  };
                  if (v11 instanceof Property && v2 instanceof Property) {
                      var v4 = Halogen_VDom_Util.refEq(v11.value1, v2.value1);
                      if (v4) {
                          return v2;
                      };
                      if (v2.value0 === "value") {
                          var elVal = unsafeGetProperty("value", el);
                          var $63 = Halogen_VDom_Util.refEq(elVal, v2.value1);
                          if ($63) {
                              return v2;
                          };
                          setProperty(v2.value0, v2.value1, el);
                          return v2;
                      };
                      setProperty(v2.value0, v2.value1, el);
                      return v2;
                  };
                  if (v11 instanceof Handler && v2 instanceof Handler) {
                      var handler = Halogen_VDom_Util.unsafeLookup(v2.value0, prevEvents);
                      Effect_Ref.write(v2.value1)(Data_Tuple.snd(handler))();
                      Halogen_VDom_Util.pokeMutMap(v2.value0, handler, events);
                      return v2;
                  };
                  return v2;
              };
          };
          var applyProp = function (events) {
              return function (v, v1, v2) {
                  if (v2 instanceof Attribute) {
                      Halogen_VDom_Util.setAttribute(Data_Nullable.toNullable(v2.value0), v2.value1, v2.value2, el);
                      return v2;
                  };
                  if (v2 instanceof Property) {
                      setProperty(v2.value0, v2.value1, el);
                      return v2;
                  };
                  if (v2 instanceof Handler) {
                      var v3 = Halogen_VDom_Util.unsafeGetAny(v2.value0, events);
                      if (Halogen_VDom_Util.unsafeHasAny(v2.value0, events)) {
                          Effect_Ref.write(v2.value1)(Data_Tuple.snd(v3))();
                          return v2;
                      };
                      var ref = Effect_Ref["new"](v2.value1)();
                      var listener = Web_Event_EventTarget.eventListener(function (ev) {
                          return function __do() {
                              var f$prime = Effect_Ref.read(ref)();
                              return mbEmit(f$prime(ev));
                          };
                      })();
                      Halogen_VDom_Util.pokeMutMap(v2.value0, new Data_Tuple.Tuple(listener, ref), events);
                      Halogen_VDom_Util.addEventListener(v2.value0, listener, el);
                      return v2;
                  };
                  if (v2 instanceof Ref) {
                      mbEmit(v2.value0(new Created(el)));
                      return v2;
                  };
                  throw new Error("Failed pattern match at Halogen.VDom.DOM.Prop (line 113, column 5 - line 135, column 15): " + [ v2.constructor.name ]);
              };
          };
          var patchProp = function (state, ps2) {
              var events = Halogen_VDom_Util.newMutMap();
              var onThis = removeProp(state.events);
              var onThese = diffProp(state.events, events);
              var onThat = applyProp(events);
              var props = Halogen_VDom_Util.diffWithKeyAndIxE(state.props, ps2, propToStrKey, onThese, onThis, onThat);
              var nextState = {
                  events: Halogen_VDom_Util.unsafeFreeze(events),
                  props: props
              };
              return Halogen_VDom_Machine.mkStep(new Halogen_VDom_Machine.Step(Data_Unit.unit, nextState, patchProp, haltProp));
          };
          var renderProp = function (ps1) {
              var events = Halogen_VDom_Util.newMutMap();
              var ps1$prime = Halogen_VDom_Util.strMapWithIxE(ps1, propToStrKey, applyProp(events));
              var state = {
                  events: Halogen_VDom_Util.unsafeFreeze(events),
                  props: ps1$prime
              };
              return Halogen_VDom_Machine.mkStep(new Halogen_VDom_Machine.Step(Data_Unit.unit, state, patchProp, haltProp));
          };
          return renderProp;
      };
  };
  exports["Property"] = Property;
  exports["Handler"] = Handler;
  exports["propFromString"] = propFromString;
  exports["buildProp"] = buildProp;
  exports["functorProp"] = functorProp;
})(PS);
(function($PS) {
  // Generated by purs version 0.13.8
  "use strict";
  $PS["Halogen.VDom.Types"] = $PS["Halogen.VDom.Types"] || {};
  var exports = $PS["Halogen.VDom.Types"];
  var Data_Bifunctor = $PS["Data.Bifunctor"];
  var Data_Functor = $PS["Data.Functor"];
  var Data_Tuple = $PS["Data.Tuple"];
  var Unsafe_Coerce = $PS["Unsafe.Coerce"];
  var Text = (function () {
      function Text(value0) {
          this.value0 = value0;
      };
      Text.create = function (value0) {
          return new Text(value0);
      };
      return Text;
  })();
  var Elem = (function () {
      function Elem(value0, value1, value2, value3) {
          this.value0 = value0;
          this.value1 = value1;
          this.value2 = value2;
          this.value3 = value3;
      };
      Elem.create = function (value0) {
          return function (value1) {
              return function (value2) {
                  return function (value3) {
                      return new Elem(value0, value1, value2, value3);
                  };
              };
          };
      };
      return Elem;
  })();
  var Keyed = (function () {
      function Keyed(value0, value1, value2, value3) {
          this.value0 = value0;
          this.value1 = value1;
          this.value2 = value2;
          this.value3 = value3;
      };
      Keyed.create = function (value0) {
          return function (value1) {
              return function (value2) {
                  return function (value3) {
                      return new Keyed(value0, value1, value2, value3);
                  };
              };
          };
      };
      return Keyed;
  })();
  var Widget = (function () {
      function Widget(value0) {
          this.value0 = value0;
      };
      Widget.create = function (value0) {
          return new Widget(value0);
      };
      return Widget;
  })();
  var Grafted = (function () {
      function Grafted(value0) {
          this.value0 = value0;
      };
      Grafted.create = function (value0) {
          return new Grafted(value0);
      };
      return Grafted;
  })();
  var Graft = (function () {
      function Graft(value0, value1, value2) {
          this.value0 = value0;
          this.value1 = value1;
          this.value2 = value2;
      };
      Graft.create = function (value0) {
          return function (value1) {
              return function (value2) {
                  return new Graft(value0, value1, value2);
              };
          };
      };
      return Graft;
  })();
  var unGraft = function (f) {
      return function ($45) {
          return f($45);
      };
  };           
  var graft = Unsafe_Coerce.unsafeCoerce;
  var bifunctorGraft = new Data_Bifunctor.Bifunctor(function (f) {
      return function (g) {
          return unGraft(function (v) {
              return graft(new Graft(function ($47) {
                  return f(v.value0($47));
              }, function ($48) {
                  return g(v.value1($48));
              }, v.value2));
          });
      };
  });
  var bifunctorVDom = new Data_Bifunctor.Bifunctor(function (f) {
      return function (g) {
          return function (v) {
              if (v instanceof Text) {
                  return new Text(v.value0);
              };
              if (v instanceof Grafted) {
                  return new Grafted(Data_Bifunctor.bimap(bifunctorGraft)(f)(g)(v.value0));
              };
              return new Grafted(graft(new Graft(f, g, v)));
          };
      };
  });
  var runGraft = unGraft(function (v) {
      var go = function (v2) {
          if (v2 instanceof Text) {
              return new Text(v2.value0);
          };
          if (v2 instanceof Elem) {
              return new Elem(v2.value0, v2.value1, v.value0(v2.value2), Data_Functor.map(Data_Functor.functorArray)(go)(v2.value3));
          };
          if (v2 instanceof Keyed) {
              return new Keyed(v2.value0, v2.value1, v.value0(v2.value2), Data_Functor.map(Data_Functor.functorArray)(Data_Functor.map(Data_Tuple.functorTuple)(go))(v2.value3));
          };
          if (v2 instanceof Widget) {
              return new Widget(v.value1(v2.value0));
          };
          if (v2 instanceof Grafted) {
              return new Grafted(Data_Bifunctor.bimap(bifunctorGraft)(v.value0)(v.value1)(v2.value0));
          };
          throw new Error("Failed pattern match at Halogen.VDom.Types (line 73, column 7 - line 73, column 27): " + [ v2.constructor.name ]);
      };
      return go(v.value2);
  });
  exports["Text"] = Text;
  exports["Elem"] = Elem;
  exports["Keyed"] = Keyed;
  exports["Widget"] = Widget;
  exports["Grafted"] = Grafted;
  exports["runGraft"] = runGraft;
  exports["bifunctorVDom"] = bifunctorVDom;
})(PS);
(function(exports) {
  "use strict";

  exports.removeAttribute = function (name) {
    return function (element) {
      return function () {
        element.removeAttribute(name);
        return {};
      };
    };
  };
})(PS["Web.DOM.Element"] = PS["Web.DOM.Element"] || {});
(function($PS) {
  // Generated by purs version 0.13.8
  "use strict";
  $PS["Web.DOM.Element"] = $PS["Web.DOM.Element"] || {};
  var exports = $PS["Web.DOM.Element"];
  var $foreign = $PS["Web.DOM.Element"];
  var Unsafe_Coerce = $PS["Unsafe.Coerce"];                   
  var toNode = Unsafe_Coerce.unsafeCoerce;
  exports["toNode"] = toNode;
  exports["removeAttribute"] = $foreign.removeAttribute;
})(PS);
(function($PS) {
  // Generated by purs version 0.13.8
  "use strict";
  $PS["Halogen.VDom.DOM"] = $PS["Halogen.VDom.DOM"] || {};
  var exports = $PS["Halogen.VDom.DOM"];
  var Data_Array = $PS["Data.Array"];
  var Data_Boolean = $PS["Data.Boolean"];
  var Data_Maybe = $PS["Data.Maybe"];
  var Data_Nullable = $PS["Data.Nullable"];
  var Data_Tuple = $PS["Data.Tuple"];
  var Halogen_VDom_Machine = $PS["Halogen.VDom.Machine"];
  var Halogen_VDom_Types = $PS["Halogen.VDom.Types"];
  var Halogen_VDom_Util = $PS["Halogen.VDom.Util"];
  var Web_DOM_Element = $PS["Web.DOM.Element"];
  var haltWidget = function (v) {
      return Halogen_VDom_Machine.halt(v.widget);
  };
  var patchWidget = function (state, vdom) {
      if (vdom instanceof Halogen_VDom_Types.Grafted) {
          return patchWidget(state, Halogen_VDom_Types.runGraft(vdom.value0));
      };
      if (vdom instanceof Halogen_VDom_Types.Widget) {
          var res = Halogen_VDom_Machine.step(state.widget, vdom.value0);
          var res$prime = Halogen_VDom_Machine.unStep(function (v) {
              return Halogen_VDom_Machine.mkStep(new Halogen_VDom_Machine.Step(v.value0, {
                  build: state.build,
                  widget: res
              }, patchWidget, haltWidget));
          })(res);
          return res$prime;
      };
      haltWidget(state);
      return state.build(vdom);
  };
  var haltText = function (v) {
      var parent = Halogen_VDom_Util.parentNode(v.node);
      return Halogen_VDom_Util.removeChild(v.node, parent);
  };
  var patchText = function (state, vdom) {
      if (vdom instanceof Halogen_VDom_Types.Grafted) {
          return patchText(state, Halogen_VDom_Types.runGraft(vdom.value0));
      };
      if (vdom instanceof Halogen_VDom_Types.Text) {
          if (state.value === vdom.value0) {
              return Halogen_VDom_Machine.mkStep(new Halogen_VDom_Machine.Step(state.node, state, patchText, haltText));
          };
          if (Data_Boolean.otherwise) {
              var nextState = {
                  build: state.build,
                  node: state.node,
                  value: vdom.value0
              };
              Halogen_VDom_Util.setTextContent(vdom.value0, state.node);
              return Halogen_VDom_Machine.mkStep(new Halogen_VDom_Machine.Step(state.node, nextState, patchText, haltText));
          };
      };
      haltText(state);
      return state.build(vdom);
  };
  var haltKeyed = function (v) {
      var parent = Halogen_VDom_Util.parentNode(v.node);
      Halogen_VDom_Util.removeChild(v.node, parent);
      Halogen_VDom_Util.forInE(v.children, function (v1, s) {
          return Halogen_VDom_Machine.halt(s);
      });
      return Halogen_VDom_Machine.halt(v.attrs);
  };
  var haltElem = function (v) {
      var parent = Halogen_VDom_Util.parentNode(v.node);
      Halogen_VDom_Util.removeChild(v.node, parent);
      Halogen_VDom_Util.forEachE(v.children, Halogen_VDom_Machine.halt);
      return Halogen_VDom_Machine.halt(v.attrs);
  };
  var eqElemSpec = function (ns1, v, ns2, v1) {
      var $56 = v === v1;
      if ($56) {
          if (ns1 instanceof Data_Maybe.Just && (ns2 instanceof Data_Maybe.Just && ns1.value0 === ns2.value0)) {
              return true;
          };
          if (ns1 instanceof Data_Maybe.Nothing && ns2 instanceof Data_Maybe.Nothing) {
              return true;
          };
          return false;
      };
      return false;
  };
  var patchElem = function (state, vdom) {
      if (vdom instanceof Halogen_VDom_Types.Grafted) {
          return patchElem(state, Halogen_VDom_Types.runGraft(vdom.value0));
      };
      if (vdom instanceof Halogen_VDom_Types.Elem && eqElemSpec(state.ns, state.name, vdom.value0, vdom.value1)) {
          var v = Data_Array.length(vdom.value3);
          var v1 = Data_Array.length(state.children);
          if (v1 === 0 && v === 0) {
              var attrs2 = Halogen_VDom_Machine.step(state.attrs, vdom.value2);
              var nextState = {
                  build: state.build,
                  node: state.node,
                  attrs: attrs2,
                  ns: vdom.value0,
                  name: vdom.value1,
                  children: state.children
              };
              return Halogen_VDom_Machine.mkStep(new Halogen_VDom_Machine.Step(state.node, nextState, patchElem, haltElem));
          };
          var onThis = function (ix, s) {
              return Halogen_VDom_Machine.halt(s);
          };
          var onThese = function (ix, s, v2) {
              var res = Halogen_VDom_Machine.step(s, v2);
              Halogen_VDom_Util.insertChildIx(ix, Halogen_VDom_Machine.extract(res), state.node);
              return res;
          };
          var onThat = function (ix, v2) {
              var res = state.build(v2);
              Halogen_VDom_Util.insertChildIx(ix, Halogen_VDom_Machine.extract(res), state.node);
              return res;
          };
          var children2 = Halogen_VDom_Util.diffWithIxE(state.children, vdom.value3, onThese, onThis, onThat);
          var attrs2 = Halogen_VDom_Machine.step(state.attrs, vdom.value2);
          var nextState = {
              build: state.build,
              node: state.node,
              attrs: attrs2,
              ns: vdom.value0,
              name: vdom.value1,
              children: children2
          };
          return Halogen_VDom_Machine.mkStep(new Halogen_VDom_Machine.Step(state.node, nextState, patchElem, haltElem));
      };
      haltElem(state);
      return state.build(vdom);
  };
  var patchKeyed = function (state, vdom) {
      if (vdom instanceof Halogen_VDom_Types.Grafted) {
          return patchKeyed(state, Halogen_VDom_Types.runGraft(vdom.value0));
      };
      if (vdom instanceof Halogen_VDom_Types.Keyed && eqElemSpec(state.ns, state.name, vdom.value0, vdom.value1)) {
          var v = Data_Array.length(vdom.value3);
          if (state.length === 0 && v === 0) {
              var attrs2 = Halogen_VDom_Machine.step(state.attrs, vdom.value2);
              var nextState = {
                  build: state.build,
                  node: state.node,
                  attrs: attrs2,
                  ns: vdom.value0,
                  name: vdom.value1,
                  children: state.children,
                  length: 0
              };
              return Halogen_VDom_Machine.mkStep(new Halogen_VDom_Machine.Step(state.node, nextState, patchKeyed, haltKeyed));
          };
          var onThis = function (v2, s) {
              return Halogen_VDom_Machine.halt(s);
          };
          var onThese = function (v2, ix$prime, s, v3) {
              var res = Halogen_VDom_Machine.step(s, v3.value1);
              Halogen_VDom_Util.insertChildIx(ix$prime, Halogen_VDom_Machine.extract(res), state.node);
              return res;
          };
          var onThat = function (v2, ix, v3) {
              var res = state.build(v3.value1);
              Halogen_VDom_Util.insertChildIx(ix, Halogen_VDom_Machine.extract(res), state.node);
              return res;
          };
          var children2 = Halogen_VDom_Util.diffWithKeyAndIxE(state.children, vdom.value3, Data_Tuple.fst, onThese, onThis, onThat);
          var attrs2 = Halogen_VDom_Machine.step(state.attrs, vdom.value2);
          var nextState = {
              build: state.build,
              node: state.node,
              attrs: attrs2,
              ns: vdom.value0,
              name: vdom.value1,
              children: children2,
              length: v
          };
          return Halogen_VDom_Machine.mkStep(new Halogen_VDom_Machine.Step(state.node, nextState, patchKeyed, haltKeyed));
      };
      haltKeyed(state);
      return state.build(vdom);
  };
  var buildWidget = function (v, build, w) {
      var res = v.buildWidget(v)(w);
      var res$prime = Halogen_VDom_Machine.unStep(function (v1) {
          return Halogen_VDom_Machine.mkStep(new Halogen_VDom_Machine.Step(v1.value0, {
              build: build,
              widget: res
          }, patchWidget, haltWidget));
      })(res);
      return res$prime;
  };
  var buildText = function (v, build, s) {
      var node = Halogen_VDom_Util.createTextNode(s, v.document);
      var state = {
          build: build,
          node: node,
          value: s
      };
      return Halogen_VDom_Machine.mkStep(new Halogen_VDom_Machine.Step(node, state, patchText, haltText));
  };
  var buildKeyed = function (v, build, ns1, name1, as1, ch1) {
      var el = Halogen_VDom_Util.createElement(Data_Nullable.toNullable(ns1), name1, v.document);
      var node = Web_DOM_Element.toNode(el);
      var onChild = function (k, ix, v1) {
          var res = build(v1.value1);
          Halogen_VDom_Util.insertChildIx(ix, Halogen_VDom_Machine.extract(res), node);
          return res;
      };
      var children = Halogen_VDom_Util.strMapWithIxE(ch1, Data_Tuple.fst, onChild);
      var attrs = v.buildAttributes(el)(as1);
      var state = {
          build: build,
          node: node,
          attrs: attrs,
          ns: ns1,
          name: name1,
          children: children,
          length: Data_Array.length(ch1)
      };
      return Halogen_VDom_Machine.mkStep(new Halogen_VDom_Machine.Step(node, state, patchKeyed, haltKeyed));
  };
  var buildElem = function (v, build, ns1, name1, as1, ch1) {
      var el = Halogen_VDom_Util.createElement(Data_Nullable.toNullable(ns1), name1, v.document);
      var node = Web_DOM_Element.toNode(el);
      var onChild = function (ix, child) {
          var res = build(child);
          Halogen_VDom_Util.insertChildIx(ix, Halogen_VDom_Machine.extract(res), node);
          return res;
      };
      var children = Halogen_VDom_Util.forE(ch1, onChild);
      var attrs = v.buildAttributes(el)(as1);
      var state = {
          build: build,
          node: node,
          attrs: attrs,
          ns: ns1,
          name: name1,
          children: children
      };
      return Halogen_VDom_Machine.mkStep(new Halogen_VDom_Machine.Step(node, state, patchElem, haltElem));
  };
  var buildVDom = function (spec) {
      var build = function (v) {
          if (v instanceof Halogen_VDom_Types.Text) {
              return buildText(spec, build, v.value0);
          };
          if (v instanceof Halogen_VDom_Types.Elem) {
              return buildElem(spec, build, v.value0, v.value1, v.value2, v.value3);
          };
          if (v instanceof Halogen_VDom_Types.Keyed) {
              return buildKeyed(spec, build, v.value0, v.value1, v.value2, v.value3);
          };
          if (v instanceof Halogen_VDom_Types.Widget) {
              return buildWidget(spec, build, v.value0);
          };
          if (v instanceof Halogen_VDom_Types.Grafted) {
              return build(Halogen_VDom_Types.runGraft(v.value0));
          };
          throw new Error("Failed pattern match at Halogen.VDom.DOM (line 58, column 27 - line 63, column 52): " + [ v.constructor.name ]);
      };
      return build;
  };
  exports["buildVDom"] = buildVDom;
})(PS);
(function($PS) {
  // Generated by purs version 0.13.8
  "use strict";
  $PS["Halogen.VDom.Thunk"] = $PS["Halogen.VDom.Thunk"] || {};
  var exports = $PS["Halogen.VDom.Thunk"];
  var Data_Functor = $PS["Data.Functor"];
  var Halogen_VDom_DOM = $PS["Halogen.VDom.DOM"];
  var Halogen_VDom_Machine = $PS["Halogen.VDom.Machine"];
  var Halogen_VDom_Util = $PS["Halogen.VDom.Util"];        
  var Thunk = (function () {
      function Thunk(value0, value1, value2, value3) {
          this.value0 = value0;
          this.value1 = value1;
          this.value2 = value2;
          this.value3 = value3;
      };
      Thunk.create = function (value0) {
          return function (value1) {
              return function (value2) {
                  return function (value3) {
                      return new Thunk(value0, value1, value2, value3);
                  };
              };
          };
      };
      return Thunk;
  })();                                          
  var unsafeEqThunk = function (v, v1) {
      return Halogen_VDom_Util.refEq(v.value0, v1.value0) && (Halogen_VDom_Util.refEq(v.value1, v1.value1) && Halogen_VDom_Util.refEq(v.value3, v1.value3));
  };
  var thunk = function (tid, eqFn, f, a) {
      return new Thunk(tid, eqFn, f, a);
  };
  var runThunk = function (v) {
      return v.value2(v.value3);
  };
  var functorThunk = function (dictFunctor) {
      return new Data_Functor.Functor(function (f) {
          return function (v) {
              return new Thunk(v.value0, v.value1, (function () {
                  var $47 = Data_Functor.map(dictFunctor)(f);
                  return function ($48) {
                      return $47(v.value2($48));
                  };
              })(), v.value3);
          };
      });
  };
  var buildThunk = function (toVDom) {
      var haltThunk = function (state) {
          return Halogen_VDom_Machine.halt(state.vdom);
      };
      var patchThunk = function (state, t2) {
          var $43 = unsafeEqThunk(state.thunk, t2);
          if ($43) {
              return Halogen_VDom_Machine.mkStep(new Halogen_VDom_Machine.Step(Halogen_VDom_Machine.extract(state.vdom), state, patchThunk, haltThunk));
          };
          var vdom = Halogen_VDom_Machine.step(state.vdom, toVDom(runThunk(t2)));
          return Halogen_VDom_Machine.mkStep(new Halogen_VDom_Machine.Step(Halogen_VDom_Machine.extract(vdom), {
              vdom: vdom,
              thunk: t2
          }, patchThunk, haltThunk));
      };
      var renderThunk = function (spec) {
          return function (t) {
              var vdom = Halogen_VDom_DOM.buildVDom(spec)(toVDom(runThunk(t)));
              return Halogen_VDom_Machine.mkStep(new Halogen_VDom_Machine.Step(Halogen_VDom_Machine.extract(vdom), {
                  thunk: t,
                  vdom: vdom
              }, patchThunk, haltThunk));
          };
      };
      return renderThunk;
  };
  exports["buildThunk"] = buildThunk;
  exports["functorThunk"] = functorThunk;
})(PS);
(function($PS) {
  // Generated by purs version 0.13.8
  "use strict";
  $PS["Spork.Html.Core"] = $PS["Spork.Html.Core"] || {};
  var exports = $PS["Spork.Html.Core"];
  var Data_Bifunctor = $PS["Data.Bifunctor"];
  var Data_Functor = $PS["Data.Functor"];
  var Data_Maybe = $PS["Data.Maybe"];
  var Data_Newtype = $PS["Data.Newtype"];
  var Halogen_VDom_DOM_Prop = $PS["Halogen.VDom.DOM.Prop"];
  var Halogen_VDom_Thunk = $PS["Halogen.VDom.Thunk"];
  var Halogen_VDom_Types = $PS["Halogen.VDom.Types"];
  var Unsafe_Coerce = $PS["Unsafe.Coerce"];                
  var IProp = function (x) {
      return x;
  };
  var Html = function (x) {
      return x;
  };
  var ToPropValue = function (toPropValue) {
      this.toPropValue = toPropValue;
  };                                       
  var unwrapF = Unsafe_Coerce.unsafeCoerce;
  var toPropValue = function (dict) {
      return dict.toPropValue;
  };
  var text = function ($13) {
      return Html(Halogen_VDom_Types.Text.create($13));
  };
  var stringToPropValue = new ToPropValue(Halogen_VDom_DOM_Prop.propFromString);
  var prop = function (dictToPropValue) {
      return function (n) {
          var $17 = Halogen_VDom_DOM_Prop.Property.create(n);
          var $18 = toPropValue(dictToPropValue);
          return function ($19) {
              return IProp($17($18($19)));
          };
      };
  }; 
  var on = function (ty) {
      var $23 = Halogen_VDom_DOM_Prop.Handler.create(ty);
      return function ($24) {
          return IProp($23($24));
      };
  };                                                                            
  var newtypeHtml = new Data_Newtype.Newtype(function (n) {
      return n;
  }, Html);
  var functorHtml = new Data_Functor.Functor(function (f) {
      return function (v) {
          return Data_Bifunctor.bimap(Halogen_VDom_Types.bifunctorVDom)(Data_Functor.map(Data_Functor.functorArray)(Data_Functor.map(Halogen_VDom_DOM_Prop.functorProp)(f)))(Data_Functor.map(Halogen_VDom_Thunk.functorThunk(functorHtml))(f))(v);
      };
  });
  var elemWithNS = function (ns) {
      return function (name) {
          return function (props) {
              return function (children) {
                  return new Halogen_VDom_Types.Elem(ns, name, props, unwrapF(children));
              };
          };
      };
  };
  var elem = elemWithNS(Data_Maybe.Nothing.value);
  exports["text"] = text;
  exports["elem"] = elem;
  exports["prop"] = prop;
  exports["on"] = on;
  exports["newtypeHtml"] = newtypeHtml;
  exports["functorHtml"] = functorHtml;
  exports["stringToPropValue"] = stringToPropValue;
})(PS);
(function($PS) {
  // Generated by purs version 0.13.8
  "use strict";
  $PS["Spork.Html.Elements"] = $PS["Spork.Html.Elements"] || {};
  var exports = $PS["Spork.Html.Elements"];
  var Spork_Html_Core = $PS["Spork.Html.Core"];
  var span = Spork_Html_Core.elem("span");
  var input = function (ps) {
      return Spork_Html_Core.elem("input")(ps)([  ]);
  };                                      
  var hr = function (ps) {
      return Spork_Html_Core.elem("hr")(ps)([  ]);
  };                                  
  var div = Spork_Html_Core.elem("div");
  var button = Spork_Html_Core.elem("button");
  var br = function (ps) {
      return Spork_Html_Core.elem("br")(ps)([  ]);
  };
  exports["br"] = br;
  exports["button"] = button;
  exports["div"] = div;
  exports["hr"] = hr;
  exports["input"] = input;
  exports["span"] = span;
})(PS);
(function($PS) {
  // Generated by purs version 0.13.8
  "use strict";
  $PS["Control.Monad.Except"] = $PS["Control.Monad.Except"] || {};
  var exports = $PS["Control.Monad.Except"];
  var Control_Monad_Except_Trans = $PS["Control.Monad.Except.Trans"];
  var Data_Identity = $PS["Data.Identity"];
  var Data_Newtype = $PS["Data.Newtype"];                                                
  var runExcept = (function () {
      var $0 = Data_Newtype.unwrap(Data_Identity.newtypeIdentity);
      return function ($1) {
          return $0(Control_Monad_Except_Trans.runExceptT($1));
      };
  })();
  exports["runExcept"] = runExcept;
})(PS);
(function(exports) {
  "use strict";

  exports.unsafeReadPropImpl = function (f, s, key, value) {
    return value == null ? f : s(value[key]);
  };
})(PS["Foreign.Index"] = PS["Foreign.Index"] || {});
(function($PS) {
  // Generated by purs version 0.13.8
  "use strict";
  $PS["Foreign.Index"] = $PS["Foreign.Index"] || {};
  var exports = $PS["Foreign.Index"];
  var $foreign = $PS["Foreign.Index"];
  var Control_Applicative = $PS["Control.Applicative"];
  var Control_Monad_Except_Trans = $PS["Control.Monad.Except.Trans"];
  var Data_Identity = $PS["Data.Identity"];
  var Foreign = $PS["Foreign"];
  var unsafeReadProp = function (k) {
      return function (value) {
          return $foreign.unsafeReadPropImpl(Foreign.fail(new Foreign.TypeMismatch("object", Foreign.typeOf(value))), Control_Applicative.pure(Control_Monad_Except_Trans.applicativeExceptT(Data_Identity.monadIdentity)), k, value);
      };
  };
  var readProp = unsafeReadProp;
  exports["readProp"] = readProp;
})(PS);
(function($PS) {
  // Generated by purs version 0.13.8
  "use strict";
  $PS["Spork.Html.Events"] = $PS["Spork.Html.Events"] || {};
  var exports = $PS["Spork.Html.Events"];
  var Control_Bind = $PS["Control.Bind"];
  var Control_Monad_Except = $PS["Control.Monad.Except"];
  var Control_Monad_Except_Trans = $PS["Control.Monad.Except.Trans"];
  var Control_Semigroupoid = $PS["Control.Semigroupoid"];
  var Data_Either = $PS["Data.Either"];
  var Data_Identity = $PS["Data.Identity"];
  var Data_Maybe = $PS["Data.Maybe"];
  var Foreign = $PS["Foreign"];
  var Foreign_Index = $PS["Foreign.Index"];
  var Spork_Html_Core = $PS["Spork.Html.Core"];
  var onMouseDown = (function () {
      var $16 = Spork_Html_Core.on("mousedown");
      return function ($17) {
          return $16($17);
      };
  })();
  var onKeyDown = (function () {
      var $22 = Spork_Html_Core.on("keydown");
      return function ($23) {
          return $22($23);
      };
  })();
  var onClick = (function () {
      var $50 = Spork_Html_Core.on("click");
      return function ($51) {
          return $50($51);
      };
  })();                                     
  var foreignHandler = function (decoder) {
      return function (ty) {
          return function (handler) {
              var handler$prime = function (ev) {
                  var v = Control_Monad_Except.runExcept(decoder(Foreign.unsafeToForeign(ev)));
                  if (v instanceof Data_Either.Left) {
                      return Data_Maybe.Nothing.value;
                  };
                  if (v instanceof Data_Either.Right) {
                      return handler(v.value0);
                  };
                  throw new Error("Failed pattern match at Spork.Html.Events (line 145, column 7 - line 147, column 28): " + [ v.constructor.name ]);
              };
              return Spork_Html_Core.on(ty)(handler$prime);
          };
      };
  };   
  var currentTargetValue = Control_Bind.composeKleisli(Control_Monad_Except_Trans.bindExceptT(Data_Identity.monadIdentity))(Foreign_Index.readProp("currentTarget"))(Control_Bind.composeKleisli(Control_Monad_Except_Trans.bindExceptT(Data_Identity.monadIdentity))(Foreign_Index.readProp("value"))(Foreign.readString));
  var onValueInput = foreignHandler(currentTargetValue)("input");
  var always = Control_Semigroupoid.compose(Control_Semigroupoid.semigroupoidFn)(Data_Maybe.Just.create);
  exports["always"] = always;
  exports["onClick"] = onClick;
  exports["onKeyDown"] = onKeyDown;
  exports["onMouseDown"] = onMouseDown;
  exports["onValueInput"] = onValueInput;
})(PS);
(function(exports) {
  "use strict";

  exports.split = function (sep) {
    return function (s) {
      return s.split(sep);
    };
  };

  exports.toUpper = function (s) {
    return s.toUpperCase();
  };

  exports.joinWith = function (s) {
    return function (xs) {
      return xs.join(s);
    };
  };
})(PS["Data.String.Common"] = PS["Data.String.Common"] || {});
(function($PS) {
  // Generated by purs version 0.13.8
  "use strict";
  $PS["Data.String.Common"] = $PS["Data.String.Common"] || {};
  var exports = $PS["Data.String.Common"];
  var $foreign = $PS["Data.String.Common"];                
  var $$null = function (s) {
      return s === "";
  };
  exports["null"] = $$null;
  exports["split"] = $foreign.split;
  exports["toUpper"] = $foreign.toUpper;
  exports["joinWith"] = $foreign.joinWith;
})(PS);
(function($PS) {
  // Generated by purs version 0.13.8
  "use strict";
  $PS["Spork.Html.Properties"] = $PS["Spork.Html.Properties"] || {};
  var exports = $PS["Spork.Html.Properties"];
  var Data_String_Common = $PS["Data.String.Common"];
  var Spork_Html_Core = $PS["Spork.Html.Core"];                             
  var value = Spork_Html_Core.prop(Spork_Html_Core.stringToPropValue)("value");      
  var id_ = Spork_Html_Core.prop(Spork_Html_Core.stringToPropValue)("id");      
  var classes = (function () {
      var $13 = Spork_Html_Core.prop(Spork_Html_Core.stringToPropValue)("className");
      var $14 = Data_String_Common.joinWith(" ");
      return function ($15) {
          return $13($14($15));
      };
  })();
  exports["classes"] = classes;
  exports["id_"] = id_;
  exports["value"] = value;
})(PS);
(function($PS) {
  // Generated by purs version 0.13.8
  "use strict";
  $PS["Control.Alternative"] = $PS["Control.Alternative"] || {};
  var exports = $PS["Control.Alternative"];              
  var Alternative = function (Applicative0, Plus1) {
      this.Applicative0 = Applicative0;
      this.Plus1 = Plus1;
  };
  exports["Alternative"] = Alternative;
})(PS);
(function($PS) {
  // Generated by purs version 0.13.8
  "use strict";
  $PS["Control.Monad.Rec.Class"] = $PS["Control.Monad.Rec.Class"] || {};
  var exports = $PS["Control.Monad.Rec.Class"];
  var Control_Bind = $PS["Control.Bind"];
  var Data_Bifunctor = $PS["Data.Bifunctor"];
  var Data_Either = $PS["Data.Either"];
  var Data_Functor = $PS["Data.Functor"];
  var Effect = $PS["Effect"];
  var Effect_Ref = $PS["Effect.Ref"];                
  var Loop = (function () {
      function Loop(value0) {
          this.value0 = value0;
      };
      Loop.create = function (value0) {
          return new Loop(value0);
      };
      return Loop;
  })();
  var Done = (function () {
      function Done(value0) {
          this.value0 = value0;
      };
      Done.create = function (value0) {
          return new Done(value0);
      };
      return Done;
  })();
  var MonadRec = function (Monad0, tailRecM) {
      this.Monad0 = Monad0;
      this.tailRecM = tailRecM;
  };
  var tailRecM = function (dict) {
      return dict.tailRecM;
  };
  var tailRec = function (f) {
      var go = function ($copy_v) {
          var $tco_done = false;
          var $tco_result;
          function $tco_loop(v) {
              if (v instanceof Loop) {
                  $copy_v = f(v.value0);
                  return;
              };
              if (v instanceof Done) {
                  $tco_done = true;
                  return v.value0;
              };
              throw new Error("Failed pattern match at Control.Monad.Rec.Class (line 93, column 3 - line 93, column 25): " + [ v.constructor.name ]);
          };
          while (!$tco_done) {
              $tco_result = $tco_loop($copy_v);
          };
          return $tco_result;
      };
      return function ($58) {
          return go(f($58));
      };
  }; 
  var monadRecEither = new MonadRec(function () {
      return Data_Either.monadEither;
  }, function (f) {
      return function (a0) {
          var g = function (v) {
              if (v instanceof Data_Either.Left) {
                  return new Done(new Data_Either.Left(v.value0));
              };
              if (v instanceof Data_Either.Right && v.value0 instanceof Loop) {
                  return new Loop(f(v.value0.value0));
              };
              if (v instanceof Data_Either.Right && v.value0 instanceof Done) {
                  return new Done(new Data_Either.Right(v.value0.value0));
              };
              throw new Error("Failed pattern match at Control.Monad.Rec.Class (line 121, column 7 - line 121, column 33): " + [ v.constructor.name ]);
          };
          return tailRec(g)(f(a0));
      };
  });
  var monadRecEffect = new MonadRec(function () {
      return Effect.monadEffect;
  }, function (f) {
      return function (a) {
          var fromDone = function (v) {
              if (v instanceof Done) {
                  return v.value0;
              };
              throw new Error("Failed pattern match at Control.Monad.Rec.Class (line 113, column 30 - line 113, column 44): " + [ v.constructor.name ]);
          };
          return function __do() {
              var r = Control_Bind.bindFlipped(Effect.bindEffect)(Effect_Ref["new"])(f(a))();
              (function () {
                  while (!(function __do() {
                      var v = Effect_Ref.read(r)();
                      if (v instanceof Loop) {
                          var e = f(v.value0)();
                          Effect_Ref.write(e)(r)();
                          return false;
                      };
                      if (v instanceof Done) {
                          return true;
                      };
                      throw new Error("Failed pattern match at Control.Monad.Rec.Class (line 104, column 22 - line 109, column 28): " + [ v.constructor.name ]);
                  })()) {

                  };
                  return {};
              })();
              return Data_Functor.map(Effect.functorEffect)(fromDone)(Effect_Ref.read(r))();
          };
      };
  });
  var bifunctorStep = new Data_Bifunctor.Bifunctor(function (v) {
      return function (v1) {
          return function (v2) {
              if (v2 instanceof Loop) {
                  return new Loop(v(v2.value0));
              };
              if (v2 instanceof Done) {
                  return new Done(v1(v2.value0));
              };
              throw new Error("Failed pattern match at Control.Monad.Rec.Class (line 29, column 1 - line 31, column 34): " + [ v.constructor.name, v1.constructor.name, v2.constructor.name ]);
          };
      };
  });
  exports["Loop"] = Loop;
  exports["Done"] = Done;
  exports["MonadRec"] = MonadRec;
  exports["tailRecM"] = tailRecM;
  exports["bifunctorStep"] = bifunctorStep;
  exports["monadRecEffect"] = monadRecEffect;
  exports["monadRecEither"] = monadRecEither;
})(PS);
(function($PS) {
  // Generated by purs version 0.13.8
  "use strict";
  $PS["Control.MonadZero"] = $PS["Control.MonadZero"] || {};
  var exports = $PS["Control.MonadZero"];
  var Control_Applicative = $PS["Control.Applicative"];
  var Control_Plus = $PS["Control.Plus"];
  var Data_Unit = $PS["Data.Unit"];                
  var MonadZero = function (Alternative1, Monad0) {
      this.Alternative1 = Alternative1;
      this.Monad0 = Monad0;
  }; 
  var guard = function (dictMonadZero) {
      return function (v) {
          if (v) {
              return Control_Applicative.pure((dictMonadZero.Alternative1()).Applicative0())(Data_Unit.unit);
          };
          if (!v) {
              return Control_Plus.empty((dictMonadZero.Alternative1()).Plus1());
          };
          throw new Error("Failed pattern match at Control.MonadZero (line 54, column 1 - line 54, column 52): " + [ v.constructor.name ]);
      };
  };
  exports["MonadZero"] = MonadZero;
  exports["guard"] = guard;
})(PS);
(function($PS) {
  // Generated by purs version 0.13.8
  "use strict";
  $PS["Text.Parsing.StringParser"] = $PS["Text.Parsing.StringParser"] || {};
  var exports = $PS["Text.Parsing.StringParser"];
  var Control_Alt = $PS["Control.Alt"];
  var Control_Alternative = $PS["Control.Alternative"];
  var Control_Applicative = $PS["Control.Applicative"];
  var Control_Apply = $PS["Control.Apply"];
  var Control_Bind = $PS["Control.Bind"];
  var Control_Lazy = $PS["Control.Lazy"];
  var Control_Monad = $PS["Control.Monad"];
  var Control_Monad_Rec_Class = $PS["Control.Monad.Rec.Class"];
  var Control_MonadZero = $PS["Control.MonadZero"];
  var Control_Plus = $PS["Control.Plus"];
  var Data_Bifunctor = $PS["Data.Bifunctor"];
  var Data_Boolean = $PS["Data.Boolean"];
  var Data_Either = $PS["Data.Either"];
  var Data_Functor = $PS["Data.Functor"];
  var Data_Unit = $PS["Data.Unit"];                
  var ParseError = (function () {
      function ParseError(value0) {
          this.value0 = value0;
      };
      ParseError.create = function (value0) {
          return new ParseError(value0);
      };
      return ParseError;
  })();
  var Parser = function (x) {
      return x;
  };
  var unParser = function (v) {
      return v;
  };
  var $$try = function (v) {
      return function (v1) {
          return Data_Bifunctor.lmap(Data_Either.bifunctorEither)(function (v2) {
              return {
                  pos: v1.pos,
                  error: v2.error
              };
          })(v(v1));
      };
  }; 
  var runParser = function (v) {
      return function (s) {
          return Data_Bifunctor.bimap(Data_Either.bifunctorEither)(function (v1) {
              return v1.error;
          })(function (v1) {
              return v1.result;
          })(v({
              str: s,
              pos: 0
          }));
      };
  };
  var lazyParser = new Control_Lazy.Lazy(function (f) {
      return Parser(function (str) {
          return unParser(f(Data_Unit.unit))(str);
      });
  });
  var functorParser = new Data_Functor.Functor(function (f) {
      return function (v) {
          var $80 = Data_Functor.map(Data_Either.functorEither)(function (v1) {
              return {
                  result: f(v1.result),
                  suffix: v1.suffix
              };
          });
          return function ($81) {
              return $80(v($81));
          };
      };
  });
  var fail = function (msg) {
      return function (v) {
          return new Data_Either.Left({
              pos: v.pos,
              error: new ParseError(msg)
          });
      };
  }; 
  var applyParser = new Control_Apply.Apply(function () {
      return functorParser;
  }, function (v) {
      return function (v1) {
          return function (s) {
              return Control_Bind.bind(Data_Either.bindEither)(v(s))(function (v2) {
                  return Control_Bind.bind(Data_Either.bindEither)(v1(v2.suffix))(function (v3) {
                      return Control_Applicative.pure(Data_Either.applicativeEither)({
                          result: v2.result(v3.result),
                          suffix: v3.suffix
                      });
                  });
              });
          };
      };
  });
  var bindParser = new Control_Bind.Bind(function () {
      return applyParser;
  }, function (v) {
      return function (f) {
          return function (s) {
              return Control_Bind.bind(Data_Either.bindEither)(v(s))(function (v1) {
                  return unParser(f(v1.result))(v1.suffix);
              });
          };
      };
  });
  var applicativeParser = new Control_Applicative.Applicative(function () {
      return applyParser;
  }, function (a) {
      return function (s) {
          return new Data_Either.Right({
              result: a,
              suffix: s
          });
      };
  });
  var monadParser = new Control_Monad.Monad(function () {
      return applicativeParser;
  }, function () {
      return bindParser;
  });
  var monadRecParser = new Control_Monad_Rec_Class.MonadRec(function () {
      return monadParser;
  }, function (f) {
      return function (a) {
          var split = function (v) {
              if (v.result instanceof Control_Monad_Rec_Class.Loop) {
                  return new Control_Monad_Rec_Class.Loop({
                      state: v.result.value0,
                      str: v.suffix
                  });
              };
              if (v.result instanceof Control_Monad_Rec_Class.Done) {
                  return new Control_Monad_Rec_Class.Done({
                      result: v.result.value0,
                      suffix: v.suffix
                  });
              };
              throw new Error("Failed pattern match at Text.Parsing.StringParser (line 88, column 7 - line 88, column 70): " + [ v.constructor.name ]);
          };
          return function (str) {
              return Control_Monad_Rec_Class.tailRecM(Control_Monad_Rec_Class.monadRecEither)(function (st) {
                  return Data_Functor.map(Data_Either.functorEither)(split)(unParser(f(st.state))(st.str));
              })({
                  state: a,
                  str: str
              });
          };
      };
  });
  var altParser = new Control_Alt.Alt(function () {
      return functorParser;
  }, function (v) {
      return function (v1) {
          return function (s) {
              var v2 = v(s);
              if (v2 instanceof Data_Either.Left) {
                  if (s.pos === v2.value0.pos) {
                      return v1(s);
                  };
                  if (Data_Boolean.otherwise) {
                      return new Data_Either.Left({
                          error: v2.value0.error,
                          pos: v2.value0.pos
                      });
                  };
              };
              return v2;
          };
      };
  });
  var plusParser = new Control_Plus.Plus(function () {
      return altParser;
  }, fail("No alternative"));
  var alternativeParser = new Control_Alternative.Alternative(function () {
      return applicativeParser;
  }, function () {
      return plusParser;
  });
  var monadZeroParser = new Control_MonadZero.MonadZero(function () {
      return alternativeParser;
  }, function () {
      return monadParser;
  });
  exports["ParseError"] = ParseError;
  exports["runParser"] = runParser;
  exports["fail"] = fail;
  exports["try"] = $$try;
  exports["functorParser"] = functorParser;
  exports["applyParser"] = applyParser;
  exports["applicativeParser"] = applicativeParser;
  exports["altParser"] = altParser;
  exports["alternativeParser"] = alternativeParser;
  exports["bindParser"] = bindParser;
  exports["monadZeroParser"] = monadZeroParser;
  exports["monadRecParser"] = monadRecParser;
  exports["lazyParser"] = lazyParser;
})(PS);
(function(exports) {
  "use strict";

  exports.ctrlKey = function (e) {
    return e.ctrlKey;
  };

  exports.button = function (e) {
    return e.button;
  };
})(PS["Web.UIEvent.MouseEvent"] = PS["Web.UIEvent.MouseEvent"] || {});
(function($PS) {
  // Generated by purs version 0.13.8
  "use strict";
  $PS["Web.UIEvent.MouseEvent"] = $PS["Web.UIEvent.MouseEvent"] || {};
  var exports = $PS["Web.UIEvent.MouseEvent"];
  var $foreign = $PS["Web.UIEvent.MouseEvent"];
  exports["ctrlKey"] = $foreign.ctrlKey;
  exports["button"] = $foreign.button;
})(PS);
(function($PS) {
  // Generated by purs version 0.13.8
  "use strict";
  $PS["Derivation"] = $PS["Derivation"] || {};
  var exports = $PS["Derivation"];
  var Control_Category = $PS["Control.Category"];
  var Data_Array = $PS["Data.Array"];
  var Data_Boolean = $PS["Data.Boolean"];
  var Data_Either = $PS["Data.Either"];
  var Data_Eq = $PS["Data.Eq"];
  var Data_Foldable = $PS["Data.Foldable"];
  var Data_Function = $PS["Data.Function"];
  var Data_Functor = $PS["Data.Functor"];
  var Data_HeytingAlgebra = $PS["Data.HeytingAlgebra"];
  var Data_Maybe = $PS["Data.Maybe"];
  var Data_Monoid = $PS["Data.Monoid"];
  var Data_Semigroup = $PS["Data.Semigroup"];
  var Data_Symbol = $PS["Data.Symbol"];
  var Data_Tuple = $PS["Data.Tuple"];
  var Data_Unit = $PS["Data.Unit"];
  var Partial_Unsafe = $PS["Partial.Unsafe"];
  var Spork_Html_Core = $PS["Spork.Html.Core"];
  var Spork_Html_Elements = $PS["Spork.Html.Elements"];
  var Spork_Html_Events = $PS["Spork.Html.Events"];
  var Spork_Html_Properties = $PS["Spork.Html.Properties"];
  var Text_Parsing_StringParser = $PS["Text.Parsing.StringParser"];
  var Web_UIEvent_MouseEvent = $PS["Web.UIEvent.MouseEvent"];                
  var Entails = (function () {
      function Entails(value0, value1) {
          this.value0 = value0;
          this.value1 = value1;
      };
      Entails.create = function (value0) {
          return function (value1) {
              return new Entails(value0, value1);
          };
      };
      return Entails;
  })();
  var LHS = (function () {
      function LHS() {

      };
      LHS.value = new LHS();
      return LHS;
  })();
  var RHS = (function () {
      function RHS() {

      };
      RHS.value = new RHS();
      return RHS;
  })();
  var NewFormR = (function () {
      function NewFormR() {

      };
      NewFormR.value = new NewFormR();
      return NewFormR;
  })();
  var SideFormR = (function () {
      function SideFormR() {

      };
      SideFormR.value = new SideFormR();
      return SideFormR;
  })();
  var SideFormR1 = (function () {
      function SideFormR1() {

      };
      SideFormR1.value = new SideFormR1();
      return SideFormR1;
  })();
  var SideFormR2 = (function () {
      function SideFormR2() {

      };
      SideFormR2.value = new SideFormR2();
      return SideFormR2;
  })();
  var HasInput = (function () {
      function HasInput(value0) {
          this.value0 = value0;
      };
      HasInput.create = function (value0) {
          return new HasInput(value0);
      };
      return HasInput;
  })();
  var NoRule = (function () {
      function NoRule() {

      };
      NoRule.value = new NoRule();
      return NoRule;
  })();
  var WrongMode = (function () {
      function WrongMode() {

      };
      WrongMode.value = new WrongMode();
      return WrongMode;
  })();
  var Obligations = (function () {
      function Obligations(value0) {
          this.value0 = value0;
      };
      Obligations.create = function (value0) {
          return new Obligations(value0);
      };
      return Obligations;
  })();
  var NewFormNG = (function () {
      function NewFormNG() {

      };
      NewFormNG.value = new NewFormNG();
      return NewFormNG;
  })();
  var SideFormNG = (function () {
      function SideFormNG() {

      };
      SideFormNG.value = new SideFormNG();
      return SideFormNG;
  })();
  var NewFormG = (function () {
      function NewFormG() {

      };
      NewFormG.value = new NewFormG();
      return NewFormG;
  })();
  var SideFormG1 = (function () {
      function SideFormG1() {

      };
      SideFormG1.value = new SideFormG1();
      return SideFormG1;
  })();
  var SideFormG2 = (function () {
      function SideFormG2() {

      };
      SideFormG2.value = new SideFormG2();
      return SideFormG2;
  })();
  var Part1 = (function () {
      function Part1() {

      };
      Part1.value = new Part1();
      return Part1;
  })();
  var Part2 = (function () {
      function Part2() {

      };
      Part2.value = new Part2();
      return Part2;
  })();
  var LeftNG = (function () {
      function LeftNG(value0) {
          this.value0 = value0;
      };
      LeftNG.create = function (value0) {
          return new LeftNG(value0);
      };
      return LeftNG;
  })();
  var RightNG = (function () {
      function RightNG(value0) {
          this.value0 = value0;
      };
      RightNG.create = function (value0) {
          return new RightNG(value0);
      };
      return RightNG;
  })();
  var LeftG = (function () {
      function LeftG(value0) {
          this.value0 = value0;
      };
      LeftG.create = function (value0) {
          return new LeftG(value0);
      };
      return LeftG;
  })();
  var RightG = (function () {
      function RightG(value0) {
          this.value0 = value0;
      };
      RightG.create = function (value0) {
          return new RightG(value0);
      };
      return RightG;
  })();
  var ConcNG = (function () {
      function ConcNG(value0) {
          this.value0 = value0;
      };
      ConcNG.create = function (value0) {
          return new ConcNG(value0);
      };
      return ConcNG;
  })();
  var ConcG = (function () {
      function ConcG(value0) {
          this.value0 = value0;
      };
      ConcG.create = function (value0) {
          return new ConcG(value0);
      };
      return ConcG;
  })();
  var LeftButton = (function () {
      function LeftButton() {

      };
      LeftButton.value = new LeftButton();
      return LeftButton;
  })();
  var MiddleButton = (function () {
      function MiddleButton() {

      };
      MiddleButton.value = new MiddleButton();
      return MiddleButton;
  })();
  var RightButton = (function () {
      function RightButton() {

      };
      RightButton.value = new RightButton();
      return RightButton;
  })();
  var ClickedTurnstile = (function () {
      function ClickedTurnstile(value0) {
          this.value0 = value0;
      };
      ClickedTurnstile.create = function (value0) {
          return new ClickedTurnstile(value0);
      };
      return ClickedTurnstile;
  })();
  var PickedForm = (function () {
      function PickedForm(value0) {
          this.value0 = value0;
      };
      PickedForm.create = function (value0) {
          return new PickedForm(value0);
      };
      return PickedForm;
  })();
  var NeedInstantiation = (function () {
      function NeedInstantiation(value0) {
          this.value0 = value0;
      };
      NeedInstantiation.create = function (value0) {
          return new NeedInstantiation(value0);
      };
      return NeedInstantiation;
  })();
  var Input = (function () {
      function Input(value0) {
          this.value0 = value0;
      };
      Input.create = function (value0) {
          return new Input(value0);
      };
      return Input;
  })();
  var Submit = (function () {
      function Submit() {

      };
      Submit.value = new Submit();
      return Submit;
  })();
  var RC = (function () {
      function RC(value0, value1) {
          this.value0 = value0;
          this.value1 = value1;
      };
      RC.create = function (value0) {
          return function (value1) {
              return new RC(value0, value1);
          };
      };
      return RC;
  })();
  var Assertion = (function () {
      function Assertion(value0) {
          this.value0 = value0;
      };
      Assertion.create = function (value0) {
          return new Assertion(value0);
      };
      return Assertion;
  })();
  var Instantiating = (function () {
      function Instantiating(value0) {
          this.value0 = value0;
      };
      Instantiating.create = function (value0) {
          return new Instantiating(value0);
      };
      return Instantiating;
  })();
  var Conclusion = (function () {
      function Conclusion(value0) {
          this.value0 = value0;
      };
      Conclusion.create = function (value0) {
          return new Conclusion(value0);
      };
      return Conclusion;
  })();
  var ChildAction = (function () {
      function ChildAction(value0, value1) {
          this.value0 = value0;
          this.value1 = value1;
      };
      ChildAction.create = function (value0) {
          return function (value1) {
              return new ChildAction(value0, value1);
          };
      };
      return ChildAction;
  })();
  var NAction = (function () {
      function NAction(value0) {
          this.value0 = value0;
      };
      NAction.create = function (value0) {
          return new NAction(value0);
      };
      return NAction;
  })();
  var RenderForm = function (renderForm) {
      this.renderForm = renderForm;
  };
  var Calculus = function (equiv, formParser, okInitial, pickRule) {
      this.equiv = equiv;
      this.formParser = formParser;
      this.okInitial = okInitial;
      this.pickRule = pickRule;
  };
  var unitaggedEntails = Data_Function.on(Entails.create)(Data_Functor.map(Data_Functor.functorArray)(function (v) {
      return {
          form: v,
          tag: Data_Unit.unit
      };
  }));
  var renderForm = function (dict) {
      return dict.renderForm;
  };
  var pickRule = function (dict) {
      return dict.pickRule;
  };
  var okInitial = function (dict) {
      return dict.okInitial;
  };
  var ngTag = function ($$new) {
      return function (side) {
          return function (v) {
              if (v instanceof NewFormNG) {
                  return $$new;
              };
              if (v instanceof SideFormNG) {
                  return side;
              };
              throw new Error("Failed pattern match at Derivation (line 88, column 1 - line 88, column 40): " + [ $$new.constructor.name, side.constructor.name, v.constructor.name ]);
          };
      };
  };
  var mapTagsI = function (f) {
      return function (v) {
          var go = function (side) {
              return Data_Array.mapWithIndex(function (ix) {
                  return function (p) {
                      return {
                          tag: f({
                              side: side,
                              ix: ix
                          })(p.tag),
                          form: p.form
                      };
                  };
              });
          };
          return new Entails(go(LHS.value)(v.value0), go(RHS.value)(v.value1));
      };
  };
  var mapTags = function ($294) {
      return mapTagsI(Data_Function["const"]($294));
  };
  var unitaggedConc = function (v) {
      if (v instanceof Assertion) {
          return v.value0;
      };
      if (v instanceof Instantiating) {
          return v.value0.conc;
      };
      if (v instanceof Conclusion && v.value0.wconc instanceof ConcNG) {
          return mapTags(Data_Function["const"](Data_Unit.unit))(v.value0.wconc.value0);
      };
      if (v instanceof Conclusion && v.value0.wconc instanceof ConcG) {
          return mapTags(Data_Function["const"](Data_Unit.unit))(v.value0.wconc.value0);
      };
      throw new Error("Failed pattern match at Derivation (line 236, column 1 - line 236, column 57): " + [ v.constructor.name ]);
  };
  var intersperse = function (sep) {
      return function (arr) {
          var v = Data_Array.uncons(arr);
          if (v instanceof Data_Maybe.Nothing) {
              return [  ];
          };
          if (v instanceof Data_Maybe.Just && v.value0.tail.length === 0) {
              return [ v.value0.head ];
          };
          if (v instanceof Data_Maybe.Just) {
              return Data_Semigroup.append(Data_Semigroup.semigroupArray)([ v.value0.head, sep ])(intersperse(sep)(v.value0.tail));
          };
          throw new Error("Failed pattern match at Derivation (line 357, column 23 - line 360, column 59): " + [ v.constructor.name ]);
      };
  };
  var gTag = function ($$new) {
      return function (side1) {
          return function (side2) {
              return function (v) {
                  if (v instanceof NewFormG) {
                      return $$new;
                  };
                  if (v instanceof SideFormG1) {
                      return side1;
                  };
                  if (v instanceof SideFormG2) {
                      return side2;
                  };
                  throw new Error("Failed pattern match at Derivation (line 92, column 1 - line 92, column 43): " + [ $$new.constructor.name, side1.constructor.name, side2.constructor.name, v.constructor.name ]);
              };
          };
      };
  };
  var functorTaggedSequent = new Data_Functor.Functor(function (f) {
      return function (m) {
          return new Entails(Data_Functor.map(Data_Functor.functorArray)(function (o) {
              return {
                  form: f(o.form),
                  tag: o.tag
              };
          })(m.value0), Data_Functor.map(Data_Functor.functorArray)(function (o) {
              return {
                  form: f(o.form),
                  tag: o.tag
              };
          })(m.value1));
      };
  });
  var functorRuleChoice = new Data_Functor.Functor(function (f) {
      return function (m) {
          return new RC(m.value0, Data_Functor.map(Data_Maybe.functorMaybe)(f)(m.value1));
      };
  });
  var functorPickAction = new Data_Functor.Functor(function (f) {
      return function (m) {
          if (m instanceof NoRule) {
              return NoRule.value;
          };
          if (m instanceof WrongMode) {
              return WrongMode.value;
          };
          if (m instanceof Obligations) {
              return new Obligations(Data_Functor.map(Data_Functor.functorArray)(Data_Functor.map(functorTaggedSequent)(f))(m.value0));
          };
          throw new Error("Failed pattern match at Derivation (line 201, column 1 - line 201, column 56): " + [ m.constructor.name ]);
      };
  });
  var functorNodeAction = new Data_Functor.Functor(function (f) {
      return function (m) {
          if (m instanceof ClickedTurnstile) {
              return new ClickedTurnstile(m.value0);
          };
          if (m instanceof PickedForm) {
              return new PickedForm((function (o) {
                  return {
                      inst: Data_Functor.map(Data_Maybe.functorMaybe)(f)(o.inst),
                      click: o.click,
                      seqix: o.seqix
                  };
              })(m.value0));
          };
          if (m instanceof NeedInstantiation) {
              return new NeedInstantiation(m.value0);
          };
          if (m instanceof Input) {
              return new Input(m.value0);
          };
          if (m instanceof Submit) {
              return Submit.value;
          };
          throw new Error("Failed pattern match at Derivation (line 258, column 1 - line 258, column 56): " + [ m.constructor.name ]);
      };
  });
  var functorExplodedSequent = new Data_Functor.Functor(function (f) {
      return function (m) {
          if (m instanceof LeftNG) {
              return new LeftNG((function (o) {
                  return {
                      after: Data_Functor.map(Data_Functor.functorArray)(f)(o.after),
                      before: Data_Functor.map(Data_Functor.functorArray)(f)(o.before),
                      cqts: Data_Functor.map(Data_Functor.functorArray)(f)(o.cqts),
                      "new": f(o["new"])
                  };
              })(m.value0));
          };
          if (m instanceof RightNG) {
              return new RightNG((function (o) {
                  return {
                      after: Data_Functor.map(Data_Functor.functorArray)(f)(o.after),
                      ants: Data_Functor.map(Data_Functor.functorArray)(f)(o.ants),
                      before: Data_Functor.map(Data_Functor.functorArray)(f)(o.before),
                      "new": f(o["new"])
                  };
              })(m.value0));
          };
          if (m instanceof LeftG) {
              return new LeftG((function (o) {
                  return {
                      after: (function (o1) {
                          return {
                              group1: Data_Functor.map(Data_Functor.functorArray)(f)(o1.group1),
                              group2: Data_Functor.map(Data_Functor.functorArray)(f)(o1.group2)
                          };
                      })(o.after),
                      before: (function (o1) {
                          return {
                              group1: Data_Functor.map(Data_Functor.functorArray)(f)(o1.group1),
                              group2: Data_Functor.map(Data_Functor.functorArray)(f)(o1.group2)
                          };
                      })(o.before),
                      cqts: (function (o1) {
                          return {
                              group1: Data_Functor.map(Data_Functor.functorArray)(f)(o1.group1),
                              group2: Data_Functor.map(Data_Functor.functorArray)(f)(o1.group2)
                          };
                      })(o.cqts),
                      "new": f(o["new"])
                  };
              })(m.value0));
          };
          if (m instanceof RightG) {
              return new RightG((function (o) {
                  return {
                      after: (function (o1) {
                          return {
                              group1: Data_Functor.map(Data_Functor.functorArray)(f)(o1.group1),
                              group2: Data_Functor.map(Data_Functor.functorArray)(f)(o1.group2)
                          };
                      })(o.after),
                      ants: (function (o1) {
                          return {
                              group1: Data_Functor.map(Data_Functor.functorArray)(f)(o1.group1),
                              group2: Data_Functor.map(Data_Functor.functorArray)(f)(o1.group2)
                          };
                      })(o.ants),
                      before: (function (o1) {
                          return {
                              group1: Data_Functor.map(Data_Functor.functorArray)(f)(o1.group1),
                              group2: Data_Functor.map(Data_Functor.functorArray)(f)(o1.group2)
                          };
                      })(o.before),
                      "new": f(o["new"])
                  };
              })(m.value0));
          };
          throw new Error("Failed pattern match at Derivation (line 142, column 1 - line 142, column 66): " + [ m.constructor.name ]);
      };
  });
  var formParser = function (dict) {
      return dict.formParser;
  };
  var equiv = function (dict) {
      return dict.equiv;
  };
  var eqSeqSide = new Data_Eq.Eq(function (x) {
      return function (y) {
          if (x instanceof LHS && y instanceof LHS) {
              return true;
          };
          if (x instanceof RHS && y instanceof RHS) {
              return true;
          };
          return false;
      };
  });
  var eqRenderTag = new Data_Eq.Eq(function (x) {
      return function (y) {
          if (x instanceof NewFormR && y instanceof NewFormR) {
              return true;
          };
          if (x instanceof SideFormR && y instanceof SideFormR) {
              return true;
          };
          if (x instanceof SideFormR1 && y instanceof SideFormR1) {
              return true;
          };
          if (x instanceof SideFormR2 && y instanceof SideFormR2) {
              return true;
          };
          if (x instanceof HasInput && y instanceof HasInput) {
              return x.value0 === y.value0;
          };
          return false;
      };
  });
  var eqNGTag = new Data_Eq.Eq(function (x) {
      return function (y) {
          if (x instanceof NewFormNG && y instanceof NewFormNG) {
              return true;
          };
          if (x instanceof SideFormNG && y instanceof SideFormNG) {
              return true;
          };
          return false;
      };
  });
  var explodeNG = function (v) {
      var untag = Data_Functor.map(Data_Functor.functorArray)(function (v1) {
          return v1.form;
      });
      var splitAtNew = function (forms) {
          var v1 = function (v2) {
              if (Data_Boolean.otherwise) {
                  return Data_Maybe.Nothing.value;
              };
              throw new Error("Failed pattern match at Derivation (line 153, column 1 - line 153, column 75): " + [ forms.constructor.name ]);
          };
          var $153 = Data_Array.span(function (v2) {
              return Data_Eq.notEq(eqNGTag)(v2.tag)(NewFormNG.value);
          })(forms);
          var $154 = Data_Array.uncons($153.rest);
          if ($154 instanceof Data_Maybe.Just) {
              var $155 = Data_Eq.eq(eqNGTag)($154.value0.head.tag)(NewFormNG.value);
              if ($155) {
                  return new Data_Maybe.Just({
                      init: $153.init,
                      head: $154.value0.head,
                      tail: $154.value0.tail
                  });
              };
              return v1(true);
          };
          return v1(true);
      };
      var v1 = splitAtNew(v.value1);
      var v2 = splitAtNew(v.value0);
      if (v2 instanceof Data_Maybe.Just) {
          return new LeftNG({
              before: untag(v2.value0.init),
              "new": v2.value0.head.form,
              after: untag(v2.value0.tail),
              cqts: untag(v.value1)
          });
      };
      if (v2 instanceof Data_Maybe.Nothing && v1 instanceof Data_Maybe.Just) {
          return new RightNG({
              ants: untag(v.value0),
              before: untag(v1.value0.init),
              "new": v1.value0.head.form,
              after: untag(v1.value0.tail)
          });
      };
      if (v2 instanceof Data_Maybe.Nothing && v1 instanceof Data_Maybe.Nothing) {
          return Partial_Unsafe.unsafeCrashWith("no new formula?!");
      };
      throw new Error("Failed pattern match at Derivation (line 155, column 3 - line 162, column 59): " + [ v2.constructor.name, v1.constructor.name ]);
  };
  var eqGTag = new Data_Eq.Eq(function (x) {
      return function (y) {
          if (x instanceof NewFormG && y instanceof NewFormG) {
              return true;
          };
          if (x instanceof SideFormG1 && y instanceof SideFormG1) {
              return true;
          };
          if (x instanceof SideFormG2 && y instanceof SideFormG2) {
              return true;
          };
          return false;
      };
  });
  var explodeG = function (v) {
      var untag = Data_Functor.map(Data_Functor.functorArray)(function (v1) {
          return v1.form;
      });
      var splitAtNew = function (forms) {
          var v1 = function (v2) {
              if (Data_Boolean.otherwise) {
                  return Data_Maybe.Nothing.value;
              };
              throw new Error("Failed pattern match at Derivation (line 170, column 1 - line 170, column 73): " + [ forms.constructor.name ]);
          };
          var $180 = Data_Array.span(function (v2) {
              return Data_Eq.notEq(eqGTag)(v2.tag)(NewFormG.value);
          })(forms);
          var $181 = Data_Array.uncons($180.rest);
          if ($181 instanceof Data_Maybe.Just) {
              var $182 = Data_Eq.eq(eqGTag)($181.value0.head.tag)(NewFormG.value);
              if ($182) {
                  return new Data_Maybe.Just({
                      init: $180.init,
                      head: $181.value0.head,
                      tail: $181.value0.tail
                  });
              };
              return v1(true);
          };
          return v1(true);
      };
      var group = function (forms) {
          var p = Data_Array.partition(function (v1) {
              return Data_Eq.eq(eqGTag)(v1.tag)(SideFormG1.value);
          })(forms);
          return {
              group1: untag(p.yes),
              group2: untag(p.no)
          };
      };
      var v1 = splitAtNew(v.value1);
      var v2 = splitAtNew(v.value0);
      if (v2 instanceof Data_Maybe.Just) {
          return new LeftG({
              before: group(v2.value0.init),
              "new": v2.value0.head.form,
              after: group(v2.value0.tail),
              cqts: group(v.value1)
          });
      };
      if (v2 instanceof Data_Maybe.Nothing && v1 instanceof Data_Maybe.Just) {
          return new RightG({
              ants: group(v.value0),
              before: group(v1.value0.init),
              "new": v1.value0.head.form,
              after: group(v1.value0.tail)
          });
      };
      if (v2 instanceof Data_Maybe.Nothing && v1 instanceof Data_Maybe.Nothing) {
          return Partial_Unsafe.unsafeCrashWith("no new formula?!");
      };
      throw new Error("Failed pattern match at Derivation (line 172, column 3 - line 179, column 59): " + [ v2.constructor.name, v1.constructor.name ]);
  };
  var enew = function (v) {
      if (v instanceof LeftNG) {
          return v["value0"]["new"];
      };
      if (v instanceof RightNG) {
          return v["value0"]["new"];
      };
      if (v instanceof LeftG) {
          return v["value0"]["new"];
      };
      if (v instanceof RightG) {
          return v["value0"]["new"];
      };
      throw new Error("Failed pattern match at Derivation (line 145, column 8 - line 149, column 23): " + [ v.constructor.name ]);
  };
  var complete = function (v) {
      if (v instanceof Assertion) {
          return false;
      };
      if (v instanceof Instantiating) {
          return false;
      };
      if (v instanceof Conclusion) {
          return Data_Foldable.all(Data_Foldable.foldableArray)(Data_HeytingAlgebra.heytingAlgebraBoolean)(complete)(v.value0.subprfs);
      };
      throw new Error("Failed pattern match at Derivation (line 242, column 1 - line 242, column 47): " + [ v.constructor.name ]);
  };
  var clickable = function (clss) {
      return function (act) {
          var buttonFor = function (e) {
              var v = Web_UIEvent_MouseEvent.ctrlKey(e);
              var v1 = Web_UIEvent_MouseEvent.button(e);
              if (v1 === 0 && !v) {
                  return new Data_Maybe.Just(LeftButton.value);
              };
              if (v1 === 0 && v) {
                  return new Data_Maybe.Just(MiddleButton.value);
              };
              if (v1 === 1) {
                  return new Data_Maybe.Just(MiddleButton.value);
              };
              if (v1 === 2) {
                  return new Data_Maybe.Just(RightButton.value);
              };
              return Data_Maybe.Nothing.value;
          };
          return Spork_Html_Elements.span([ Spork_Html_Properties.classes(Data_Semigroup.append(Data_Semigroup.semigroupArray)([ "clickable" ])(clss)), Spork_Html_Events.onMouseDown((function () {
              var $295 = Data_Functor.map(Data_Maybe.functorMaybe)(act);
              return function ($296) {
                  return $295(buttonFor($296));
              };
          })()) ]);
      };
  };
  var renderSequent = function (dictRenderForm) {
      return function (v) {
          var turnstile = clickable([  ])(function ($297) {
              return ClickedTurnstile.create((function (v1) {
                  return {
                      button: v1,
                      mpart: Data_Maybe.Nothing.value
                  };
              })($297));
          })([ Spork_Html_Core.text(" \u22a2 ") ]);
          var half = function (side) {
              var $298 = intersperse(Spork_Html_Core.text(", "));
              var $299 = Data_Array.mapWithIndex(function (ix) {
                  return renderForm(dictRenderForm)({
                      side: side,
                      ix: ix
                  });
              });
              return function ($300) {
                  return $298($299($300));
              };
          };
          return Spork_Html_Elements.span([  ])(Data_Semigroup.append(Data_Semigroup.semigroupArray)(half(LHS.value)(v.value0))(Data_Semigroup.append(Data_Semigroup.semigroupArray)([ turnstile ])(half(RHS.value)(v.value1))));
      };
  };
  var renderDerivation = function (dictRenderForm) {
      return function (prf) {
          var renderConc = (function () {
              var $301 = Data_Functor.map(Spork_Html_Core.functorHtml)(NAction.create);
              var $302 = renderSequent(dictRenderForm);
              return function ($303) {
                  return $301($302($303));
              };
          })();
          return Spork_Html_Elements.div([ Spork_Html_Properties.classes([ "derivation", Data_Monoid.guard(Data_Monoid.monoidString)(complete(prf))("complete") ]) ])((function () {
              if (prf instanceof Assertion) {
                  return [ renderConc(mapTags(Data_Function["const"](SideFormR.value))(prf.value0)) ];
              };
              if (prf instanceof Instantiating) {
                  var chtag = function (seqix$prime) {
                      var $223 = Data_Eq.eq(Data_Eq.eqRec()(Data_Eq.eqRowCons(Data_Eq.eqRowCons(Data_Eq.eqRowNil)()(new Data_Symbol.IsSymbol(function () {
                          return "side";
                      }))(eqSeqSide))()(new Data_Symbol.IsSymbol(function () {
                          return "ix";
                      }))(Data_Eq.eqInt)))(seqix$prime)(prf.value0.seqix);
                      if ($223) {
                          return Data_Function["const"](new HasInput(prf.value0.input));
                      };
                      return Data_Function["const"](SideFormR.value);
                  };
                  return [ renderConc(mapTagsI(chtag)(prf.value0.conc)) ];
              };
              if (prf instanceof Conclusion) {
                  return [ (function () {
                      var rsp = function (ix) {
                          return function (subprf) {
                              return Data_Functor.map(Spork_Html_Core.functorHtml)(ChildAction.create(ix))(renderDerivation(dictRenderForm)(subprf));
                          };
                      };
                      return Spork_Html_Elements.div([  ])(Data_Array.mapWithIndex(rsp)(prf.value0.subprfs));
                  })(), Spork_Html_Elements.hr([  ]), (function () {
                      var conc = (function () {
                          if (prf.value0.wconc instanceof ConcNG) {
                              return mapTags(ngTag(NewFormR.value)(SideFormR.value))(prf.value0.wconc.value0);
                          };
                          if (prf.value0.wconc instanceof ConcG) {
                              return mapTags(gTag(NewFormR.value)(SideFormR1.value)(SideFormR2.value))(prf.value0.wconc.value0);
                          };
                          throw new Error("Failed pattern match at Derivation (line 349, column 18 - line 351, column 79): " + [ prf.value0.wconc.constructor.name ]);
                      })();
                      return renderConc(conc);
                  })() ];
              };
              throw new Error("Failed pattern match at Derivation (line 339, column 3 - line 352, column 26): " + [ prf.constructor.name ]);
          })());
      };
  };
  var byPart = function (x) {
      return function (y) {
          return function (v) {
              if (v instanceof Part1) {
                  return x;
              };
              if (v instanceof Part2) {
                  return y;
              };
              throw new Error("Failed pattern match at Derivation (line 118, column 1 - line 118, column 44): " + [ x.constructor.name, y.constructor.name, v.constructor.name ]);
          };
      };
  };
  var applyRule = function ($copy_dictCalculus) {
      return function ($copy_rule) {
          return function ($copy_wconc) {
              var $tco_var_dictCalculus = $copy_dictCalculus;
              var $tco_var_rule = $copy_rule;
              var $tco_done = false;
              var $tco_result;
              function $tco_loop(dictCalculus, rule, wconc) {
                  var v = (function () {
                      if (wconc instanceof ConcNG) {
                          return Data_Tuple.Tuple.create(explodeNG(wconc.value0))(new ConcG(mapTags(ngTag(NewFormG.value)(SideFormG2.value))(wconc.value0)));
                      };
                      if (wconc instanceof ConcG) {
                          return Data_Tuple.Tuple.create(explodeG(wconc.value0))(new ConcNG(mapTags(gTag(NewFormNG.value)(SideFormNG.value)(SideFormNG.value))(wconc.value0)));
                      };
                      throw new Error("Failed pattern match at Derivation (line 314, column 32 - line 318, column 74): " + [ wconc.constructor.name ]);
                  })();
                  var v1 = pickRule(dictCalculus)(rule)(v.value0);
                  if (v1 instanceof NoRule) {
                      $tco_done = true;
                      return Data_Maybe.Nothing.value;
                  };
                  if (v1 instanceof WrongMode) {
                      $tco_var_dictCalculus = dictCalculus;
                      $tco_var_rule = rule;
                      $copy_wconc = v.value1;
                      return;
                  };
                  if (v1 instanceof Obligations) {
                      $tco_done = true;
                      return Data_Maybe.Just.create(new Conclusion({
                          subprfs: Data_Functor.map(Data_Functor.functorArray)(Assertion.create)(v1.value0),
                          rule: rule,
                          wconc: wconc
                      }));
                  };
                  throw new Error("Failed pattern match at Derivation (line 309, column 24 - line 313, column 57): " + [ v1.constructor.name ]);
              };
              while (!$tco_done) {
                  $tco_result = $tco_loop($tco_var_dictCalculus, $tco_var_rule, $copy_wconc);
              };
              return $tco_result;
          };
      };
  };
  var updateNode = function (dictCalculus) {
      return function (prf) {
          return function (v) {
              if (v instanceof ClickedTurnstile && v.value0.button instanceof MiddleButton) {
                  return prf;
              };
              if (v instanceof ClickedTurnstile && v.value0.button instanceof RightButton) {
                  return new Assertion(unitaggedConc(prf));
              };
              var v1 = function (v2) {
                  if (v instanceof ClickedTurnstile && (v.value0.button instanceof LeftButton && Data_Boolean.otherwise)) {
                      return prf;
                  };
                  if (v instanceof PickedForm) {
                      return Data_Maybe.fromMaybe(prf)((function () {
                          if (prf instanceof Conclusion && prf.value0.wconc instanceof ConcG) {
                              var chtag = function (seqix$prime) {
                                  var $256 = Data_Eq.eq(Data_Eq.eqRec()(Data_Eq.eqRowCons(Data_Eq.eqRowCons(Data_Eq.eqRowNil)()(new Data_Symbol.IsSymbol(function () {
                                      return "side";
                                  }))(eqSeqSide))()(new Data_Symbol.IsSymbol(function () {
                                      return "ix";
                                  }))(Data_Eq.eqInt)))(seqix$prime)(v.value0.seqix);
                                  if ($256) {
                                      return gTag(NewFormG.value)(SideFormG2.value)(SideFormG1.value);
                                  };
                                  return Control_Category.identity(Control_Category.categoryFn);
                              };
                              return applyRule(dictCalculus)(prf.value0.rule)(new ConcG(mapTagsI(chtag)(prf.value0.wconc.value0)));
                          };
                          var chtag = function (seqix$prime) {
                              return function (v3) {
                                  var $261 = Data_Eq.eq(Data_Eq.eqRec()(Data_Eq.eqRowCons(Data_Eq.eqRowCons(Data_Eq.eqRowNil)()(new Data_Symbol.IsSymbol(function () {
                                      return "side";
                                  }))(eqSeqSide))()(new Data_Symbol.IsSymbol(function () {
                                      return "ix";
                                  }))(Data_Eq.eqInt)))(seqix$prime)(v.value0.seqix);
                                  if ($261) {
                                      return NewFormNG.value;
                                  };
                                  return SideFormNG.value;
                              };
                          };
                          return applyRule(dictCalculus)(new RC(v.value0.click, v.value0.inst))(new ConcNG(mapTagsI(chtag)(unitaggedConc(prf))));
                      })());
                  };
                  if (v instanceof NeedInstantiation) {
                      return new Instantiating({
                          conc: unitaggedConc(prf),
                          seqix: v.value0,
                          input: ""
                      });
                  };
                  if (v instanceof Input) {
                      if (prf instanceof Instantiating) {
                          return new Instantiating({
                              conc: prf.value0.conc,
                              seqix: prf.value0.seqix,
                              input: v.value0
                          });
                      };
                      return prf;
                  };
                  if (v instanceof Submit) {
                      var v3 = function (v4) {
                          return prf;
                      };
                      if (prf instanceof Instantiating) {
                          var $271 = Text_Parsing_StringParser.runParser(formParser(dictCalculus)(Data_Unit.unit))(prf.value0.input);
                          if ($271 instanceof Data_Either.Right) {
                              var nact$prime = new PickedForm({
                                  click: {
                                      button: LeftButton.value,
                                      mpart: Data_Maybe.Nothing.value
                                  },
                                  seqix: prf.value0.seqix,
                                  inst: new Data_Maybe.Just($271.value0)
                              });
                              return updateNode(dictCalculus)(prf)(nact$prime);
                          };
                          return v3(true);
                      };
                      return v3(true);
                  };
                  throw new Error("Failed pattern match at Derivation (line 267, column 1 - line 268, column 46): " + [ prf.constructor.name, v.constructor.name ]);
              };
              if (v instanceof ClickedTurnstile && v.value0.button instanceof LeftButton) {
                  var $279 = unitaggedConc(prf);
                  if ($279.value0.length === 1 && $279.value1.length === 1) {
                      var $280 = equiv(dictCalculus)($279["value0"][0].form)($279["value1"][0].form);
                      if ($280) {
                          return new Conclusion({
                              subprfs: [  ],
                              rule: new RC(v.value0, Data_Maybe.Nothing.value),
                              wconc: new ConcNG(new Entails([ {
                                  form: $279["value0"][0].form,
                                  tag: SideFormNG.value
                              } ], [ {
                                  form: $279["value1"][0].form,
                                  tag: NewFormNG.value
                              } ]))
                          });
                      };
                      return v1(true);
                  };
                  return v1(true);
              };
              return v1(true);
          };
      };
  };
  var update = function (dictCalculus) {
      return function (v) {
          return function (v1) {
              if (v1 instanceof NAction) {
                  return updateNode(dictCalculus)(v)(v1.value0);
              };
              if (v instanceof Conclusion && v1 instanceof ChildAction) {
                  return new Conclusion({
                      subprfs: Data_Maybe.fromMaybe(v.value0.subprfs)(Data_Array.modifyAt(v1.value0)(Data_Function.flip(update(dictCalculus))(v1.value1))(v.value0.subprfs)),
                      rule: v.value0.rule,
                      wconc: v.value0.wconc
                  });
              };
              return v;
          };
      };
  };
  exports["formParser"] = formParser;
  exports["okInitial"] = okInitial;
  exports["pickRule"] = pickRule;
  exports["renderForm"] = renderForm;
  exports["unitaggedEntails"] = unitaggedEntails;
  exports["LHS"] = LHS;
  exports["RHS"] = RHS;
  exports["LeftButton"] = LeftButton;
  exports["MiddleButton"] = MiddleButton;
  exports["RightButton"] = RightButton;
  exports["Part1"] = Part1;
  exports["Part2"] = Part2;
  exports["byPart"] = byPart;
  exports["LeftNG"] = LeftNG;
  exports["RightNG"] = RightNG;
  exports["LeftG"] = LeftG;
  exports["RightG"] = RightG;
  exports["enew"] = enew;
  exports["NoRule"] = NoRule;
  exports["WrongMode"] = WrongMode;
  exports["Obligations"] = Obligations;
  exports["Calculus"] = Calculus;
  exports["Assertion"] = Assertion;
  exports["ClickedTurnstile"] = ClickedTurnstile;
  exports["PickedForm"] = PickedForm;
  exports["NeedInstantiation"] = NeedInstantiation;
  exports["Input"] = Input;
  exports["Submit"] = Submit;
  exports["update"] = update;
  exports["NewFormR"] = NewFormR;
  exports["SideFormR1"] = SideFormR1;
  exports["SideFormR2"] = SideFormR2;
  exports["HasInput"] = HasInput;
  exports["RenderForm"] = RenderForm;
  exports["renderDerivation"] = renderDerivation;
  exports["clickable"] = clickable;
  exports["functorRuleChoice"] = functorRuleChoice;
  exports["functorExplodedSequent"] = functorExplodedSequent;
  exports["functorPickAction"] = functorPickAction;
  exports["functorNodeAction"] = functorNodeAction;
  exports["eqRenderTag"] = eqRenderTag;
})(PS);
(function($PS) {
  // Generated by purs version 0.13.8
  "use strict";
  $PS["Data.Array.NonEmpty"] = $PS["Data.Array.NonEmpty"] || {};
  var exports = $PS["Data.Array.NonEmpty"];
  var Data_Array = $PS["Data.Array"];
  var Data_Maybe = $PS["Data.Maybe"];
  var Unsafe_Coerce = $PS["Unsafe.Coerce"];        
  var toArray = Unsafe_Coerce.unsafeCoerce;
  var adaptMaybe = function (f) {
      var $64 = Data_Maybe.fromJust();
      return function ($65) {
          return $64(f(toArray($65)));
      };
  };
  var head = adaptMaybe(Data_Array.head);
  exports["head"] = head;
})(PS);
(function(exports) {
  "use strict";

  exports.toCharCode = function (c) {
    return c.charCodeAt(0);
  };

  exports.fromCharCode = function (c) {
    return String.fromCharCode(c);
  };
})(PS["Data.Enum"] = PS["Data.Enum"] || {});
(function(exports) {
  "use strict";

  exports.topInt = 2147483647;
  exports.bottomInt = -2147483648;

  exports.topChar = String.fromCharCode(65535);
  exports.bottomChar = String.fromCharCode(0);
})(PS["Data.Bounded"] = PS["Data.Bounded"] || {});
(function(exports) {
  "use strict";

  var unsafeCompareImpl = function (lt) {
    return function (eq) {
      return function (gt) {
        return function (x) {
          return function (y) {
            return x < y ? lt : x === y ? eq : gt;
          };
        };
      };
    };
  };                                         
  exports.ordIntImpl = unsafeCompareImpl;   
  exports.ordCharImpl = unsafeCompareImpl;
})(PS["Data.Ord"] = PS["Data.Ord"] || {});
(function($PS) {
  // Generated by purs version 0.13.8
  "use strict";
  $PS["Data.Ordering"] = $PS["Data.Ordering"] || {};
  var exports = $PS["Data.Ordering"];              
  var LT = (function () {
      function LT() {

      };
      LT.value = new LT();
      return LT;
  })();
  var GT = (function () {
      function GT() {

      };
      GT.value = new GT();
      return GT;
  })();
  var EQ = (function () {
      function EQ() {

      };
      EQ.value = new EQ();
      return EQ;
  })();
  exports["LT"] = LT;
  exports["GT"] = GT;
  exports["EQ"] = EQ;
})(PS);
(function($PS) {
  // Generated by purs version 0.13.8
  "use strict";
  $PS["Data.Ord"] = $PS["Data.Ord"] || {};
  var exports = $PS["Data.Ord"];
  var $foreign = $PS["Data.Ord"];
  var Data_Eq = $PS["Data.Eq"];
  var Data_Ordering = $PS["Data.Ordering"];
  var Ord = function (Eq0, compare) {
      this.Eq0 = Eq0;
      this.compare = compare;
  };                                                                                                 
  var ordInt = new Ord(function () {
      return Data_Eq.eqInt;
  }, $foreign.ordIntImpl(Data_Ordering.LT.value)(Data_Ordering.EQ.value)(Data_Ordering.GT.value));
  var ordChar = new Ord(function () {
      return Data_Eq.eqChar;
  }, $foreign.ordCharImpl(Data_Ordering.LT.value)(Data_Ordering.EQ.value)(Data_Ordering.GT.value));
  var compare = function (dict) {
      return dict.compare;
  };
  exports["Ord"] = Ord;
  exports["compare"] = compare;
  exports["ordInt"] = ordInt;
  exports["ordChar"] = ordChar;
})(PS);
(function($PS) {
  // Generated by purs version 0.13.8
  "use strict";
  $PS["Data.Bounded"] = $PS["Data.Bounded"] || {};
  var exports = $PS["Data.Bounded"];
  var $foreign = $PS["Data.Bounded"];
  var Data_Ord = $PS["Data.Ord"];                  
  var Bounded = function (Ord0, bottom, top) {
      this.Ord0 = Ord0;
      this.bottom = bottom;
      this.top = top;
  };
  var top = function (dict) {
      return dict.top;
  };                                            
  var boundedInt = new Bounded(function () {
      return Data_Ord.ordInt;
  }, $foreign.bottomInt, $foreign.topInt);
  var boundedChar = new Bounded(function () {
      return Data_Ord.ordChar;
  }, $foreign.bottomChar, $foreign.topChar);
  var bottom = function (dict) {
      return dict.bottom;
  };
  exports["Bounded"] = Bounded;
  exports["bottom"] = bottom;
  exports["top"] = top;
  exports["boundedInt"] = boundedInt;
  exports["boundedChar"] = boundedChar;
})(PS);
(function($PS) {
  // Generated by purs version 0.13.8
  "use strict";
  $PS["Data.Enum"] = $PS["Data.Enum"] || {};
  var exports = $PS["Data.Enum"];
  var $foreign = $PS["Data.Enum"];
  var Data_Bounded = $PS["Data.Bounded"];
  var Data_Maybe = $PS["Data.Maybe"];
  var Data_Ord = $PS["Data.Ord"];
  var Enum = function (Ord0, pred, succ) {
      this.Ord0 = Ord0;
      this.pred = pred;
      this.succ = succ;
  };
  var BoundedEnum = function (Bounded0, Enum1, cardinality, fromEnum, toEnum) {
      this.Bounded0 = Bounded0;
      this.Enum1 = Enum1;
      this.cardinality = cardinality;
      this.fromEnum = fromEnum;
      this.toEnum = toEnum;
  };
  var toEnum = function (dict) {
      return dict.toEnum;
  };              
  var fromEnum = function (dict) {
      return dict.fromEnum;
  };
  var toEnumWithDefaults = function (dictBoundedEnum) {
      return function (low) {
          return function (high) {
              return function (x) {
                  var v = toEnum(dictBoundedEnum)(x);
                  if (v instanceof Data_Maybe.Just) {
                      return v.value0;
                  };
                  if (v instanceof Data_Maybe.Nothing) {
                      var $54 = x < fromEnum(dictBoundedEnum)(Data_Bounded.bottom(dictBoundedEnum.Bounded0()));
                      if ($54) {
                          return low;
                      };
                      return high;
                  };
                  throw new Error("Failed pattern match at Data.Enum (line 158, column 33 - line 160, column 62): " + [ v.constructor.name ]);
              };
          };
      };
  };
  var defaultSucc = function (toEnum$prime) {
      return function (fromEnum$prime) {
          return function (a) {
              return toEnum$prime(fromEnum$prime(a) + 1 | 0);
          };
      };
  };
  var defaultPred = function (toEnum$prime) {
      return function (fromEnum$prime) {
          return function (a) {
              return toEnum$prime(fromEnum$prime(a) - 1 | 0);
          };
      };
  };
  var charToEnum = function (v) {
      if (v >= Data_Bounded.bottom(Data_Bounded.boundedInt) && v <= Data_Bounded.top(Data_Bounded.boundedInt)) {
          return new Data_Maybe.Just($foreign.fromCharCode(v));
      };
      return Data_Maybe.Nothing.value;
  };
  var enumChar = new Enum(function () {
      return Data_Ord.ordChar;
  }, defaultPred(charToEnum)($foreign.toCharCode), defaultSucc(charToEnum)($foreign.toCharCode));
  var boundedEnumChar = new BoundedEnum(function () {
      return Data_Bounded.boundedChar;
  }, function () {
      return enumChar;
  }, $foreign.toCharCode(Data_Bounded.top(Data_Bounded.boundedChar)) - $foreign.toCharCode(Data_Bounded.bottom(Data_Bounded.boundedChar)) | 0, $foreign.toCharCode, charToEnum);
  exports["Enum"] = Enum;
  exports["BoundedEnum"] = BoundedEnum;
  exports["toEnum"] = toEnum;
  exports["fromEnum"] = fromEnum;
  exports["toEnumWithDefaults"] = toEnumWithDefaults;
  exports["defaultSucc"] = defaultSucc;
  exports["defaultPred"] = defaultPred;
  exports["boundedEnumChar"] = boundedEnumChar;
})(PS);
(function($PS) {
  // Generated by purs version 0.13.8
  "use strict";
  $PS["Data.Char"] = $PS["Data.Char"] || {};
  var exports = $PS["Data.Char"];
  var Data_Enum = $PS["Data.Enum"];                
  var toCharCode = Data_Enum.fromEnum(Data_Enum.boundedEnumChar);
  var fromCharCode = Data_Enum.toEnum(Data_Enum.boundedEnumChar);
  exports["toCharCode"] = toCharCode;
  exports["fromCharCode"] = fromCharCode;
})(PS);
(function(exports) {
  "use strict";

  exports.showIntImpl = function (n) {
    return n.toString();
  };

  exports.showCharImpl = function (c) {
    var code = c.charCodeAt(0);
    if (code < 0x20 || code === 0x7F) {
      switch (c) {
        case "\x07": return "'\\a'";
        case "\b": return "'\\b'";
        case "\f": return "'\\f'";
        case "\n": return "'\\n'";
        case "\r": return "'\\r'";
        case "\t": return "'\\t'";
        case "\v": return "'\\v'";
      }
      return "'\\" + code.toString(10) + "'";
    }
    return c === "'" || c === "\\" ? "'\\" + c + "'" : "'" + c + "'";
  };

  exports.showArrayImpl = function (f) {
    return function (xs) {
      var ss = [];
      for (var i = 0, l = xs.length; i < l; i++) {
        ss[i] = f(xs[i]);
      }
      return "[" + ss.join(",") + "]";
    };
  };
})(PS["Data.Show"] = PS["Data.Show"] || {});
(function($PS) {
  // Generated by purs version 0.13.8
  "use strict";
  $PS["Data.Show"] = $PS["Data.Show"] || {};
  var exports = $PS["Data.Show"];
  var $foreign = $PS["Data.Show"];
  var Show = function (show) {
      this.show = show;
  };                                                 
  var showInt = new Show($foreign.showIntImpl);
  var showChar = new Show($foreign.showCharImpl);
  var show = function (dict) {
      return dict.show;
  };
  var showArray = function (dictShow) {
      return new Show($foreign.showArrayImpl(show(dictShow)));
  };
  exports["Show"] = Show;
  exports["show"] = show;
  exports["showInt"] = showInt;
  exports["showChar"] = showChar;
  exports["showArray"] = showArray;
})(PS);
(function(exports) {
  "use strict";
  /* global Symbol */

  var hasArrayFrom = typeof Array.from === "function";
  var hasStringIterator =
    typeof Symbol !== "undefined" &&
    Symbol != null &&
    typeof Symbol.iterator !== "undefined" &&
    typeof String.prototype[Symbol.iterator] === "function";
  var hasFromCodePoint = typeof String.prototype.fromCodePoint === "function";
  var hasCodePointAt = typeof String.prototype.codePointAt === "function";

  exports._unsafeCodePointAt0 = function (fallback) {
    return hasCodePointAt
      ? function (str) { return str.codePointAt(0); }
      : fallback;
  };

  exports._codePointAt = function (fallback) {
    return function (Just) {
      return function (Nothing) {
        return function (unsafeCodePointAt0) {
          return function (index) {
            return function (str) {
              var length = str.length;
              if (index < 0 || index >= length) return Nothing;
              if (hasStringIterator) {
                var iter = str[Symbol.iterator]();
                for (var i = index;; --i) {
                  var o = iter.next();
                  if (o.done) return Nothing;
                  if (i === 0) return Just(unsafeCodePointAt0(o.value));
                }
              }
              return fallback(index)(str);
            };
          };
        };
      };
    };
  };

  exports._singleton = function (fallback) {
    return hasFromCodePoint ? String.fromCodePoint : fallback;
  };

  exports._take = function (fallback) {
    return function (n) {
      if (hasStringIterator) {
        return function (str) {
          var accum = "";
          var iter = str[Symbol.iterator]();
          for (var i = 0; i < n; ++i) {
            var o = iter.next();
            if (o.done) return accum;
            accum += o.value;
          }
          return accum;
        };
      }
      return fallback(n);
    };
  };

  exports._toCodePointArray = function (fallback) {
    return function (unsafeCodePointAt0) {
      if (hasArrayFrom) {
        return function (str) {
          return Array.from(str, unsafeCodePointAt0);
        };
      }
      return fallback;
    };
  };
})(PS["Data.String.CodePoints"] = PS["Data.String.CodePoints"] || {});
(function(exports) {
  "use strict";

  exports.intDegree = function (x) {
    return Math.min(Math.abs(x), 2147483647);
  };

  // See the Euclidean definition in
  // https://en.m.wikipedia.org/wiki/Modulo_operation.
  exports.intDiv = function (x) {
    return function (y) {
      if (y === 0) return 0;
      return y > 0 ? Math.floor(x / y) : -Math.floor(x / -y);
    };
  };

  exports.intMod = function (x) {
    return function (y) {
      if (y === 0) return 0;
      var yy = Math.abs(y);
      return ((x % yy) + yy) % yy;
    };
  };
})(PS["Data.EuclideanRing"] = PS["Data.EuclideanRing"] || {});
(function(exports) {
  "use strict";

  exports.intSub = function (x) {
    return function (y) {
      /* jshint bitwise: false */
      return x - y | 0;
    };
  };
})(PS["Data.Ring"] = PS["Data.Ring"] || {});
(function(exports) {
  "use strict";

  exports.intAdd = function (x) {
    return function (y) {
      /* jshint bitwise: false */
      return x + y | 0;
    };
  };

  exports.intMul = function (x) {
    return function (y) {
      /* jshint bitwise: false */
      return x * y | 0;
    };
  };
})(PS["Data.Semiring"] = PS["Data.Semiring"] || {});
(function($PS) {
  // Generated by purs version 0.13.8
  "use strict";
  $PS["Data.Semiring"] = $PS["Data.Semiring"] || {};
  var exports = $PS["Data.Semiring"];
  var $foreign = $PS["Data.Semiring"];
  var Semiring = function (add, mul, one, zero) {
      this.add = add;
      this.mul = mul;
      this.one = one;
      this.zero = zero;
  };                                                                            
  var semiringInt = new Semiring($foreign.intAdd, $foreign.intMul, 1, 0);
  var add = function (dict) {
      return dict.add;
  };
  exports["add"] = add;
  exports["semiringInt"] = semiringInt;
})(PS);
(function($PS) {
  // Generated by purs version 0.13.8
  "use strict";
  $PS["Data.Ring"] = $PS["Data.Ring"] || {};
  var exports = $PS["Data.Ring"];
  var $foreign = $PS["Data.Ring"];
  var Data_Semiring = $PS["Data.Semiring"];
  var Ring = function (Semiring0, sub) {
      this.Semiring0 = Semiring0;
      this.sub = sub;
  };                  
  var ringInt = new Ring(function () {
      return Data_Semiring.semiringInt;
  }, $foreign.intSub);
  exports["ringInt"] = ringInt;
})(PS);
(function($PS) {
  // Generated by purs version 0.13.8
  "use strict";
  $PS["Data.CommutativeRing"] = $PS["Data.CommutativeRing"] || {};
  var exports = $PS["Data.CommutativeRing"];
  var Data_Ring = $PS["Data.Ring"];
  var CommutativeRing = function (Ring0) {
      this.Ring0 = Ring0;
  }; 
  var commutativeRingInt = new CommutativeRing(function () {
      return Data_Ring.ringInt;
  });
  exports["commutativeRingInt"] = commutativeRingInt;
})(PS);
(function($PS) {
  // Generated by purs version 0.13.8
  "use strict";
  $PS["Data.EuclideanRing"] = $PS["Data.EuclideanRing"] || {};
  var exports = $PS["Data.EuclideanRing"];
  var $foreign = $PS["Data.EuclideanRing"];
  var Data_CommutativeRing = $PS["Data.CommutativeRing"];  
  var EuclideanRing = function (CommutativeRing0, degree, div, mod) {
      this.CommutativeRing0 = CommutativeRing0;
      this.degree = degree;
      this.div = div;
      this.mod = mod;
  };
  var mod = function (dict) {
      return dict.mod;
  }; 
  var euclideanRingInt = new EuclideanRing(function () {
      return Data_CommutativeRing.commutativeRingInt;
  }, $foreign.intDegree, $foreign.intDiv, $foreign.intMod);
  var div = function (dict) {
      return dict.div;
  };
  exports["div"] = div;
  exports["mod"] = mod;
  exports["euclideanRingInt"] = euclideanRingInt;
})(PS);
(function(exports) {
  "use strict";

  exports.toStringAs = function (radix) {
    return function (i) {
      return i.toString(radix);
    };
  };
})(PS["Data.Int"] = PS["Data.Int"] || {});
(function($PS) {
  // Generated by purs version 0.13.8
  "use strict";
  $PS["Data.Int"] = $PS["Data.Int"] || {};
  var exports = $PS["Data.Int"];
  var $foreign = $PS["Data.Int"];
  var hexadecimal = 16;
  exports["hexadecimal"] = hexadecimal;
  exports["toStringAs"] = $foreign.toStringAs;
})(PS);
(function(exports) {
  "use strict";

  exports.singleton = function (c) {
    return c;
  };

  exports._charAt = function (just) {
    return function (nothing) {
      return function (i) {
        return function (s) {
          return i >= 0 && i < s.length ? just(s.charAt(i)) : nothing;
        };
      };
    };
  };

  exports.length = function (s) {
    return s.length;
  };

  exports._indexOf = function (just) {
    return function (nothing) {
      return function (x) {
        return function (s) {
          var i = s.indexOf(x);
          return i === -1 ? nothing : just(i);
        };
      };
    };
  };

  exports.take = function (n) {
    return function (s) {
      return s.substr(0, n);
    };
  };

  exports.drop = function (n) {
    return function (s) {
      return s.substring(n);
    };
  };

  exports.splitAt = function (i) {
    return function (s) {
      return { before: s.substring(0, i), after: s.substring(i) };
    };
  };
})(PS["Data.String.CodeUnits"] = PS["Data.String.CodeUnits"] || {});
(function(exports) {
  "use strict";

  exports.charAt = function (i) {
    return function (s) {
      if (i >= 0 && i < s.length) return s.charAt(i);
      throw new Error("Data.String.Unsafe.charAt: Invalid index.");
    };
  };
})(PS["Data.String.Unsafe"] = PS["Data.String.Unsafe"] || {});
(function($PS) {
  // Generated by purs version 0.13.8
  "use strict";
  $PS["Data.String.Unsafe"] = $PS["Data.String.Unsafe"] || {};
  var exports = $PS["Data.String.Unsafe"];
  var $foreign = $PS["Data.String.Unsafe"];
  exports["charAt"] = $foreign.charAt;
})(PS);
(function($PS) {
  // Generated by purs version 0.13.8
  "use strict";
  $PS["Data.String.CodeUnits"] = $PS["Data.String.CodeUnits"] || {};
  var exports = $PS["Data.String.CodeUnits"];
  var $foreign = $PS["Data.String.CodeUnits"];
  var Data_Maybe = $PS["Data.Maybe"];
  var Data_String_Unsafe = $PS["Data.String.Unsafe"];                
  var uncons = function (v) {
      if (v === "") {
          return Data_Maybe.Nothing.value;
      };
      return new Data_Maybe.Just({
          head: Data_String_Unsafe.charAt(0)(v),
          tail: $foreign.drop(1)(v)
      });
  };
  var stripPrefix = function (v) {
      return function (str) {
          var v1 = $foreign.splitAt($foreign.length(v))(str);
          var $15 = v1.before === v;
          if ($15) {
              return new Data_Maybe.Just(v1.after);
          };
          return Data_Maybe.Nothing.value;
      };
  };                                                                                                   
  var indexOf = $foreign["_indexOf"](Data_Maybe.Just.create)(Data_Maybe.Nothing.value);
  var charAt = $foreign["_charAt"](Data_Maybe.Just.create)(Data_Maybe.Nothing.value);
  exports["stripPrefix"] = stripPrefix;
  exports["uncons"] = uncons;
  exports["indexOf"] = indexOf;
  exports["singleton"] = $foreign.singleton;
  exports["length"] = $foreign.length;
  exports["take"] = $foreign.take;
  exports["drop"] = $foreign.drop;
})(PS);
(function(exports) {
  "use strict";

  exports.unfoldrArrayImpl = function (isNothing) {
    return function (fromJust) {
      return function (fst) {
        return function (snd) {
          return function (f) {
            return function (b) {
              var result = [];
              var value = b;
              while (true) { // eslint-disable-line no-constant-condition
                var maybe = f(value);
                if (isNothing(maybe)) return result;
                var tuple = fromJust(maybe);
                result.push(fst(tuple));
                value = snd(tuple);
              }
            };
          };
        };
      };
    };
  };
})(PS["Data.Unfoldable"] = PS["Data.Unfoldable"] || {});
(function(exports) {
  "use strict";

  exports.unfoldr1ArrayImpl = function (isNothing) {
    return function (fromJust) {
      return function (fst) {
        return function (snd) {
          return function (f) {
            return function (b) {
              var result = [];
              var value = b;
              while (true) { // eslint-disable-line no-constant-condition
                var tuple = f(value);
                result.push(fst(tuple));
                var maybe = snd(tuple);
                if (isNothing(maybe)) return result;
                value = fromJust(maybe);
              }
            };
          };
        };
      };
    };
  };
})(PS["Data.Unfoldable1"] = PS["Data.Unfoldable1"] || {});
(function($PS) {
  // Generated by purs version 0.13.8
  "use strict";
  $PS["Data.Unfoldable1"] = $PS["Data.Unfoldable1"] || {};
  var exports = $PS["Data.Unfoldable1"];
  var $foreign = $PS["Data.Unfoldable1"];
  var Data_Maybe = $PS["Data.Maybe"];
  var Data_Tuple = $PS["Data.Tuple"];                
  var Unfoldable1 = function (unfoldr1) {
      this.unfoldr1 = unfoldr1;
  }; 
  var unfoldable1Array = new Unfoldable1($foreign.unfoldr1ArrayImpl(Data_Maybe.isNothing)(Data_Maybe.fromJust())(Data_Tuple.fst)(Data_Tuple.snd));
  exports["unfoldable1Array"] = unfoldable1Array;
})(PS);
(function($PS) {
  // Generated by purs version 0.13.8
  "use strict";
  $PS["Data.Unfoldable"] = $PS["Data.Unfoldable"] || {};
  var exports = $PS["Data.Unfoldable"];
  var $foreign = $PS["Data.Unfoldable"];
  var Data_Maybe = $PS["Data.Maybe"];
  var Data_Tuple = $PS["Data.Tuple"];
  var Data_Unfoldable1 = $PS["Data.Unfoldable1"];  
  var Unfoldable = function (Unfoldable10, unfoldr) {
      this.Unfoldable10 = Unfoldable10;
      this.unfoldr = unfoldr;
  };
  var unfoldr = function (dict) {
      return dict.unfoldr;
  }; 
  var unfoldableArray = new Unfoldable(function () {
      return Data_Unfoldable1.unfoldable1Array;
  }, $foreign.unfoldrArrayImpl(Data_Maybe.isNothing)(Data_Maybe.fromJust())(Data_Tuple.fst)(Data_Tuple.snd));
  exports["unfoldr"] = unfoldr;
  exports["unfoldableArray"] = unfoldableArray;
})(PS);
(function($PS) {
  // Generated by purs version 0.13.8
  "use strict";
  $PS["Data.String.CodePoints"] = $PS["Data.String.CodePoints"] || {};
  var exports = $PS["Data.String.CodePoints"];
  var $foreign = $PS["Data.String.CodePoints"];
  var Data_Array = $PS["Data.Array"];
  var Data_Boolean = $PS["Data.Boolean"];
  var Data_Bounded = $PS["Data.Bounded"];
  var Data_Enum = $PS["Data.Enum"];
  var Data_Eq = $PS["Data.Eq"];
  var Data_EuclideanRing = $PS["Data.EuclideanRing"];
  var Data_Functor = $PS["Data.Functor"];
  var Data_Int = $PS["Data.Int"];
  var Data_Maybe = $PS["Data.Maybe"];
  var Data_Ord = $PS["Data.Ord"];
  var Data_Show = $PS["Data.Show"];
  var Data_String_CodeUnits = $PS["Data.String.CodeUnits"];
  var Data_String_Common = $PS["Data.String.Common"];
  var Data_String_Unsafe = $PS["Data.String.Unsafe"];
  var Data_Tuple = $PS["Data.Tuple"];
  var Data_Unfoldable = $PS["Data.Unfoldable"];
  var unsurrogate = function (lead) {
      return function (trail) {
          return (((lead - 55296 | 0) * 1024 | 0) + (trail - 56320 | 0) | 0) + 65536 | 0;
      };
  };
  var showCodePoint = new Data_Show.Show(function (v) {
      return "(CodePoint 0x" + (Data_String_Common.toUpper(Data_Int.toStringAs(Data_Int.hexadecimal)(v)) + ")");
  });
  var isTrail = function (cu) {
      return 56320 <= cu && cu <= 57343;
  };
  var isLead = function (cu) {
      return 55296 <= cu && cu <= 56319;
  };
  var uncons = function (s) {
      var v = Data_String_CodeUnits.length(s);
      if (v === 0) {
          return Data_Maybe.Nothing.value;
      };
      if (v === 1) {
          return new Data_Maybe.Just({
              head: Data_Enum.fromEnum(Data_Enum.boundedEnumChar)(Data_String_Unsafe.charAt(0)(s)),
              tail: ""
          });
      };
      var cu1 = Data_Enum.fromEnum(Data_Enum.boundedEnumChar)(Data_String_Unsafe.charAt(1)(s));
      var cu0 = Data_Enum.fromEnum(Data_Enum.boundedEnumChar)(Data_String_Unsafe.charAt(0)(s));
      var $21 = isLead(cu0) && isTrail(cu1);
      if ($21) {
          return new Data_Maybe.Just({
              head: unsurrogate(cu0)(cu1),
              tail: Data_String_CodeUnits.drop(2)(s)
          });
      };
      return new Data_Maybe.Just({
          head: cu0,
          tail: Data_String_CodeUnits.drop(1)(s)
      });
  };
  var unconsButWithTuple = function (s) {
      return Data_Functor.map(Data_Maybe.functorMaybe)(function (v) {
          return new Data_Tuple.Tuple(v.head, v.tail);
      })(uncons(s));
  };
  var toCodePointArrayFallback = function (s) {
      return Data_Unfoldable.unfoldr(Data_Unfoldable.unfoldableArray)(unconsButWithTuple)(s);
  };
  var unsafeCodePointAt0Fallback = function (s) {
      var cu0 = Data_Enum.fromEnum(Data_Enum.boundedEnumChar)(Data_String_Unsafe.charAt(0)(s));
      var $25 = isLead(cu0) && Data_String_CodeUnits.length(s) > 1;
      if ($25) {
          var cu1 = Data_Enum.fromEnum(Data_Enum.boundedEnumChar)(Data_String_Unsafe.charAt(1)(s));
          var $26 = isTrail(cu1);
          if ($26) {
              return unsurrogate(cu0)(cu1);
          };
          return cu0;
      };
      return cu0;
  };
  var unsafeCodePointAt0 = $foreign["_unsafeCodePointAt0"](unsafeCodePointAt0Fallback);
  var toCodePointArray = $foreign["_toCodePointArray"](toCodePointArrayFallback)(unsafeCodePointAt0);
  var length = function ($52) {
      return Data_Array.length(toCodePointArray($52));
  };
  var indexOf = function (p) {
      return function (s) {
          return Data_Functor.map(Data_Maybe.functorMaybe)(function (i) {
              return length(Data_String_CodeUnits.take(i)(s));
          })(Data_String_CodeUnits.indexOf(p)(s));
      };
  };
  var fromCharCode = (function () {
      var $53 = Data_Enum.toEnumWithDefaults(Data_Enum.boundedEnumChar)(Data_Bounded.bottom(Data_Bounded.boundedChar))(Data_Bounded.top(Data_Bounded.boundedChar));
      return function ($54) {
          return Data_String_CodeUnits.singleton($53($54));
      };
  })();
  var singletonFallback = function (v) {
      if (v <= 65535) {
          return fromCharCode(v);
      };
      var lead = Data_EuclideanRing.div(Data_EuclideanRing.euclideanRingInt)(v - 65536 | 0)(1024) + 55296 | 0;
      var trail = Data_EuclideanRing.mod(Data_EuclideanRing.euclideanRingInt)(v - 65536 | 0)(1024) + 56320 | 0;
      return fromCharCode(lead) + fromCharCode(trail);
  };                                                                          
  var singleton = $foreign["_singleton"](singletonFallback);
  var takeFallback = function (n) {
      return function (v) {
          if (n < 1) {
              return "";
          };
          var v1 = uncons(v);
          if (v1 instanceof Data_Maybe.Just) {
              return singleton(v1.value0.head) + takeFallback(n - 1 | 0)(v1.value0.tail);
          };
          return v;
      };
  };
  var take = $foreign["_take"](takeFallback);
  var eqCodePoint = new Data_Eq.Eq(function (x) {
      return function (y) {
          return x === y;
      };
  });
  var ordCodePoint = new Data_Ord.Ord(function () {
      return eqCodePoint;
  }, function (x) {
      return function (y) {
          return Data_Ord.compare(Data_Ord.ordInt)(x)(y);
      };
  });
  var drop = function (n) {
      return function (s) {
          return Data_String_CodeUnits.drop(Data_String_CodeUnits.length(take(n)(s)))(s);
      };
  };
  var indexOf$prime = function (p) {
      return function (i) {
          return function (s) {
              var s$prime = drop(i)(s);
              return Data_Functor.map(Data_Maybe.functorMaybe)(function (k) {
                  return i + length(Data_String_CodeUnits.take(k)(s$prime)) | 0;
              })(Data_String_CodeUnits.indexOf(p)(s$prime));
          };
      };
  };   
  var codePointAtFallback = function ($copy_n) {
      return function ($copy_s) {
          var $tco_var_n = $copy_n;
          var $tco_done = false;
          var $tco_result;
          function $tco_loop(n, s) {
              var v = uncons(s);
              if (v instanceof Data_Maybe.Just) {
                  var $44 = n === 0;
                  if ($44) {
                      $tco_done = true;
                      return new Data_Maybe.Just(v.value0.head);
                  };
                  $tco_var_n = n - 1 | 0;
                  $copy_s = v.value0.tail;
                  return;
              };
              $tco_done = true;
              return Data_Maybe.Nothing.value;
          };
          while (!$tco_done) {
              $tco_result = $tco_loop($tco_var_n, $copy_s);
          };
          return $tco_result;
      };
  };
  var codePointAt = function (v) {
      return function (v1) {
          if (v < 0) {
              return Data_Maybe.Nothing.value;
          };
          if (v === 0 && v1 === "") {
              return Data_Maybe.Nothing.value;
          };
          if (v === 0) {
              return new Data_Maybe.Just(unsafeCodePointAt0(v1));
          };
          return $foreign["_codePointAt"](codePointAtFallback)(Data_Maybe.Just.create)(Data_Maybe.Nothing.value)(unsafeCodePointAt0)(v)(v1);
      };
  };
  var boundedCodePoint = new Data_Bounded.Bounded(function () {
      return ordCodePoint;
  }, 0, 1114111);
  var boundedEnumCodePoint = new Data_Enum.BoundedEnum(function () {
      return boundedCodePoint;
  }, function () {
      return enumCodePoint;
  }, 1114111 + 1 | 0, function (v) {
      return v;
  }, function (n) {
      if (n >= 0 && n <= 1114111) {
          return new Data_Maybe.Just(n);
      };
      if (Data_Boolean.otherwise) {
          return Data_Maybe.Nothing.value;
      };
      throw new Error("Failed pattern match at Data.String.CodePoints (line 63, column 1 - line 68, column 26): " + [ n.constructor.name ]);
  });
  var enumCodePoint = new Data_Enum.Enum(function () {
      return ordCodePoint;
  }, Data_Enum.defaultPred(Data_Enum.toEnum(boundedEnumCodePoint))(Data_Enum.fromEnum(boundedEnumCodePoint)), Data_Enum.defaultSucc(Data_Enum.toEnum(boundedEnumCodePoint))(Data_Enum.fromEnum(boundedEnumCodePoint)));
  exports["codePointAt"] = codePointAt;
  exports["length"] = length;
  exports["indexOf"] = indexOf;
  exports["indexOf'"] = indexOf$prime;
  exports["drop"] = drop;
  exports["showCodePoint"] = showCodePoint;
  exports["boundedEnumCodePoint"] = boundedEnumCodePoint;
})(PS);
(function(exports) {
  "use strict";

  exports.regexImpl = function (left) {
    return function (right) {
      return function (s1) {
        return function (s2) {
          try {
            return right(new RegExp(s1, s2));
          } catch (e) {
            return left(e.message);
          }
        };
      };
    };
  };

  exports._match = function (just) {
    return function (nothing) {
      return function (r) {
        return function (s) {
          var m = s.match(r);
          if (m == null || m.length === 0) {
            return nothing;
          } else {
            for (var i = 0; i < m.length; i++) {
              m[i] = m[i] == null ? nothing : just(m[i]);
            }
            return just(m);
          }
        };
      };
    };
  };
})(PS["Data.String.Regex"] = PS["Data.String.Regex"] || {});
(function($PS) {
  // Generated by purs version 0.13.8
  "use strict";
  $PS["Data.String.Regex"] = $PS["Data.String.Regex"] || {};
  var exports = $PS["Data.String.Regex"];
  var $foreign = $PS["Data.String.Regex"];
  var Data_Either = $PS["Data.Either"];
  var Data_Maybe = $PS["Data.Maybe"];    
  var renderFlags = function (v) {
      return (function () {
          if (v.value0.global) {
              return "g";
          };
          return "";
      })() + ((function () {
          if (v.value0.ignoreCase) {
              return "i";
          };
          return "";
      })() + ((function () {
          if (v.value0.multiline) {
              return "m";
          };
          return "";
      })() + ((function () {
          if (v.value0.sticky) {
              return "y";
          };
          return "";
      })() + (function () {
          if (v.value0.unicode) {
              return "u";
          };
          return "";
      })())));
  };
  var regex = function (s) {
      return function (f) {
          return $foreign.regexImpl(Data_Either.Left.create)(Data_Either.Right.create)(s)(renderFlags(f));
      };
  };
  var match = $foreign["_match"](Data_Maybe.Just.create)(Data_Maybe.Nothing.value);
  exports["regex"] = regex;
  exports["match"] = match;
})(PS);
(function($PS) {
  // Generated by purs version 0.13.8
  "use strict";
  $PS["Data.String.Regex.Flags"] = $PS["Data.String.Regex.Flags"] || {};
  var exports = $PS["Data.String.Regex.Flags"];                      
  var RegexFlags = (function () {
      function RegexFlags(value0) {
          this.value0 = value0;
      };
      RegexFlags.create = function (value0) {
          return new RegexFlags(value0);
      };
      return RegexFlags;
  })();
  var noFlags = new RegexFlags({
      global: false,
      ignoreCase: false,
      multiline: false,
      sticky: false,
      unicode: false
  });
  exports["noFlags"] = noFlags;
})(PS);
(function($PS) {
  // Generated by purs version 0.13.8
  "use strict";
  $PS["Data.List"] = $PS["Data.List"] || {};
  var exports = $PS["Data.List"];
  var Control_Alt = $PS["Control.Alt"];
  var Control_Applicative = $PS["Control.Applicative"];
  var Control_Apply = $PS["Control.Apply"];
  var Control_Bind = $PS["Control.Bind"];
  var Control_Lazy = $PS["Control.Lazy"];
  var Control_Monad_Rec_Class = $PS["Control.Monad.Rec.Class"];
  var Data_Bifunctor = $PS["Data.Bifunctor"];
  var Data_Functor = $PS["Data.Functor"];
  var Data_List_Types = $PS["Data.List.Types"];
  var Data_Maybe = $PS["Data.Maybe"];
  var Data_Tuple = $PS["Data.Tuple"];
  var Data_Unfoldable = $PS["Data.Unfoldable"];
  var Data_Unit = $PS["Data.Unit"];                                              
  var uncons = function (v) {
      if (v instanceof Data_List_Types.Nil) {
          return Data_Maybe.Nothing.value;
      };
      if (v instanceof Data_List_Types.Cons) {
          return new Data_Maybe.Just({
              head: v.value0,
              tail: v.value1
          });
      };
      throw new Error("Failed pattern match at Data.List (line 259, column 1 - line 259, column 66): " + [ v.constructor.name ]);
  };
  var toUnfoldable = function (dictUnfoldable) {
      return Data_Unfoldable.unfoldr(dictUnfoldable)(function (xs) {
          return Data_Functor.map(Data_Maybe.functorMaybe)(function (rec) {
              return new Data_Tuple.Tuple(rec.head, rec.tail);
          })(uncons(xs));
      });
  };
  var tail = function (v) {
      if (v instanceof Data_List_Types.Nil) {
          return Data_Maybe.Nothing.value;
      };
      if (v instanceof Data_List_Types.Cons) {
          return new Data_Maybe.Just(v.value1);
      };
      throw new Error("Failed pattern match at Data.List (line 245, column 1 - line 245, column 43): " + [ v.constructor.name ]);
  };
  var reverse = (function () {
      var go = function ($copy_acc) {
          return function ($copy_v) {
              var $tco_var_acc = $copy_acc;
              var $tco_done = false;
              var $tco_result;
              function $tco_loop(acc, v) {
                  if (v instanceof Data_List_Types.Nil) {
                      $tco_done = true;
                      return acc;
                  };
                  if (v instanceof Data_List_Types.Cons) {
                      $tco_var_acc = new Data_List_Types.Cons(v.value0, acc);
                      $copy_v = v.value1;
                      return;
                  };
                  throw new Error("Failed pattern match at Data.List (line 368, column 3 - line 368, column 19): " + [ acc.constructor.name, v.constructor.name ]);
              };
              while (!$tco_done) {
                  $tco_result = $tco_loop($tco_var_acc, $copy_v);
              };
              return $tco_result;
          };
      };
      return go(Data_List_Types.Nil.value);
  })();
  var manyRec = function (dictMonadRec) {
      return function (dictAlternative) {
          return function (p) {
              var go = function (acc) {
                  return Control_Bind.bind((dictMonadRec.Monad0()).Bind1())(Control_Alt.alt((dictAlternative.Plus1()).Alt0())(Data_Functor.map(((dictAlternative.Plus1()).Alt0()).Functor0())(Control_Monad_Rec_Class.Loop.create)(p))(Control_Applicative.pure(dictAlternative.Applicative0())(new Control_Monad_Rec_Class.Done(Data_Unit.unit))))(function (aa) {
                      return Control_Applicative.pure(dictAlternative.Applicative0())(Data_Bifunctor.bimap(Control_Monad_Rec_Class.bifunctorStep)(function (v) {
                          return new Data_List_Types.Cons(v, acc);
                      })(function (v) {
                          return reverse(acc);
                      })(aa));
                  });
              };
              return Control_Monad_Rec_Class.tailRecM(dictMonadRec)(go)(Data_List_Types.Nil.value);
          };
      };
  };
  var some = function (dictAlternative) {
      return function (dictLazy) {
          return function (v) {
              return Control_Apply.apply((dictAlternative.Applicative0()).Apply0())(Data_Functor.map(((dictAlternative.Plus1()).Alt0()).Functor0())(Data_List_Types.Cons.create)(v))(Control_Lazy.defer(dictLazy)(function (v1) {
                  return many(dictAlternative)(dictLazy)(v);
              }));
          };
      };
  };
  var many = function (dictAlternative) {
      return function (dictLazy) {
          return function (v) {
              return Control_Alt.alt((dictAlternative.Plus1()).Alt0())(some(dictAlternative)(dictLazy)(v))(Control_Applicative.pure(dictAlternative.Applicative0())(Data_List_Types.Nil.value));
          };
      };
  };
  var head = function (v) {
      if (v instanceof Data_List_Types.Nil) {
          return Data_Maybe.Nothing.value;
      };
      if (v instanceof Data_List_Types.Cons) {
          return new Data_Maybe.Just(v.value0);
      };
      throw new Error("Failed pattern match at Data.List (line 230, column 1 - line 230, column 22): " + [ v.constructor.name ]);
  };
  exports["toUnfoldable"] = toUnfoldable;
  exports["many"] = many;
  exports["manyRec"] = manyRec;
})(PS);
(function($PS) {
  // Generated by purs version 0.13.8
  "use strict";
  $PS["Text.Parsing.StringParser.Combinators"] = $PS["Text.Parsing.StringParser.Combinators"] || {};
  var exports = $PS["Text.Parsing.StringParser.Combinators"];
  var Control_Alt = $PS["Control.Alt"];
  var Control_Applicative = $PS["Control.Applicative"];
  var Control_Apply = $PS["Control.Apply"];
  var Control_Bind = $PS["Control.Bind"];
  var Data_Foldable = $PS["Data.Foldable"];
  var Data_Functor = $PS["Data.Functor"];
  var Data_List = $PS["Data.List"];
  var Data_List_NonEmpty = $PS["Data.List.NonEmpty"];
  var Data_List_Types = $PS["Data.List.Types"];
  var Data_NonEmpty = $PS["Data.NonEmpty"];
  var Text_Parsing_StringParser = $PS["Text.Parsing.StringParser"];                
  var withError = function (p) {
      return function (msg) {
          return Control_Alt.alt(Text_Parsing_StringParser.altParser)(p)(Text_Parsing_StringParser.fail(msg));
      };
  };
  var many = Data_List.manyRec(Text_Parsing_StringParser.monadRecParser)(Text_Parsing_StringParser.alternativeParser);
  var cons$prime = function (h) {
      return function (t) {
          return new Data_NonEmpty.NonEmpty(h, t);
      };
  };
  var sepBy1 = function (p) {
      return function (sep) {
          return Control_Bind.bind(Text_Parsing_StringParser.bindParser)(p)(function (a) {
              return Control_Bind.bind(Text_Parsing_StringParser.bindParser)(many(Control_Apply.applySecond(Text_Parsing_StringParser.applyParser)(sep)(p)))(function (as) {
                  return Control_Applicative.pure(Text_Parsing_StringParser.applicativeParser)(cons$prime(a)(as));
              });
          });
      };
  };
  var sepBy = function (p) {
      return function (sep) {
          return Control_Alt.alt(Text_Parsing_StringParser.altParser)(Data_Functor.map(Text_Parsing_StringParser.functorParser)(Data_List_NonEmpty.toList)(sepBy1(p)(sep)))(Control_Applicative.pure(Text_Parsing_StringParser.applicativeParser)(Data_List_Types.Nil.value));
      };
  };
  var choice = function (dictFoldable) {
      return Data_Foldable.foldl(dictFoldable)(Control_Alt.alt(Text_Parsing_StringParser.altParser))(Text_Parsing_StringParser.fail("Nothing to parse"));
  };
  exports["many"] = many;
  exports["withError"] = withError;
  exports["sepBy"] = sepBy;
  exports["choice"] = choice;
})(PS);
(function($PS) {
  // Generated by purs version 0.13.8
  "use strict";
  $PS["Text.Parsing.StringParser.CodePoints"] = $PS["Text.Parsing.StringParser.CodePoints"] || {};
  var exports = $PS["Text.Parsing.StringParser.CodePoints"];
  var Control_Applicative = $PS["Control.Applicative"];
  var Control_Bind = $PS["Control.Bind"];
  var Data_Array_NonEmpty = $PS["Data.Array.NonEmpty"];
  var Data_Char = $PS["Data.Char"];
  var Data_Either = $PS["Data.Either"];
  var Data_Enum = $PS["Data.Enum"];
  var Data_Eq = $PS["Data.Eq"];
  var Data_Foldable = $PS["Data.Foldable"];
  var Data_Functor = $PS["Data.Functor"];
  var Data_List_Types = $PS["Data.List.Types"];
  var Data_Maybe = $PS["Data.Maybe"];
  var Data_Monoid = $PS["Data.Monoid"];
  var Data_Show = $PS["Data.Show"];
  var Data_String_CodePoints = $PS["Data.String.CodePoints"];
  var Data_String_CodeUnits = $PS["Data.String.CodeUnits"];
  var Data_String_Regex = $PS["Data.String.Regex"];
  var Data_String_Regex_Flags = $PS["Data.String.Regex.Flags"];
  var Text_Parsing_StringParser = $PS["Text.Parsing.StringParser"];
  var Text_Parsing_StringParser_Combinators = $PS["Text.Parsing.StringParser.Combinators"];                
  var string = function (nt) {
      return function (s) {
          if (Data_Eq.eq(Data_Maybe.eqMaybe(Data_Eq.eqInt))(Data_String_CodePoints["indexOf'"](nt)(s.pos)(s.str))(new Data_Maybe.Just(s.pos))) {
              return new Data_Either.Right({
                  result: nt,
                  suffix: {
                      str: s.str,
                      pos: s.pos + Data_String_CodePoints.length(nt) | 0
                  }
              });
          };
          return new Data_Either.Left({
              pos: s.pos,
              error: new Text_Parsing_StringParser.ParseError("Expected '" + (nt + "'."))
          });
      };
  };
  var regex = function (pat) {
      var pattern = (function () {
          var v = Data_String_CodeUnits.stripPrefix("^")(pat);
          if (v instanceof Data_Maybe.Nothing) {
              return "^" + pat;
          };
          return pat;
      })();
      var matchRegex = function (r) {
          return function (v) {
              var remainder = Data_String_CodePoints.drop(v.pos)(v.str);
              var v1 = Data_Functor.map(Data_Maybe.functorMaybe)(Data_Array_NonEmpty.head)(Data_String_Regex.match(r)(remainder));
              if (v1 instanceof Data_Maybe.Just && v1.value0 instanceof Data_Maybe.Just) {
                  return new Data_Either.Right({
                      result: v1.value0.value0,
                      suffix: {
                          str: v.str,
                          pos: v.pos + Data_String_CodePoints.length(v1.value0.value0) | 0
                      }
                  });
              };
              return new Data_Either.Left({
                  pos: v.pos,
                  error: new Text_Parsing_StringParser.ParseError("no match")
              });
          };
      };
      var v = Data_String_Regex.regex(pattern)(Data_String_Regex_Flags.noFlags);
      if (v instanceof Data_Either.Left) {
          return Text_Parsing_StringParser.fail("Text.Parsing.StringParser.String.regex': illegal regex " + pat);
      };
      if (v instanceof Data_Either.Right) {
          return matchRegex(v.value0);
      };
      throw new Error("Failed pattern match at Text.Parsing.StringParser.CodePoints (line 132, column 3 - line 136, column 19): " + [ v.constructor.name ]);
  };
  var anyChar = (function () {
      var toChar = (function () {
          var $38 = Data_Enum.fromEnum(Data_String_CodePoints.boundedEnumCodePoint);
          return function ($39) {
              return Data_Char.fromCharCode($38($39));
          };
      })();
      return function (v) {
          var v1 = Data_String_CodePoints.codePointAt(v.pos)(v.str);
          if (v1 instanceof Data_Maybe.Just) {
              var v2 = toChar(v1.value0);
              if (v2 instanceof Data_Maybe.Just) {
                  return new Data_Either.Right({
                      result: v2.value0,
                      suffix: {
                          str: v.str,
                          pos: v.pos + 1 | 0
                      }
                  });
              };
              if (v2 instanceof Data_Maybe.Nothing) {
                  return new Data_Either.Left({
                      pos: v.pos,
                      error: Text_Parsing_StringParser.ParseError.create("CodePoint " + (Data_Show.show(Data_String_CodePoints.showCodePoint)(v1.value0) + " is not a character"))
                  });
              };
              throw new Error("Failed pattern match at Text.Parsing.StringParser.CodePoints (line 53, column 16 - line 55, column 100): " + [ v2.constructor.name ]);
          };
          if (v1 instanceof Data_Maybe.Nothing) {
              return new Data_Either.Left({
                  pos: v.pos,
                  error: new Text_Parsing_StringParser.ParseError("Unexpected EOF")
              });
          };
          throw new Error("Failed pattern match at Text.Parsing.StringParser.CodePoints (line 52, column 3 - line 56, column 64): " + [ v1.constructor.name ]);
      };
  })();
  var satisfy = function (f) {
      return Text_Parsing_StringParser["try"](Control_Bind.bind(Text_Parsing_StringParser.bindParser)(anyChar)(function (c) {
          var $36 = f(c);
          if ($36) {
              return Control_Applicative.pure(Text_Parsing_StringParser.applicativeParser)(c);
          };
          return Text_Parsing_StringParser.fail("Character " + (Data_Show.show(Data_Show.showChar)(c) + " did not satisfy predicate"));
      }));
  };
  var $$char = function (c) {
      return Text_Parsing_StringParser_Combinators.withError(satisfy(function (v) {
          return v === c;
      }))("Could not match character " + Data_Show.show(Data_Show.showChar)(c));
  };
  var whiteSpace = Control_Bind.bind(Text_Parsing_StringParser.bindParser)(Text_Parsing_StringParser_Combinators.many(satisfy(function (c) {
      return c === "\x0a" || (c === "\x0d" || (c === " " || c === "\x09"));
  })))(function (cs) {
      return Control_Applicative.pure(Text_Parsing_StringParser.applicativeParser)(Data_Foldable.foldMap(Data_List_Types.foldableList)(Data_Monoid.monoidString)(Data_String_CodeUnits.singleton)(cs));
  });
  var skipSpaces = Data_Functor["void"](Text_Parsing_StringParser.functorParser)(whiteSpace);
  exports["string"] = string;
  exports["char"] = $$char;
  exports["skipSpaces"] = skipSpaces;
  exports["regex"] = regex;
})(PS);
(function($PS) {
  // Generated by purs version 0.13.8
  "use strict";
  $PS["Text.Parsing.StringParser.Expr"] = $PS["Text.Parsing.StringParser.Expr"] || {};
  var exports = $PS["Text.Parsing.StringParser.Expr"];
  var Control_Alt = $PS["Control.Alt"];
  var Control_Applicative = $PS["Control.Applicative"];
  var Control_Bind = $PS["Control.Bind"];
  var Control_Category = $PS["Control.Category"];
  var Data_Foldable = $PS["Data.Foldable"];
  var Data_List_Types = $PS["Data.List.Types"];
  var Text_Parsing_StringParser = $PS["Text.Parsing.StringParser"];
  var Text_Parsing_StringParser_Combinators = $PS["Text.Parsing.StringParser.Combinators"];                
  var AssocNone = (function () {
      function AssocNone() {

      };
      AssocNone.value = new AssocNone();
      return AssocNone;
  })();
  var AssocLeft = (function () {
      function AssocLeft() {

      };
      AssocLeft.value = new AssocLeft();
      return AssocLeft;
  })();
  var AssocRight = (function () {
      function AssocRight() {

      };
      AssocRight.value = new AssocRight();
      return AssocRight;
  })();
  var Infix = (function () {
      function Infix(value0, value1) {
          this.value0 = value0;
          this.value1 = value1;
      };
      Infix.create = function (value0) {
          return function (value1) {
              return new Infix(value0, value1);
          };
      };
      return Infix;
  })();
  var Prefix = (function () {
      function Prefix(value0) {
          this.value0 = value0;
      };
      Prefix.create = function (value0) {
          return new Prefix(value0);
      };
      return Prefix;
  })();
  var Postfix = (function () {
      function Postfix(value0) {
          this.value0 = value0;
      };
      Postfix.create = function (value0) {
          return new Postfix(value0);
      };
      return Postfix;
  })();
  var buildExprParser = function (operators) {
      return function (simpleExpr) {
          var termP = function (prefixP) {
              return function (term) {
                  return function (postfixP) {
                      return Control_Bind.bind(Text_Parsing_StringParser.bindParser)(prefixP)(function (pre) {
                          return Control_Bind.bind(Text_Parsing_StringParser.bindParser)(term)(function (x) {
                              return Control_Bind.bind(Text_Parsing_StringParser.bindParser)(postfixP)(function (post) {
                                  return Control_Applicative.pure(Text_Parsing_StringParser.applicativeParser)(post(pre(x)));
                              });
                          });
                      });
                  };
              };
          };
          var splitOp = function (v) {
              return function (accum) {
                  if (v instanceof Infix && v.value1 instanceof AssocNone) {
                      return {
                          rassoc: accum.rassoc,
                          lassoc: accum.lassoc,
                          nassoc: new Data_List_Types.Cons(v.value0, accum.nassoc),
                          prefix: accum.prefix,
                          postfix: accum.postfix
                      };
                  };
                  if (v instanceof Infix && v.value1 instanceof AssocLeft) {
                      return {
                          rassoc: accum.rassoc,
                          lassoc: new Data_List_Types.Cons(v.value0, accum.lassoc),
                          nassoc: accum.nassoc,
                          prefix: accum.prefix,
                          postfix: accum.postfix
                      };
                  };
                  if (v instanceof Infix && v.value1 instanceof AssocRight) {
                      return {
                          rassoc: new Data_List_Types.Cons(v.value0, accum.rassoc),
                          lassoc: accum.lassoc,
                          nassoc: accum.nassoc,
                          prefix: accum.prefix,
                          postfix: accum.postfix
                      };
                  };
                  if (v instanceof Prefix) {
                      return {
                          rassoc: accum.rassoc,
                          lassoc: accum.lassoc,
                          nassoc: accum.nassoc,
                          prefix: new Data_List_Types.Cons(v.value0, accum.prefix),
                          postfix: accum.postfix
                      };
                  };
                  if (v instanceof Postfix) {
                      return {
                          rassoc: accum.rassoc,
                          lassoc: accum.lassoc,
                          nassoc: accum.nassoc,
                          prefix: accum.prefix,
                          postfix: new Data_List_Types.Cons(v.value0, accum.postfix)
                      };
                  };
                  throw new Error("Failed pattern match at Text.Parsing.StringParser.Expr (line 59, column 5 - line 59, column 68): " + [ v.constructor.name, accum.constructor.name ]);
              };
          };
          var rassocP1 = function (x) {
              return function (rassocOp) {
                  return function (prefixP) {
                      return function (term) {
                          return function (postfixP) {
                              return Control_Alt.alt(Text_Parsing_StringParser.altParser)(rassocP(x)(rassocOp)(prefixP)(term)(postfixP))(Control_Applicative.pure(Text_Parsing_StringParser.applicativeParser)(x));
                          };
                      };
                  };
              };
          };
          var rassocP = function (x) {
              return function (rassocOp) {
                  return function (prefixP) {
                      return function (term) {
                          return function (postfixP) {
                              return Control_Bind.bind(Text_Parsing_StringParser.bindParser)(rassocOp)(function (f) {
                                  return Control_Bind.bind(Text_Parsing_StringParser.bindParser)(Control_Bind.bind(Text_Parsing_StringParser.bindParser)(termP(prefixP)(term)(postfixP))(function (z) {
                                      return rassocP1(z)(rassocOp)(prefixP)(term)(postfixP);
                                  }))(function (y) {
                                      return Control_Applicative.pure(Text_Parsing_StringParser.applicativeParser)(f(x)(y));
                                  });
                              });
                          };
                      };
                  };
              };
          };
          var nassocP = function (x) {
              return function (nassocOp) {
                  return function (prefixP) {
                      return function (term) {
                          return function (postfixP) {
                              return Control_Bind.bind(Text_Parsing_StringParser.bindParser)(nassocOp)(function (f) {
                                  return Control_Bind.bind(Text_Parsing_StringParser.bindParser)(termP(prefixP)(term)(postfixP))(function (y) {
                                      return Control_Applicative.pure(Text_Parsing_StringParser.applicativeParser)(f(x)(y));
                                  });
                              });
                          };
                      };
                  };
              };
          };
          var lassocP1 = function (x) {
              return function (lassocOp) {
                  return function (prefixP) {
                      return function (term) {
                          return function (postfixP) {
                              return Control_Alt.alt(Text_Parsing_StringParser.altParser)(lassocP(x)(lassocOp)(prefixP)(term)(postfixP))(Control_Applicative.pure(Text_Parsing_StringParser.applicativeParser)(x));
                          };
                      };
                  };
              };
          };
          var lassocP = function (x) {
              return function (lassocOp) {
                  return function (prefixP) {
                      return function (term) {
                          return function (postfixP) {
                              return Control_Bind.bind(Text_Parsing_StringParser.bindParser)(lassocOp)(function (f) {
                                  return Control_Bind.bind(Text_Parsing_StringParser.bindParser)(termP(prefixP)(term)(postfixP))(function (y) {
                                      return lassocP1(f(x)(y))(lassocOp)(prefixP)(term)(postfixP);
                                  });
                              });
                          };
                      };
                  };
              };
          };
          var makeParser = function (term) {
              return function (ops) {
                  var accum = Data_Foldable.foldr(Data_Foldable.foldableArray)(splitOp)({
                      rassoc: Data_List_Types.Nil.value,
                      lassoc: Data_List_Types.Nil.value,
                      nassoc: Data_List_Types.Nil.value,
                      prefix: Data_List_Types.Nil.value,
                      postfix: Data_List_Types.Nil.value
                  })(ops);
                  var lassocOp = Text_Parsing_StringParser_Combinators.choice(Data_List_Types.foldableList)(accum.lassoc);
                  var nassocOp = Text_Parsing_StringParser_Combinators.choice(Data_List_Types.foldableList)(accum.nassoc);
                  var postfixOp = Text_Parsing_StringParser_Combinators.withError(Text_Parsing_StringParser_Combinators.choice(Data_List_Types.foldableList)(accum.postfix))("");
                  var postfixP = Control_Alt.alt(Text_Parsing_StringParser.altParser)(postfixOp)(Control_Applicative.pure(Text_Parsing_StringParser.applicativeParser)(Control_Category.identity(Control_Category.categoryFn)));
                  var prefixOp = Text_Parsing_StringParser_Combinators.withError(Text_Parsing_StringParser_Combinators.choice(Data_List_Types.foldableList)(accum.prefix))("");
                  var prefixP = Control_Alt.alt(Text_Parsing_StringParser.altParser)(prefixOp)(Control_Applicative.pure(Text_Parsing_StringParser.applicativeParser)(Control_Category.identity(Control_Category.categoryFn)));
                  var rassocOp = Text_Parsing_StringParser_Combinators.choice(Data_List_Types.foldableList)(accum.rassoc);
                  return Control_Bind.bind(Text_Parsing_StringParser.bindParser)(termP(prefixP)(term)(postfixP))(function (x) {
                      return Text_Parsing_StringParser_Combinators.withError(Control_Alt.alt(Text_Parsing_StringParser.altParser)(Control_Alt.alt(Text_Parsing_StringParser.altParser)(Control_Alt.alt(Text_Parsing_StringParser.altParser)(rassocP(x)(rassocOp)(prefixP)(term)(postfixP))(lassocP(x)(lassocOp)(prefixP)(term)(postfixP)))(nassocP(x)(nassocOp)(prefixP)(term)(postfixP)))(Control_Applicative.pure(Text_Parsing_StringParser.applicativeParser)(x)))("operator");
                  });
              };
          };
          return Data_Foldable.foldl(Data_Foldable.foldableArray)(makeParser)(simpleExpr)(operators);
      };
  };
  exports["AssocRight"] = AssocRight;
  exports["Infix"] = Infix;
  exports["Prefix"] = Prefix;
  exports["buildExprParser"] = buildExprParser;
})(PS);
(function(exports) {
  "use strict";

  exports.key = function (e) {
    return e.key;
  };
})(PS["Web.UIEvent.KeyboardEvent"] = PS["Web.UIEvent.KeyboardEvent"] || {});
(function($PS) {
  // Generated by purs version 0.13.8
  "use strict";
  $PS["Web.UIEvent.KeyboardEvent"] = $PS["Web.UIEvent.KeyboardEvent"] || {};
  var exports = $PS["Web.UIEvent.KeyboardEvent"];
  var $foreign = $PS["Web.UIEvent.KeyboardEvent"];
  exports["key"] = $foreign.key;
})(PS);
(function($PS) {
  // Generated by purs version 0.13.8
  "use strict";
  $PS["CLL2"] = $PS["CLL2"] || {};
  var exports = $PS["CLL2"];
  var Control_Alt = $PS["Control.Alt"];
  var Control_Apply = $PS["Control.Apply"];
  var Control_Lazy = $PS["Control.Lazy"];
  var Data_Array = $PS["Data.Array"];
  var Data_Boolean = $PS["Data.Boolean"];
  var Data_Eq = $PS["Data.Eq"];
  var Data_Foldable = $PS["Data.Foldable"];
  var Data_Function = $PS["Data.Function"];
  var Data_Functor = $PS["Data.Functor"];
  var Data_HeytingAlgebra = $PS["Data.HeytingAlgebra"];
  var Data_Maybe = $PS["Data.Maybe"];
  var Data_Semigroup = $PS["Data.Semigroup"];
  var Derivation = $PS["Derivation"];
  var Spork_Html_Core = $PS["Spork.Html.Core"];
  var Spork_Html_Elements = $PS["Spork.Html.Elements"];
  var Spork_Html_Events = $PS["Spork.Html.Events"];
  var Spork_Html_Properties = $PS["Spork.Html.Properties"];
  var Text_Parsing_StringParser = $PS["Text.Parsing.StringParser"];
  var Text_Parsing_StringParser_CodePoints = $PS["Text.Parsing.StringParser.CodePoints"];
  var Text_Parsing_StringParser_Expr = $PS["Text.Parsing.StringParser.Expr"];
  var Web_UIEvent_KeyboardEvent = $PS["Web.UIEvent.KeyboardEvent"];                
  var Atom = (function () {
      function Atom(value0) {
          this.value0 = value0;
      };
      Atom.create = function (value0) {
          return new Atom(value0);
      };
      return Atom;
  })();
  var Neg = (function () {
      function Neg(value0) {
          this.value0 = value0;
      };
      Neg.create = function (value0) {
          return new Neg(value0);
      };
      return Neg;
  })();
  var Tens = (function () {
      function Tens(value0, value1) {
          this.value0 = value0;
          this.value1 = value1;
      };
      Tens.create = function (value0) {
          return function (value1) {
              return new Tens(value0, value1);
          };
      };
      return Tens;
  })();
  var Par = (function () {
      function Par(value0, value1) {
          this.value0 = value0;
          this.value1 = value1;
      };
      Par.create = function (value0) {
          return function (value1) {
              return new Par(value0, value1);
          };
      };
      return Par;
  })();
  var One = (function () {
      function One() {

      };
      One.value = new One();
      return One;
  })();
  var Bot = (function () {
      function Bot() {

      };
      Bot.value = new Bot();
      return Bot;
  })();
  var Plus = (function () {
      function Plus(value0, value1) {
          this.value0 = value0;
          this.value1 = value1;
      };
      Plus.create = function (value0) {
          return function (value1) {
              return new Plus(value0, value1);
          };
      };
      return Plus;
  })();
  var With = (function () {
      function With(value0, value1) {
          this.value0 = value0;
          this.value1 = value1;
      };
      With.create = function (value0) {
          return function (value1) {
              return new With(value0, value1);
          };
      };
      return With;
  })();
  var Zero = (function () {
      function Zero() {

      };
      Zero.value = new Zero();
      return Zero;
  })();
  var Top = (function () {
      function Top() {

      };
      Top.value = new Top();
      return Top;
  })();
  var Ofc = (function () {
      function Ofc(value0) {
          this.value0 = value0;
      };
      Ofc.create = function (value0) {
          return new Ofc(value0);
      };
      return Ofc;
  })();
  var Ynot = (function () {
      function Ynot(value0) {
          this.value0 = value0;
      };
      Ynot.create = function (value0) {
          return new Ynot(value0);
      };
      return Ynot;
  })();
  var Impl = (function () {
      function Impl(value0, value1) {
          this.value0 = value0;
          this.value1 = value1;
      };
      Impl.create = function (value0) {
          return function (value1) {
              return new Impl(value0, value1);
          };
      };
      return Impl;
  })();
  var Forall2 = (function () {
      function Forall2(value0, value1) {
          this.value0 = value0;
          this.value1 = value1;
      };
      Forall2.create = function (value0) {
          return function (value1) {
              return new Forall2(value0, value1);
          };
      };
      return Forall2;
  })();
  var Exists2 = (function () {
      function Exists2(value0, value1) {
          this.value0 = value0;
          this.value1 = value1;
      };
      Exists2.create = function (value0) {
          return function (value1) {
              return new Exists2(value0, value1);
          };
      };
      return Exists2;
  })();
  var table = (function () {
      var spaced = function (op) {
          return Text_Parsing_StringParser["try"](Control_Apply.applyFirst(Text_Parsing_StringParser.applyParser)(Control_Apply.applySecond(Text_Parsing_StringParser.applyParser)(Text_Parsing_StringParser_CodePoints.skipSpaces)(Text_Parsing_StringParser_CodePoints.string(op)))(Text_Parsing_StringParser_CodePoints.skipSpaces));
      };
      return [ [ new Text_Parsing_StringParser_Expr.Prefix(Data_Functor.voidRight(Text_Parsing_StringParser.functorParser)(Neg.create)(spaced("~"))), new Text_Parsing_StringParser_Expr.Prefix(Data_Functor.voidRight(Text_Parsing_StringParser.functorParser)(Ofc.create)(spaced("!"))), new Text_Parsing_StringParser_Expr.Prefix(Data_Functor.voidRight(Text_Parsing_StringParser.functorParser)(Ynot.create)(spaced("?"))) ], [ new Text_Parsing_StringParser_Expr.Infix(Data_Functor.voidRight(Text_Parsing_StringParser.functorParser)(Tens.create)(spaced("*")), Text_Parsing_StringParser_Expr.AssocRight.value), new Text_Parsing_StringParser_Expr.Infix(Data_Functor.voidRight(Text_Parsing_StringParser.functorParser)(Par.create)(spaced("@")), Text_Parsing_StringParser_Expr.AssocRight.value) ], [ new Text_Parsing_StringParser_Expr.Infix(Data_Functor.voidRight(Text_Parsing_StringParser.functorParser)(Plus.create)(spaced("+")), Text_Parsing_StringParser_Expr.AssocRight.value), new Text_Parsing_StringParser_Expr.Infix(Data_Functor.voidRight(Text_Parsing_StringParser.functorParser)(With.create)(spaced("&")), Text_Parsing_StringParser_Expr.AssocRight.value) ], [ new Text_Parsing_StringParser_Expr.Infix(Data_Functor.voidRight(Text_Parsing_StringParser.functorParser)(Impl.create)(spaced("-o")), Text_Parsing_StringParser_Expr.AssocRight.value) ], [ new Text_Parsing_StringParser_Expr.Prefix(Control_Apply.applyFirst(Text_Parsing_StringParser.applyParser)(Control_Apply.apply(Text_Parsing_StringParser.applyParser)(Data_Functor.voidRight(Text_Parsing_StringParser.functorParser)(Forall2.create)(spaced("forall")))(Text_Parsing_StringParser_CodePoints.regex("\\w[\\w']*")))(spaced(","))), new Text_Parsing_StringParser_Expr.Prefix(Control_Apply.applyFirst(Text_Parsing_StringParser.applyParser)(Control_Apply.apply(Text_Parsing_StringParser.applyParser)(Data_Functor.voidRight(Text_Parsing_StringParser.functorParser)(Exists2.create)(spaced("exists")))(Text_Parsing_StringParser_CodePoints.regex("\\w[\\w']*")))(spaced(","))) ] ];
  })();
  var ppForm = function (prec) {
      return function (form) {
          var p = function (prec$prime) {
              return function (s) {
                  if (prec <= prec$prime) {
                      return s;
                  };
                  if (Data_Boolean.otherwise) {
                      return "(" + (s + ")");
                  };
                  throw new Error("Failed pattern match at CLL2 (line 261, column 9 - line 262, column 48): " + [ prec$prime.constructor.name, s.constructor.name ]);
              };
          };
          if (form instanceof Atom) {
              return form.value0;
          };
          if (form instanceof Neg) {
              return p(4)("\xac" + ppForm(4)(form.value0));
          };
          if (form instanceof Tens) {
              return p(3)(ppForm(4)(form.value0) + (" \u2297 " + ppForm(3)(form.value1)));
          };
          if (form instanceof Par) {
              return p(1)(ppForm(2)(form.value0) + (" \u214b " + ppForm(1)(form.value1)));
          };
          if (form instanceof One) {
              return "1";
          };
          if (form instanceof Bot) {
              return "\u22a5";
          };
          if (form instanceof Plus) {
              return p(0)(ppForm(1)(form.value0) + (" \u2295 " + ppForm(0)(form.value1)));
          };
          if (form instanceof With) {
              return p(2)(ppForm(3)(form.value0) + (" & " + ppForm(2)(form.value1)));
          };
          if (form instanceof Zero) {
              return "0";
          };
          if (form instanceof Top) {
              return "\u22a4";
          };
          if (form instanceof Ofc) {
              return p(4)("!" + ppForm(4)(form.value0));
          };
          if (form instanceof Ynot) {
              return p(4)("?" + ppForm(4)(form.value0));
          };
          if (form instanceof Impl) {
              return p(-1 | 0)(ppForm(0)(form.value0) + (" \u22b8 " + ppForm(-1 | 0)(form.value1)));
          };
          if (form instanceof Forall2) {
              return p(-2 | 0)("\u2200" + (form.value0 + ("." + ppForm(-2 | 0)(form.value1))));
          };
          if (form instanceof Exists2) {
              return p(-2 | 0)("\u2203" + (form.value0 + ("." + ppForm(-2 | 0)(form.value1))));
          };
          throw new Error("Failed pattern match at CLL2 (line 245, column 20 - line 260, column 59): " + [ form.constructor.name ]);
      };
  };
  var ppFormH = function (prec) {
      var $342 = ppForm(prec);
      return function ($343) {
          return Spork_Html_Core.text($342($343));
      };
  };
  var renderForm = function (seqix) {
      return function (v) {
          var pp = [ ppFormH(-3 | 0)(v.form) ];
          var p = function (mpart) {
              return function (b) {
                  return new Derivation.PickedForm({
                      click: {
                          button: b,
                          mpart: mpart
                      },
                      seqix: seqix,
                      inst: Data_Maybe.Nothing.value
                  });
              };
          };
          var key = function (ev) {
              var v1 = Web_UIEvent_KeyboardEvent.key(ev);
              if (v1 === "Enter") {
                  return new Data_Maybe.Just(Derivation.Submit.value);
              };
              if (v1 === "Escape") {
                  return new Data_Maybe.Just(new Derivation.ClickedTurnstile({
                      button: Derivation.RightButton.value,
                      mpart: Data_Maybe.Nothing.value
                  }));
              };
              return Data_Maybe.Nothing.value;
          };
          var clickedQuantifier = function (b) {
              if (b instanceof Derivation.LeftButton) {
                  return new Derivation.NeedInstantiation(seqix);
              };
              return p(Data_Maybe.Nothing.value)(b);
          };
          if (v.tag instanceof Derivation.SideFormR1) {
              return Derivation.clickable([ "side1" ])(p(Data_Maybe.Nothing.value))(pp);
          };
          if (v.tag instanceof Derivation.SideFormR2) {
              return Derivation.clickable([ "side2" ])(p(Data_Maybe.Nothing.value))(pp);
          };
          if (v.tag instanceof Derivation.HasInput) {
              return Spork_Html_Elements.span([  ])([ Spork_Html_Elements.span([ Spork_Html_Properties.classes([ "dropdown" ]) ])([ Spork_Html_Elements.input([ Spork_Html_Properties.value(v.tag.value0), Spork_Html_Events.onValueInput(Spork_Html_Events.always(Derivation.Input.create)), Spork_Html_Events.onKeyDown(key) ]), Spork_Html_Elements.button([ Spork_Html_Events.onClick(Spork_Html_Events.always(Data_Function["const"](Derivation.Submit.value))) ])([ Spork_Html_Core.text("Instantiate") ]) ]), renderForm(seqix)({
                  form: v.form,
                  tag: Derivation.NewFormR.value
              }) ]);
          };
          var clss = (function () {
              var $75 = Data_Eq.eq(Derivation.eqRenderTag)(v.tag)(Derivation.NewFormR.value);
              if ($75) {
                  return [ "new" ];
              };
              return [  ];
          })();
          if (seqix.side instanceof Derivation.LHS && v.form instanceof With) {
              return Derivation.clickable(clss)(p(Data_Maybe.Nothing.value))([ Derivation.clickable([  ])(p(new Data_Maybe.Just(Derivation.Part1.value)))([ ppFormH(3)(v.form.value0) ]), Spork_Html_Core.text(" & "), Derivation.clickable([  ])(p(new Data_Maybe.Just(Derivation.Part2.value)))([ ppFormH(2)(v.form.value1) ]) ]);
          };
          if (seqix.side instanceof Derivation.RHS && v.form instanceof Plus) {
              return Derivation.clickable(clss)(p(Data_Maybe.Nothing.value))([ Derivation.clickable([  ])(p(new Data_Maybe.Just(Derivation.Part1.value)))([ ppFormH(1)(v.form.value0) ]), Spork_Html_Core.text(" \u2295 "), Derivation.clickable([  ])(p(new Data_Maybe.Just(Derivation.Part2.value)))([ ppFormH(0)(v.form.value1) ]) ]);
          };
          if (seqix.side instanceof Derivation.LHS && v.form instanceof Ofc) {
              return Derivation.clickable(clss)(p(Data_Maybe.Nothing.value))([ Derivation.clickable([  ])(p(new Data_Maybe.Just(Derivation.Part1.value)))([ Spork_Html_Core.text("!") ]), Derivation.clickable([  ])(p(new Data_Maybe.Just(Derivation.Part2.value)))([ ppFormH(4)(v.form.value0) ]) ]);
          };
          if (seqix.side instanceof Derivation.RHS && v.form instanceof Ynot) {
              return Derivation.clickable(clss)(p(Data_Maybe.Nothing.value))([ Derivation.clickable([  ])(p(new Data_Maybe.Just(Derivation.Part1.value)))([ Spork_Html_Core.text("?") ]), Derivation.clickable([  ])(p(new Data_Maybe.Just(Derivation.Part2.value)))([ ppFormH(4)(v.form.value0) ]) ]);
          };
          if (seqix.side instanceof Derivation.LHS && v.form instanceof Forall2) {
              return Derivation.clickable(clss)(clickedQuantifier)(pp);
          };
          if (seqix.side instanceof Derivation.RHS && v.form instanceof Exists2) {
              return Derivation.clickable(clss)(clickedQuantifier)(pp);
          };
          return Derivation.clickable(clss)(p(Data_Maybe.Nothing.value))(pp);
      };
  };
  var isYnot = function (v) {
      if (v instanceof Ynot) {
          return true;
      };
      return false;
  };
  var isOfc = function (v) {
      if (v instanceof Ofc) {
          return true;
      };
      return false;
  };
  var freeInForm = function (a) {
      return function (form) {
          if (form instanceof Atom) {
              return a === form.value0;
          };
          if (form instanceof Neg) {
              return freeInForm(a)(form.value0);
          };
          if (form instanceof Tens) {
              return freeInForm(a)(form.value0) || freeInForm(a)(form.value1);
          };
          if (form instanceof Par) {
              return freeInForm(a)(form.value0) || freeInForm(a)(form.value1);
          };
          if (form instanceof One) {
              return false;
          };
          if (form instanceof Bot) {
              return false;
          };
          if (form instanceof Plus) {
              return freeInForm(a)(form.value0) || freeInForm(a)(form.value1);
          };
          if (form instanceof With) {
              return freeInForm(a)(form.value0) || freeInForm(a)(form.value1);
          };
          if (form instanceof Zero) {
              return false;
          };
          if (form instanceof Top) {
              return false;
          };
          if (form instanceof Ofc) {
              return freeInForm(a)(form.value0);
          };
          if (form instanceof Ynot) {
              return freeInForm(a)(form.value0);
          };
          if (form instanceof Impl) {
              return freeInForm(a)(form.value0) || freeInForm(a)(form.value1);
          };
          if (form instanceof Forall2) {
              var $109 = a === form.value0;
              if ($109) {
                  return false;
              };
              return freeInForm(a)(form.value1);
          };
          if (form instanceof Exists2) {
              var $112 = a === form.value0;
              if ($112) {
                  return false;
              };
              return freeInForm(a)(form.value1);
          };
          throw new Error("Failed pattern match at CLL2 (line 32, column 21 - line 47, column 60): " + [ form.constructor.name ]);
      };
  };
  var freshen = function ($copy_a) {
      return function ($copy_from) {
          var $tco_var_a = $copy_a;
          var $tco_done = false;
          var $tco_result;
          function $tco_loop(a, from) {
              if (Data_Foldable.all(Data_Foldable.foldableArray)(Data_HeytingAlgebra.heytingAlgebraBoolean)((function () {
                  var $344 = Data_HeytingAlgebra.not(Data_HeytingAlgebra.heytingAlgebraBoolean);
                  var $345 = freeInForm(a);
                  return function ($346) {
                      return $344($345($346));
                  };
              })())(from)) {
                  $tco_done = true;
                  return a;
              };
              if (Data_Boolean.otherwise) {
                  $tco_var_a = a + "'";
                  $copy_from = from;
                  return;
              };
              throw new Error("Failed pattern match at CLL2 (line 49, column 1 - line 49, column 42): " + [ a.constructor.name, from.constructor.name ]);
          };
          while (!$tco_done) {
              $tco_result = $tco_loop($tco_var_a, $copy_from);
          };
          return $tco_result;
      };
  };
  var subst = function (arg) {
      return function (a) {
          return function (into) {
              if (into instanceof Atom) {
                  var $118 = into.value0 === a;
                  if ($118) {
                      return arg;
                  };
                  return into;
              };
              if (into instanceof Neg) {
                  return new Neg(subst(arg)(a)(into.value0));
              };
              if (into instanceof Tens) {
                  return new Tens(subst(arg)(a)(into.value0), subst(arg)(a)(into.value1));
              };
              if (into instanceof Par) {
                  return new Par(subst(arg)(a)(into.value0), subst(arg)(a)(into.value1));
              };
              if (into instanceof One) {
                  return One.value;
              };
              if (into instanceof Bot) {
                  return Bot.value;
              };
              if (into instanceof Plus) {
                  return new Plus(subst(arg)(a)(into.value0), subst(arg)(a)(into.value1));
              };
              if (into instanceof With) {
                  return new With(subst(arg)(a)(into.value0), subst(arg)(a)(into.value1));
              };
              if (into instanceof Zero) {
                  return Zero.value;
              };
              if (into instanceof Top) {
                  return Top.value;
              };
              if (into instanceof Ofc) {
                  return new Ofc(subst(arg)(a)(into.value0));
              };
              if (into instanceof Ynot) {
                  return new Ynot(subst(arg)(a)(into.value0));
              };
              if (into instanceof Impl) {
                  return new Impl(subst(arg)(a)(into.value0), subst(arg)(a)(into.value1));
              };
              if (into instanceof Forall2) {
                  if (into.value0 === a) {
                      return into;
                  };
                  if (Data_Boolean.otherwise) {
                      var a$prime$prime = freshen(into.value0)([ arg ]);
                      return new Forall2(a$prime$prime, subst(arg)(a)(subst(new Atom(a$prime$prime))(into.value0)(into.value1)));
                  };
              };
              if (into instanceof Exists2) {
                  if (into.value0 === a) {
                      return into;
                  };
                  if (Data_Boolean.otherwise) {
                      var a$prime$prime = freshen(into.value0)([ arg ]);
                      return new Exists2(a$prime$prime, subst(arg)(a)(subst(new Atom(a$prime$prime))(into.value0)(into.value1)));
                  };
              };
              throw new Error("Failed pattern match at CLL2 (line 54, column 20 - line 75, column 70): " + [ into.constructor.name ]);
          };
      };
  };
  var formParser = function (v) {
      return Control_Apply.applyFirst(Text_Parsing_StringParser.applyParser)(Control_Apply.applySecond(Text_Parsing_StringParser.applyParser)(Text_Parsing_StringParser_CodePoints.skipSpaces)(Text_Parsing_StringParser_Expr.buildExprParser(table)(Control_Lazy.defer(Text_Parsing_StringParser.lazyParser)(expr))))(Text_Parsing_StringParser_CodePoints.skipSpaces);
  };
  var expr = function (v) {
      return Control_Alt.alt(Text_Parsing_StringParser.altParser)(Control_Alt.alt(Text_Parsing_StringParser.altParser)(Control_Alt.alt(Text_Parsing_StringParser.altParser)(Control_Alt.alt(Text_Parsing_StringParser.altParser)(Control_Alt.alt(Text_Parsing_StringParser.altParser)(Control_Apply.applyFirst(Text_Parsing_StringParser.applyParser)(Control_Apply.applySecond(Text_Parsing_StringParser.applyParser)(Text_Parsing_StringParser_CodePoints["char"]("("))(Control_Lazy.defer(Text_Parsing_StringParser.lazyParser)(formParser)))(Text_Parsing_StringParser_CodePoints["char"](")")))(Data_Functor.voidRight(Text_Parsing_StringParser.functorParser)(One.value)(Text_Parsing_StringParser_CodePoints.string("1"))))(Data_Functor.voidRight(Text_Parsing_StringParser.functorParser)(Bot.value)(Text_Parsing_StringParser_CodePoints.string("F"))))(Data_Functor.voidRight(Text_Parsing_StringParser.functorParser)(Zero.value)(Text_Parsing_StringParser_CodePoints.string("0"))))(Data_Functor.voidRight(Text_Parsing_StringParser.functorParser)(Top.value)(Text_Parsing_StringParser_CodePoints.string("T"))))(Data_Functor.map(Text_Parsing_StringParser.functorParser)(Atom.create)(Text_Parsing_StringParser_CodePoints.regex("\\w[\\w']*")));
  };
  var eqForm = new Data_Eq.Eq(function (x) {
      return function (y) {
          if (x instanceof Atom && y instanceof Atom) {
              return x.value0 === y.value0;
          };
          if (x instanceof Neg && y instanceof Neg) {
              return Data_Eq.eq(eqForm)(x.value0)(y.value0);
          };
          if (x instanceof Tens && y instanceof Tens) {
              return Data_Eq.eq(eqForm)(x.value0)(y.value0) && Data_Eq.eq(eqForm)(x.value1)(y.value1);
          };
          if (x instanceof Par && y instanceof Par) {
              return Data_Eq.eq(eqForm)(x.value0)(y.value0) && Data_Eq.eq(eqForm)(x.value1)(y.value1);
          };
          if (x instanceof One && y instanceof One) {
              return true;
          };
          if (x instanceof Bot && y instanceof Bot) {
              return true;
          };
          if (x instanceof Plus && y instanceof Plus) {
              return Data_Eq.eq(eqForm)(x.value0)(y.value0) && Data_Eq.eq(eqForm)(x.value1)(y.value1);
          };
          if (x instanceof With && y instanceof With) {
              return Data_Eq.eq(eqForm)(x.value0)(y.value0) && Data_Eq.eq(eqForm)(x.value1)(y.value1);
          };
          if (x instanceof Zero && y instanceof Zero) {
              return true;
          };
          if (x instanceof Top && y instanceof Top) {
              return true;
          };
          if (x instanceof Ofc && y instanceof Ofc) {
              return Data_Eq.eq(eqForm)(x.value0)(y.value0);
          };
          if (x instanceof Ynot && y instanceof Ynot) {
              return Data_Eq.eq(eqForm)(x.value0)(y.value0);
          };
          if (x instanceof Impl && y instanceof Impl) {
              return Data_Eq.eq(eqForm)(x.value0)(y.value0) && Data_Eq.eq(eqForm)(x.value1)(y.value1);
          };
          if (x instanceof Forall2 && y instanceof Forall2) {
              return x.value0 === y.value0 && Data_Eq.eq(eqForm)(x.value1)(y.value1);
          };
          if (x instanceof Exists2 && y instanceof Exists2) {
              return x.value0 === y.value0 && Data_Eq.eq(eqForm)(x.value1)(y.value1);
          };
          return false;
      };
  });
  var pickRule = function (v) {
      return function (v1) {
          if (v.value0.button instanceof Derivation.MiddleButton) {
              return Derivation.NoRule.value;
          };
          if (v.value0.button instanceof Derivation.RightButton) {
              if (v1 instanceof Derivation.LeftNG && v1["value0"]["new"] instanceof Ofc) {
                  return new Derivation.Obligations([ Derivation.unitaggedEntails(Data_Semigroup.append(Data_Semigroup.semigroupArray)(v1.value0.before)(Data_Semigroup.append(Data_Semigroup.semigroupArray)([ v1["value0"]["new"], v1["value0"]["new"] ])(v1.value0.after)))(v1.value0.cqts) ]);
              };
              if (v1 instanceof Derivation.RightNG && v1["value0"]["new"] instanceof Ynot) {
                  return new Derivation.Obligations([ Derivation.unitaggedEntails(v1.value0.ants)(Data_Semigroup.append(Data_Semigroup.semigroupArray)(v1.value0.before)(Data_Semigroup.append(Data_Semigroup.semigroupArray)([ v1["value0"]["new"], v1["value0"]["new"] ])(v1.value0.after))) ]);
              };
              if (v1 instanceof Derivation.LeftG && v1["value0"]["new"] instanceof Ofc) {
                  return Derivation.WrongMode.value;
              };
              if (v1 instanceof Derivation.RightG && v1["value0"]["new"] instanceof Ynot) {
                  return Derivation.WrongMode.value;
              };
              return Derivation.NoRule.value;
          };
          var v2 = function (v3) {
              if (v.value0.button instanceof Derivation.LeftButton && v1 instanceof Derivation.LeftNG) {
                  if (v1["value0"]["new"] instanceof Atom) {
                      return Derivation.NoRule.value;
                  };
                  if (v1["value0"]["new"] instanceof Neg) {
                      return new Derivation.Obligations([ Derivation.unitaggedEntails(Data_Semigroup.append(Data_Semigroup.semigroupArray)(v1.value0.before)(v1.value0.after))(Data_Array.snoc(v1.value0.cqts)(v1["value0"]["new"].value0)) ]);
                  };
                  if (v1["value0"]["new"] instanceof Tens) {
                      return new Derivation.Obligations([ Derivation.unitaggedEntails(Data_Semigroup.append(Data_Semigroup.semigroupArray)(v1.value0.before)(Data_Semigroup.append(Data_Semigroup.semigroupArray)([ v1["value0"]["new"].value0, v1["value0"]["new"].value1 ])(v1.value0.after)))(v1.value0.cqts) ]);
                  };
                  if (v1["value0"]["new"] instanceof Par) {
                      return Derivation.WrongMode.value;
                  };
                  if (v1["value0"]["new"] instanceof One) {
                      return new Derivation.Obligations([ Derivation.unitaggedEntails(Data_Semigroup.append(Data_Semigroup.semigroupArray)(v1.value0.before)(v1.value0.after))(v1.value0.cqts) ]);
                  };
                  if (v1["value0"]["new"] instanceof Bot) {
                      if (Data_Eq.eq(Data_Eq.eqArray(Data_Eq.eqArray(eqForm)))([ v1.value0.before, v1.value0.after, v1.value0.cqts ])([ [  ], [  ], [  ] ])) {
                          return new Derivation.Obligations([  ]);
                      };
                      if (Data_Boolean.otherwise) {
                          return Derivation.NoRule.value;
                      };
                  };
                  if (v1["value0"]["new"] instanceof Plus) {
                      return new Derivation.Obligations([ Derivation.unitaggedEntails(Data_Semigroup.append(Data_Semigroup.semigroupArray)(v1.value0.before)(Data_Semigroup.append(Data_Semigroup.semigroupArray)([ v1["value0"]["new"].value0 ])(v1.value0.after)))(v1.value0.cqts), Derivation.unitaggedEntails(Data_Semigroup.append(Data_Semigroup.semigroupArray)(v1.value0.before)(Data_Semigroup.append(Data_Semigroup.semigroupArray)([ v1["value0"]["new"].value1 ])(v1.value0.after)))(v1.value0.cqts) ]);
                  };
                  if (v1["value0"]["new"] instanceof With) {
                      if (v.value0.mpart instanceof Data_Maybe.Nothing) {
                          return Derivation.NoRule.value;
                      };
                      if (v.value0.mpart instanceof Data_Maybe.Just) {
                          return new Derivation.Obligations([ Derivation.unitaggedEntails(Data_Semigroup.append(Data_Semigroup.semigroupArray)(v1.value0.before)(Data_Semigroup.append(Data_Semigroup.semigroupArray)([ Derivation.byPart(v1["value0"]["new"].value0)(v1["value0"]["new"].value1)(v.value0.mpart.value0) ])(v1.value0.after)))(v1.value0.cqts) ]);
                      };
                      throw new Error("Failed pattern match at CLL2 (line 134, column 17 - line 136, column 78): " + [ v.value0.mpart.constructor.name ]);
                  };
                  if (v1["value0"]["new"] instanceof Zero) {
                      return new Derivation.Obligations([  ]);
                  };
                  if (v1["value0"]["new"] instanceof Top) {
                      return Derivation.NoRule.value;
                  };
                  if (v1["value0"]["new"] instanceof Ofc) {
                      if (v.value0.mpart instanceof Data_Maybe.Nothing) {
                          return Derivation.NoRule.value;
                      };
                      if (v.value0.mpart instanceof Data_Maybe.Just && v.value0.mpart.value0 instanceof Derivation.Part1) {
                          return new Derivation.Obligations([ Derivation.unitaggedEntails(Data_Semigroup.append(Data_Semigroup.semigroupArray)(v1.value0.before)(v1.value0.after))(v1.value0.cqts) ]);
                      };
                      if (v.value0.mpart instanceof Data_Maybe.Just && v.value0.mpart.value0 instanceof Derivation.Part2) {
                          return new Derivation.Obligations([ Derivation.unitaggedEntails(Data_Semigroup.append(Data_Semigroup.semigroupArray)(v1.value0.before)(Data_Semigroup.append(Data_Semigroup.semigroupArray)([ v1["value0"]["new"].value0 ])(v1.value0.after)))(v1.value0.cqts) ]);
                      };
                      throw new Error("Failed pattern match at CLL2 (line 139, column 14 - line 142, column 65): " + [ v.value0.mpart.constructor.name ]);
                  };
                  if (v1["value0"]["new"] instanceof Ynot) {
                      if (Data_Foldable.all(Data_Foldable.foldableArray)(Data_HeytingAlgebra.heytingAlgebraBoolean)(isOfc)(Data_Semigroup.append(Data_Semigroup.semigroupArray)(v1.value0.before)(v1.value0.after)) && Data_Foldable.all(Data_Foldable.foldableArray)(Data_HeytingAlgebra.heytingAlgebraBoolean)(isYnot)(v1.value0.cqts)) {
                          return new Derivation.Obligations([ Derivation.unitaggedEntails(Data_Semigroup.append(Data_Semigroup.semigroupArray)(v1.value0.before)(Data_Semigroup.append(Data_Semigroup.semigroupArray)([ v1["value0"]["new"].value0 ])(v1.value0.after)))(v1.value0.cqts) ]);
                      };
                      if (Data_Boolean.otherwise) {
                          return Derivation.NoRule.value;
                      };
                  };
                  if (v1["value0"]["new"] instanceof Impl) {
                      return Derivation.WrongMode.value;
                  };
                  if (v1["value0"]["new"] instanceof Forall2) {
                      if (v.value1 instanceof Data_Maybe.Nothing) {
                          return Derivation.NoRule.value;
                      };
                      if (v.value1 instanceof Data_Maybe.Just) {
                          return new Derivation.Obligations([ Derivation.unitaggedEntails(Data_Semigroup.append(Data_Semigroup.semigroupArray)(v1.value0.before)(Data_Semigroup.append(Data_Semigroup.semigroupArray)([ subst(v.value1.value0)(v1["value0"]["new"].value0)(v1["value0"]["new"].value1) ])(v1.value0.after)))(v1.value0.cqts) ]);
                      };
                      throw new Error("Failed pattern match at CLL2 (line 147, column 20 - line 149, column 75): " + [ v.value1.constructor.name ]);
                  };
                  if (v1["value0"]["new"] instanceof Exists2) {
                      var fresh = new Atom(freshen(v1["value0"]["new"].value0)(Data_Semigroup.append(Data_Semigroup.semigroupArray)(v1.value0.before)(Data_Semigroup.append(Data_Semigroup.semigroupArray)([ v1["value0"]["new"] ])(Data_Semigroup.append(Data_Semigroup.semigroupArray)(v1.value0.after)(v1.value0.cqts)))));
                      return new Derivation.Obligations([ Derivation.unitaggedEntails(Data_Semigroup.append(Data_Semigroup.semigroupArray)(v1.value0.before)(Data_Semigroup.append(Data_Semigroup.semigroupArray)([ subst(fresh)(v1["value0"]["new"].value0)(v1["value0"]["new"].value1) ])(v1.value0.after)))(v1.value0.cqts) ]);
                  };
                  throw new Error("Failed pattern match at CLL2 (line 124, column 3 - line 152, column 68): " + [ v1["value0"]["new"].constructor.name ]);
              };
              if (v.value0.button instanceof Derivation.LeftButton && v1 instanceof Derivation.RightNG) {
                  if (v1["value0"]["new"] instanceof Atom) {
                      return Derivation.NoRule.value;
                  };
                  if (v1["value0"]["new"] instanceof Neg) {
                      return new Derivation.Obligations([ Derivation.unitaggedEntails(Data_Array.snoc(v1.value0.ants)(v1["value0"]["new"].value0))(Data_Semigroup.append(Data_Semigroup.semigroupArray)(v1.value0.before)(v1.value0.after)) ]);
                  };
                  if (v1["value0"]["new"] instanceof Tens) {
                      return Derivation.WrongMode.value;
                  };
                  if (v1["value0"]["new"] instanceof Par) {
                      return new Derivation.Obligations([ Derivation.unitaggedEntails(v1.value0.ants)(Data_Semigroup.append(Data_Semigroup.semigroupArray)(v1.value0.before)(Data_Semigroup.append(Data_Semigroup.semigroupArray)([ v1["value0"]["new"].value0, v1["value0"]["new"].value1 ])(v1.value0.after))) ]);
                  };
                  if (v1["value0"]["new"] instanceof One) {
                      if (Data_Eq.eq(Data_Eq.eqArray(Data_Eq.eqArray(eqForm)))([ v1.value0.ants, v1.value0.before, v1.value0.after ])([ [  ], [  ], [  ] ])) {
                          return new Derivation.Obligations([  ]);
                      };
                      if (Data_Boolean.otherwise) {
                          return Derivation.NoRule.value;
                      };
                  };
                  if (v1["value0"]["new"] instanceof Bot) {
                      return new Derivation.Obligations([ Derivation.unitaggedEntails(v1.value0.ants)(Data_Semigroup.append(Data_Semigroup.semigroupArray)(v1.value0.before)(v1.value0.after)) ]);
                  };
                  if (v1["value0"]["new"] instanceof Plus) {
                      if (v.value0.mpart instanceof Data_Maybe.Nothing) {
                          return Derivation.NoRule.value;
                      };
                      if (v.value0.mpart instanceof Data_Maybe.Just) {
                          return new Derivation.Obligations([ Derivation.unitaggedEntails(v1.value0.ants)(Data_Semigroup.append(Data_Semigroup.semigroupArray)(v1.value0.before)(Data_Semigroup.append(Data_Semigroup.semigroupArray)([ Derivation.byPart(v1["value0"]["new"].value0)(v1["value0"]["new"].value1)(v.value0.mpart.value0) ])(v1.value0.after))) ]);
                      };
                      throw new Error("Failed pattern match at CLL2 (line 163, column 17 - line 165, column 78): " + [ v.value0.mpart.constructor.name ]);
                  };
                  if (v1["value0"]["new"] instanceof With) {
                      return new Derivation.Obligations([ Derivation.unitaggedEntails(v1.value0.ants)(Data_Semigroup.append(Data_Semigroup.semigroupArray)(v1.value0.before)(Data_Semigroup.append(Data_Semigroup.semigroupArray)([ v1["value0"]["new"].value0 ])(v1.value0.after))), Derivation.unitaggedEntails(v1.value0.ants)(Data_Semigroup.append(Data_Semigroup.semigroupArray)(v1.value0.before)(Data_Semigroup.append(Data_Semigroup.semigroupArray)([ v1["value0"]["new"].value1 ])(v1.value0.after))) ]);
                  };
                  if (v1["value0"]["new"] instanceof Zero) {
                      return Derivation.NoRule.value;
                  };
                  if (v1["value0"]["new"] instanceof Top) {
                      return new Derivation.Obligations([  ]);
                  };
                  if (v1["value0"]["new"] instanceof Ofc) {
                      if (Data_Foldable.all(Data_Foldable.foldableArray)(Data_HeytingAlgebra.heytingAlgebraBoolean)(isOfc)(v1.value0.ants) && Data_Foldable.all(Data_Foldable.foldableArray)(Data_HeytingAlgebra.heytingAlgebraBoolean)(isYnot)(Data_Semigroup.append(Data_Semigroup.semigroupArray)(v1.value0.before)(v1.value0.after))) {
                          return new Derivation.Obligations([ Derivation.unitaggedEntails(v1.value0.ants)(Data_Semigroup.append(Data_Semigroup.semigroupArray)(v1.value0.before)(Data_Semigroup.append(Data_Semigroup.semigroupArray)([ v1["value0"]["new"].value0 ])(v1.value0.after))) ]);
                      };
                      if (Data_Boolean.otherwise) {
                          return Derivation.NoRule.value;
                      };
                  };
                  if (v1["value0"]["new"] instanceof Ynot) {
                      if (v.value0.mpart instanceof Data_Maybe.Nothing) {
                          return Derivation.NoRule.value;
                      };
                      if (v.value0.mpart instanceof Data_Maybe.Just && v.value0.mpart.value0 instanceof Derivation.Part1) {
                          return new Derivation.Obligations([ Derivation.unitaggedEntails(v1.value0.ants)(Data_Semigroup.append(Data_Semigroup.semigroupArray)(v1.value0.before)(v1.value0.after)) ]);
                      };
                      if (v.value0.mpart instanceof Data_Maybe.Just && v.value0.mpart.value0 instanceof Derivation.Part2) {
                          return new Derivation.Obligations([ Derivation.unitaggedEntails(v1.value0.ants)(Data_Semigroup.append(Data_Semigroup.semigroupArray)(v1.value0.before)(Data_Semigroup.append(Data_Semigroup.semigroupArray)([ v1["value0"]["new"].value0 ])(v1.value0.after))) ]);
                      };
                      throw new Error("Failed pattern match at CLL2 (line 173, column 15 - line 176, column 65): " + [ v.value0.mpart.constructor.name ]);
                  };
                  if (v1["value0"]["new"] instanceof Impl) {
                      return new Derivation.Obligations([ Derivation.unitaggedEntails(Data_Array.snoc(v1.value0.ants)(v1["value0"]["new"].value0))(Data_Semigroup.append(Data_Semigroup.semigroupArray)(v1.value0.before)(Data_Semigroup.append(Data_Semigroup.semigroupArray)([ v1["value0"]["new"].value1 ])(v1.value0.after))) ]);
                  };
                  if (v1["value0"]["new"] instanceof Forall2) {
                      var fresh = new Atom(freshen(v1["value0"]["new"].value0)(Data_Semigroup.append(Data_Semigroup.semigroupArray)(v1.value0.ants)(Data_Semigroup.append(Data_Semigroup.semigroupArray)(v1.value0.before)(Data_Semigroup.append(Data_Semigroup.semigroupArray)([ v1["value0"]["new"] ])(v1.value0.after)))));
                      return new Derivation.Obligations([ Derivation.unitaggedEntails(v1.value0.ants)(Data_Semigroup.append(Data_Semigroup.semigroupArray)(v1.value0.before)(Data_Semigroup.append(Data_Semigroup.semigroupArray)([ subst(fresh)(v1["value0"]["new"].value0)(v1["value0"]["new"].value1) ])(v1.value0.after))) ]);
                  };
                  if (v1["value0"]["new"] instanceof Exists2) {
                      if (v.value1 instanceof Data_Maybe.Nothing) {
                          return Derivation.NoRule.value;
                      };
                      if (v.value1 instanceof Data_Maybe.Just) {
                          return new Derivation.Obligations([ Derivation.unitaggedEntails(v1.value0.ants)(Data_Semigroup.append(Data_Semigroup.semigroupArray)(v1.value0.before)(Data_Semigroup.append(Data_Semigroup.semigroupArray)([ subst(v.value1.value0)(v1["value0"]["new"].value0)(v1["value0"]["new"].value1) ])(v1.value0.after))) ]);
                      };
                      throw new Error("Failed pattern match at CLL2 (line 181, column 20 - line 183, column 75): " + [ v.value1.constructor.name ]);
                  };
                  throw new Error("Failed pattern match at CLL2 (line 155, column 3 - line 183, column 75): " + [ v1["value0"]["new"].constructor.name ]);
              };
              if (v.value0.button instanceof Derivation.LeftButton && v1 instanceof Derivation.LeftG) {
                  if (v1["value0"]["new"] instanceof Par) {
                      return new Derivation.Obligations([ Derivation.unitaggedEntails(Data_Semigroup.append(Data_Semigroup.semigroupArray)(v1.value0.before.group1)(Data_Semigroup.append(Data_Semigroup.semigroupArray)([ v1["value0"]["new"].value0 ])(v1.value0.after.group1)))(v1.value0.cqts.group1), Derivation.unitaggedEntails(Data_Semigroup.append(Data_Semigroup.semigroupArray)(v1.value0.before.group2)(Data_Semigroup.append(Data_Semigroup.semigroupArray)([ v1["value0"]["new"].value1 ])(v1.value0.after.group2)))(v1.value0.cqts.group2) ]);
                  };
                  if (v1["value0"]["new"] instanceof Impl) {
                      return new Derivation.Obligations([ Derivation.unitaggedEntails(Data_Semigroup.append(Data_Semigroup.semigroupArray)(v1.value0.before.group1)(v1.value0.after.group1))(Data_Array.snoc(v1.value0.cqts.group1)(v1["value0"]["new"].value0)), Derivation.unitaggedEntails(Data_Semigroup.append(Data_Semigroup.semigroupArray)(v1.value0.before.group2)(Data_Semigroup.append(Data_Semigroup.semigroupArray)([ v1["value0"]["new"].value1 ])(v1.value0.after.group2)))(v1.value0.cqts.group2) ]);
                  };
                  return Derivation.WrongMode.value;
              };
              if (v.value0.button instanceof Derivation.LeftButton && (v1 instanceof Derivation.RightG && v1["value0"]["new"] instanceof Tens)) {
                  return new Derivation.Obligations([ Derivation.unitaggedEntails(v1.value0.ants.group1)(Data_Semigroup.append(Data_Semigroup.semigroupArray)(v1.value0.before.group1)(Data_Semigroup.append(Data_Semigroup.semigroupArray)([ v1["value0"]["new"].value0 ])(v1.value0.after.group1))), Derivation.unitaggedEntails(v1.value0.ants.group2)(Data_Semigroup.append(Data_Semigroup.semigroupArray)(v1.value0.before.group2)(Data_Semigroup.append(Data_Semigroup.semigroupArray)([ v1["value0"]["new"].value1 ])(v1.value0.after.group2))) ]);
              };
              return Derivation.WrongMode.value;
          };
          if (v.value0.button instanceof Derivation.LeftButton) {
              var $299 = Derivation.enew(v1);
              if ($299 instanceof Atom) {
                  return Derivation.NoRule.value;
              };
              return v2(true);
          };
          return v2(true);
      };
  };
  var cllRender = new Derivation.RenderForm(renderForm);
  var aeq = function (form1) {
      return function (form2) {
          if (form1 instanceof Atom && form2 instanceof Atom) {
              return form1.value0 === form2.value0;
          };
          if (form1 instanceof Neg && form2 instanceof Neg) {
              return aeq(form1.value0)(form2.value0);
          };
          if (form1 instanceof Tens && form2 instanceof Tens) {
              return aeq(form1.value0)(form2.value0) && aeq(form1.value1)(form2.value1);
          };
          if (form1 instanceof Par && form2 instanceof Par) {
              return aeq(form1.value0)(form2.value0) && aeq(form1.value1)(form2.value1);
          };
          if (form1 instanceof One && form2 instanceof One) {
              return true;
          };
          if (form1 instanceof Bot && form2 instanceof Bot) {
              return true;
          };
          if (form1 instanceof Plus && form2 instanceof Plus) {
              return aeq(form1.value0)(form2.value0) && aeq(form1.value1)(form2.value1);
          };
          if (form1 instanceof With && form2 instanceof With) {
              return aeq(form1.value0)(form2.value0) && aeq(form1.value1)(form2.value1);
          };
          if (form1 instanceof Zero && form2 instanceof Zero) {
              return true;
          };
          if (form1 instanceof Top && form2 instanceof Top) {
              return true;
          };
          if (form1 instanceof Ofc && form2 instanceof Ofc) {
              return aeq(form1.value0)(form2.value0);
          };
          if (form1 instanceof Ynot && form2 instanceof Ynot) {
              return aeq(form1.value0)(form2.value0);
          };
          if (form1 instanceof Impl && form2 instanceof Impl) {
              return aeq(form1.value0)(form2.value0) && aeq(form1.value1)(form2.value1);
          };
          if (form1 instanceof Forall2 && form2 instanceof Forall2) {
              var a$prime$prime = freshen(form1.value0)([ form1.value1, form2.value1, new Atom(form1.value0), new Atom(form2.value0) ]);
              return aeq(subst(new Atom(a$prime$prime))(form1.value0)(form1.value1))(subst(new Atom(a$prime$prime))(form2.value0)(form2.value1));
          };
          if (form1 instanceof Exists2 && form2 instanceof Exists2) {
              var a$prime$prime = freshen(form1.value0)([ form1.value1, form2.value1, new Atom(form1.value0), new Atom(form2.value0) ]);
              return aeq(subst(new Atom(a$prime$prime))(form1.value0)(form1.value1))(subst(new Atom(a$prime$prime))(form2.value0)(form2.value1));
          };
          return false;
      };
  };
  var cllCalculus = new Derivation.Calculus(aeq, formParser, Data_Function["const"](true), pickRule);
  exports["cllCalculus"] = cllCalculus;
  exports["cllRender"] = cllRender;
})(PS);
(function($PS) {
  // Generated by purs version 0.13.8
  "use strict";
  $PS["Control.Monad.State.Trans"] = $PS["Control.Monad.State.Trans"] || {};
  var exports = $PS["Control.Monad.State.Trans"];
  var Control_Applicative = $PS["Control.Applicative"];
  var Control_Apply = $PS["Control.Apply"];
  var Control_Bind = $PS["Control.Bind"];
  var Control_Lazy = $PS["Control.Lazy"];
  var Control_Monad = $PS["Control.Monad"];
  var Control_Monad_State_Class = $PS["Control.Monad.State.Class"];
  var Data_Functor = $PS["Data.Functor"];
  var Data_Tuple = $PS["Data.Tuple"];
  var Data_Unit = $PS["Data.Unit"];                      
  var StateT = function (x) {
      return x;
  };
  var runStateT = function (v) {
      return v;
  };
  var lazyStateT = new Control_Lazy.Lazy(function (f) {
      return function (s) {
          var v = f(Data_Unit.unit);
          return v(s);
      };
  });
  var functorStateT = function (dictFunctor) {
      return new Data_Functor.Functor(function (f) {
          return function (v) {
              return function (s) {
                  return Data_Functor.map(dictFunctor)(function (v1) {
                      return new Data_Tuple.Tuple(f(v1.value0), v1.value1);
                  })(v(s));
              };
          };
      });
  };
  var evalStateT = function (dictFunctor) {
      return function (v) {
          return function (s) {
              return Data_Functor.map(dictFunctor)(Data_Tuple.fst)(v(s));
          };
      };
  };
  var monadStateT = function (dictMonad) {
      return new Control_Monad.Monad(function () {
          return applicativeStateT(dictMonad);
      }, function () {
          return bindStateT(dictMonad);
      });
  };
  var bindStateT = function (dictMonad) {
      return new Control_Bind.Bind(function () {
          return applyStateT(dictMonad);
      }, function (v) {
          return function (f) {
              return function (s) {
                  return Control_Bind.bind(dictMonad.Bind1())(v(s))(function (v1) {
                      var v3 = f(v1.value0);
                      return v3(v1.value1);
                  });
              };
          };
      });
  };
  var applyStateT = function (dictMonad) {
      return new Control_Apply.Apply(function () {
          return functorStateT(((dictMonad.Bind1()).Apply0()).Functor0());
      }, Control_Monad.ap(monadStateT(dictMonad)));
  };
  var applicativeStateT = function (dictMonad) {
      return new Control_Applicative.Applicative(function () {
          return applyStateT(dictMonad);
      }, function (a) {
          return function (s) {
              return Control_Applicative.pure(dictMonad.Applicative0())(new Data_Tuple.Tuple(a, s));
          };
      });
  };
  var monadStateStateT = function (dictMonad) {
      return new Control_Monad_State_Class.MonadState(function () {
          return monadStateT(dictMonad);
      }, function (f) {
          return StateT((function () {
              var $112 = Control_Applicative.pure(dictMonad.Applicative0());
              return function ($113) {
                  return $112(f($113));
              };
          })());
      });
  };
  exports["StateT"] = StateT;
  exports["runStateT"] = runStateT;
  exports["evalStateT"] = evalStateT;
  exports["functorStateT"] = functorStateT;
  exports["monadStateT"] = monadStateT;
  exports["lazyStateT"] = lazyStateT;
  exports["monadStateStateT"] = monadStateStateT;
})(PS);
(function($PS) {
  // Generated by purs version 0.13.8
  "use strict";
  $PS["Data.Char.Unicode"] = $PS["Data.Char.Unicode"] || {};
  var exports = $PS["Data.Char.Unicode"];
  var Data_Char = $PS["Data.Char"];
  var isDigit = function (c) {
      var diff = Data_Char.toCharCode(c) - Data_Char.toCharCode("0") | 0;
      return diff <= 9 && diff >= 0;
  };
  var isHexDigit = function (c) {
      return isDigit(c) || ((function () {
          var diff = Data_Char.toCharCode(c) - Data_Char.toCharCode("A") | 0;
          return diff <= 5 && diff >= 0;
      })() || (function () {
          var diff = Data_Char.toCharCode(c) - Data_Char.toCharCode("a") | 0;
          return diff <= 5 && diff >= 0;
      })());
  };
  exports["isDigit"] = isDigit;
  exports["isHexDigit"] = isHexDigit;
})(PS);
(function($PS) {
  // Generated by purs version 0.13.8
  "use strict";
  $PS["Data.Const"] = $PS["Data.Const"] || {};
  var exports = $PS["Data.Const"];
  var Data_Newtype = $PS["Data.Newtype"];                                          
  var Const = function (x) {
      return x;
  };
  var newtypeConst = new Data_Newtype.Newtype(function (n) {
      return n;
  }, Const);
  exports["newtypeConst"] = newtypeConst;
})(PS);
(function($PS) {
  // Generated by purs version 0.13.8
  "use strict";
  $PS["Data.Functor.Coproduct"] = $PS["Data.Functor.Coproduct"] || {};
  var exports = $PS["Data.Functor.Coproduct"];
  var Data_Either = $PS["Data.Either"];
  var right = function (ga) {
      return new Data_Either.Right(ga);
  };            
  var left = function (fa) {
      return new Data_Either.Left(fa);
  };
  var coproduct = function (v) {
      return function (v1) {
          return function (v2) {
              if (v2 instanceof Data_Either.Left) {
                  return v(v2.value0);
              };
              if (v2 instanceof Data_Either.Right) {
                  return v1(v2.value0);
              };
              throw new Error("Failed pattern match at Data.Functor.Coproduct (line 31, column 1 - line 31, column 78): " + [ v.constructor.name, v1.constructor.name, v2.constructor.name ]);
          };
      };
  };
  exports["left"] = left;
  exports["right"] = right;
  exports["coproduct"] = coproduct;
})(PS);
(function($PS) {
  // Generated by purs version 0.13.8
  "use strict";
  $PS["Data.Map.Internal"] = $PS["Data.Map.Internal"] || {};
  var exports = $PS["Data.Map.Internal"];
  var Control_Applicative = $PS["Control.Applicative"];
  var Data_Foldable = $PS["Data.Foldable"];
  var Data_List_Types = $PS["Data.List.Types"];
  var Data_Maybe = $PS["Data.Maybe"];
  var Data_Ord = $PS["Data.Ord"];
  var Data_Ordering = $PS["Data.Ordering"];
  var Data_Semigroup = $PS["Data.Semigroup"];
  var Data_Tuple = $PS["Data.Tuple"];                          
  var Leaf = (function () {
      function Leaf() {

      };
      Leaf.value = new Leaf();
      return Leaf;
  })();
  var Two = (function () {
      function Two(value0, value1, value2, value3) {
          this.value0 = value0;
          this.value1 = value1;
          this.value2 = value2;
          this.value3 = value3;
      };
      Two.create = function (value0) {
          return function (value1) {
              return function (value2) {
                  return function (value3) {
                      return new Two(value0, value1, value2, value3);
                  };
              };
          };
      };
      return Two;
  })();
  var Three = (function () {
      function Three(value0, value1, value2, value3, value4, value5, value6) {
          this.value0 = value0;
          this.value1 = value1;
          this.value2 = value2;
          this.value3 = value3;
          this.value4 = value4;
          this.value5 = value5;
          this.value6 = value6;
      };
      Three.create = function (value0) {
          return function (value1) {
              return function (value2) {
                  return function (value3) {
                      return function (value4) {
                          return function (value5) {
                              return function (value6) {
                                  return new Three(value0, value1, value2, value3, value4, value5, value6);
                              };
                          };
                      };
                  };
              };
          };
      };
      return Three;
  })();
  var TwoLeft = (function () {
      function TwoLeft(value0, value1, value2) {
          this.value0 = value0;
          this.value1 = value1;
          this.value2 = value2;
      };
      TwoLeft.create = function (value0) {
          return function (value1) {
              return function (value2) {
                  return new TwoLeft(value0, value1, value2);
              };
          };
      };
      return TwoLeft;
  })();
  var TwoRight = (function () {
      function TwoRight(value0, value1, value2) {
          this.value0 = value0;
          this.value1 = value1;
          this.value2 = value2;
      };
      TwoRight.create = function (value0) {
          return function (value1) {
              return function (value2) {
                  return new TwoRight(value0, value1, value2);
              };
          };
      };
      return TwoRight;
  })();
  var ThreeLeft = (function () {
      function ThreeLeft(value0, value1, value2, value3, value4, value5) {
          this.value0 = value0;
          this.value1 = value1;
          this.value2 = value2;
          this.value3 = value3;
          this.value4 = value4;
          this.value5 = value5;
      };
      ThreeLeft.create = function (value0) {
          return function (value1) {
              return function (value2) {
                  return function (value3) {
                      return function (value4) {
                          return function (value5) {
                              return new ThreeLeft(value0, value1, value2, value3, value4, value5);
                          };
                      };
                  };
              };
          };
      };
      return ThreeLeft;
  })();
  var ThreeMiddle = (function () {
      function ThreeMiddle(value0, value1, value2, value3, value4, value5) {
          this.value0 = value0;
          this.value1 = value1;
          this.value2 = value2;
          this.value3 = value3;
          this.value4 = value4;
          this.value5 = value5;
      };
      ThreeMiddle.create = function (value0) {
          return function (value1) {
              return function (value2) {
                  return function (value3) {
                      return function (value4) {
                          return function (value5) {
                              return new ThreeMiddle(value0, value1, value2, value3, value4, value5);
                          };
                      };
                  };
              };
          };
      };
      return ThreeMiddle;
  })();
  var ThreeRight = (function () {
      function ThreeRight(value0, value1, value2, value3, value4, value5) {
          this.value0 = value0;
          this.value1 = value1;
          this.value2 = value2;
          this.value3 = value3;
          this.value4 = value4;
          this.value5 = value5;
      };
      ThreeRight.create = function (value0) {
          return function (value1) {
              return function (value2) {
                  return function (value3) {
                      return function (value4) {
                          return function (value5) {
                              return new ThreeRight(value0, value1, value2, value3, value4, value5);
                          };
                      };
                  };
              };
          };
      };
      return ThreeRight;
  })();
  var KickUp = (function () {
      function KickUp(value0, value1, value2, value3) {
          this.value0 = value0;
          this.value1 = value1;
          this.value2 = value2;
          this.value3 = value3;
      };
      KickUp.create = function (value0) {
          return function (value1) {
              return function (value2) {
                  return function (value3) {
                      return new KickUp(value0, value1, value2, value3);
                  };
              };
          };
      };
      return KickUp;
  })();
  var values = function (v) {
      if (v instanceof Leaf) {
          return Data_List_Types.Nil.value;
      };
      if (v instanceof Two) {
          return Data_Semigroup.append(Data_List_Types.semigroupList)(values(v.value0))(Data_Semigroup.append(Data_List_Types.semigroupList)(Control_Applicative.pure(Data_List_Types.applicativeList)(v.value2))(values(v.value3)));
      };
      if (v instanceof Three) {
          return Data_Semigroup.append(Data_List_Types.semigroupList)(values(v.value0))(Data_Semigroup.append(Data_List_Types.semigroupList)(Control_Applicative.pure(Data_List_Types.applicativeList)(v.value2))(Data_Semigroup.append(Data_List_Types.semigroupList)(values(v.value3))(Data_Semigroup.append(Data_List_Types.semigroupList)(Control_Applicative.pure(Data_List_Types.applicativeList)(v.value5))(values(v.value6)))));
      };
      throw new Error("Failed pattern match at Data.Map.Internal (line 612, column 1 - line 612, column 40): " + [ v.constructor.name ]);
  }; 
  var fromZipper = function ($copy_dictOrd) {
      return function ($copy_v) {
          return function ($copy_tree) {
              var $tco_var_dictOrd = $copy_dictOrd;
              var $tco_var_v = $copy_v;
              var $tco_done = false;
              var $tco_result;
              function $tco_loop(dictOrd, v, tree) {
                  if (v instanceof Data_List_Types.Nil) {
                      $tco_done = true;
                      return tree;
                  };
                  if (v instanceof Data_List_Types.Cons) {
                      if (v.value0 instanceof TwoLeft) {
                          $tco_var_dictOrd = dictOrd;
                          $tco_var_v = v.value1;
                          $copy_tree = new Two(tree, v.value0.value0, v.value0.value1, v.value0.value2);
                          return;
                      };
                      if (v.value0 instanceof TwoRight) {
                          $tco_var_dictOrd = dictOrd;
                          $tco_var_v = v.value1;
                          $copy_tree = new Two(v.value0.value0, v.value0.value1, v.value0.value2, tree);
                          return;
                      };
                      if (v.value0 instanceof ThreeLeft) {
                          $tco_var_dictOrd = dictOrd;
                          $tco_var_v = v.value1;
                          $copy_tree = new Three(tree, v.value0.value0, v.value0.value1, v.value0.value2, v.value0.value3, v.value0.value4, v.value0.value5);
                          return;
                      };
                      if (v.value0 instanceof ThreeMiddle) {
                          $tco_var_dictOrd = dictOrd;
                          $tco_var_v = v.value1;
                          $copy_tree = new Three(v.value0.value0, v.value0.value1, v.value0.value2, tree, v.value0.value3, v.value0.value4, v.value0.value5);
                          return;
                      };
                      if (v.value0 instanceof ThreeRight) {
                          $tco_var_dictOrd = dictOrd;
                          $tco_var_v = v.value1;
                          $copy_tree = new Three(v.value0.value0, v.value0.value1, v.value0.value2, v.value0.value3, v.value0.value4, v.value0.value5, tree);
                          return;
                      };
                      throw new Error("Failed pattern match at Data.Map.Internal (line 418, column 3 - line 423, column 88): " + [ v.value0.constructor.name ]);
                  };
                  throw new Error("Failed pattern match at Data.Map.Internal (line 415, column 1 - line 415, column 80): " + [ v.constructor.name, tree.constructor.name ]);
              };
              while (!$tco_done) {
                  $tco_result = $tco_loop($tco_var_dictOrd, $tco_var_v, $copy_tree);
              };
              return $tco_result;
          };
      };
  };
  var insert = function (dictOrd) {
      return function (k) {
          return function (v) {
              var up = function ($copy_v1) {
                  return function ($copy_v2) {
                      var $tco_var_v1 = $copy_v1;
                      var $tco_done = false;
                      var $tco_result;
                      function $tco_loop(v1, v2) {
                          if (v1 instanceof Data_List_Types.Nil) {
                              $tco_done = true;
                              return new Two(v2.value0, v2.value1, v2.value2, v2.value3);
                          };
                          if (v1 instanceof Data_List_Types.Cons) {
                              if (v1.value0 instanceof TwoLeft) {
                                  $tco_done = true;
                                  return fromZipper(dictOrd)(v1.value1)(new Three(v2.value0, v2.value1, v2.value2, v2.value3, v1.value0.value0, v1.value0.value1, v1.value0.value2));
                              };
                              if (v1.value0 instanceof TwoRight) {
                                  $tco_done = true;
                                  return fromZipper(dictOrd)(v1.value1)(new Three(v1.value0.value0, v1.value0.value1, v1.value0.value2, v2.value0, v2.value1, v2.value2, v2.value3));
                              };
                              if (v1.value0 instanceof ThreeLeft) {
                                  $tco_var_v1 = v1.value1;
                                  $copy_v2 = new KickUp(new Two(v2.value0, v2.value1, v2.value2, v2.value3), v1.value0.value0, v1.value0.value1, new Two(v1.value0.value2, v1.value0.value3, v1.value0.value4, v1.value0.value5));
                                  return;
                              };
                              if (v1.value0 instanceof ThreeMiddle) {
                                  $tco_var_v1 = v1.value1;
                                  $copy_v2 = new KickUp(new Two(v1.value0.value0, v1.value0.value1, v1.value0.value2, v2.value0), v2.value1, v2.value2, new Two(v2.value3, v1.value0.value3, v1.value0.value4, v1.value0.value5));
                                  return;
                              };
                              if (v1.value0 instanceof ThreeRight) {
                                  $tco_var_v1 = v1.value1;
                                  $copy_v2 = new KickUp(new Two(v1.value0.value0, v1.value0.value1, v1.value0.value2, v1.value0.value3), v1.value0.value4, v1.value0.value5, new Two(v2.value0, v2.value1, v2.value2, v2.value3));
                                  return;
                              };
                              throw new Error("Failed pattern match at Data.Map.Internal (line 454, column 5 - line 459, column 108): " + [ v1.value0.constructor.name, v2.constructor.name ]);
                          };
                          throw new Error("Failed pattern match at Data.Map.Internal (line 451, column 3 - line 451, column 56): " + [ v1.constructor.name, v2.constructor.name ]);
                      };
                      while (!$tco_done) {
                          $tco_result = $tco_loop($tco_var_v1, $copy_v2);
                      };
                      return $tco_result;
                  };
              };
              var comp = Data_Ord.compare(dictOrd);
              var down = function ($copy_ctx) {
                  return function ($copy_v1) {
                      var $tco_var_ctx = $copy_ctx;
                      var $tco_done = false;
                      var $tco_result;
                      function $tco_loop(ctx, v1) {
                          if (v1 instanceof Leaf) {
                              $tco_done = true;
                              return up(ctx)(new KickUp(Leaf.value, k, v, Leaf.value));
                          };
                          if (v1 instanceof Two) {
                              var v2 = comp(k)(v1.value1);
                              if (v2 instanceof Data_Ordering.EQ) {
                                  $tco_done = true;
                                  return fromZipper(dictOrd)(ctx)(new Two(v1.value0, k, v, v1.value3));
                              };
                              if (v2 instanceof Data_Ordering.LT) {
                                  $tco_var_ctx = new Data_List_Types.Cons(new TwoLeft(v1.value1, v1.value2, v1.value3), ctx);
                                  $copy_v1 = v1.value0;
                                  return;
                              };
                              $tco_var_ctx = new Data_List_Types.Cons(new TwoRight(v1.value0, v1.value1, v1.value2), ctx);
                              $copy_v1 = v1.value3;
                              return;
                          };
                          if (v1 instanceof Three) {
                              var v3 = comp(k)(v1.value1);
                              if (v3 instanceof Data_Ordering.EQ) {
                                  $tco_done = true;
                                  return fromZipper(dictOrd)(ctx)(new Three(v1.value0, k, v, v1.value3, v1.value4, v1.value5, v1.value6));
                              };
                              var v4 = comp(k)(v1.value4);
                              if (v4 instanceof Data_Ordering.EQ) {
                                  $tco_done = true;
                                  return fromZipper(dictOrd)(ctx)(new Three(v1.value0, v1.value1, v1.value2, v1.value3, k, v, v1.value6));
                              };
                              if (v3 instanceof Data_Ordering.LT) {
                                  $tco_var_ctx = new Data_List_Types.Cons(new ThreeLeft(v1.value1, v1.value2, v1.value3, v1.value4, v1.value5, v1.value6), ctx);
                                  $copy_v1 = v1.value0;
                                  return;
                              };
                              if (v3 instanceof Data_Ordering.GT && v4 instanceof Data_Ordering.LT) {
                                  $tco_var_ctx = new Data_List_Types.Cons(new ThreeMiddle(v1.value0, v1.value1, v1.value2, v1.value4, v1.value5, v1.value6), ctx);
                                  $copy_v1 = v1.value3;
                                  return;
                              };
                              $tco_var_ctx = new Data_List_Types.Cons(new ThreeRight(v1.value0, v1.value1, v1.value2, v1.value3, v1.value4, v1.value5), ctx);
                              $copy_v1 = v1.value6;
                              return;
                          };
                          throw new Error("Failed pattern match at Data.Map.Internal (line 434, column 3 - line 434, column 55): " + [ ctx.constructor.name, v1.constructor.name ]);
                      };
                      while (!$tco_done) {
                          $tco_result = $tco_loop($tco_var_ctx, $copy_v1);
                      };
                      return $tco_result;
                  };
              };
              return down(Data_List_Types.Nil.value);
          };
      };
  };
  var pop = function (dictOrd) {
      return function (k) {
          var up = function ($copy_ctxs) {
              return function ($copy_tree) {
                  var $tco_var_ctxs = $copy_ctxs;
                  var $tco_done = false;
                  var $tco_result;
                  function $tco_loop(ctxs, tree) {
                      if (ctxs instanceof Data_List_Types.Nil) {
                          $tco_done = true;
                          return tree;
                      };
                      if (ctxs instanceof Data_List_Types.Cons) {
                          if (ctxs.value0 instanceof TwoLeft && (ctxs.value0.value2 instanceof Leaf && tree instanceof Leaf)) {
                              $tco_done = true;
                              return fromZipper(dictOrd)(ctxs.value1)(new Two(Leaf.value, ctxs.value0.value0, ctxs.value0.value1, Leaf.value));
                          };
                          if (ctxs.value0 instanceof TwoRight && (ctxs.value0.value0 instanceof Leaf && tree instanceof Leaf)) {
                              $tco_done = true;
                              return fromZipper(dictOrd)(ctxs.value1)(new Two(Leaf.value, ctxs.value0.value1, ctxs.value0.value2, Leaf.value));
                          };
                          if (ctxs.value0 instanceof TwoLeft && ctxs.value0.value2 instanceof Two) {
                              $tco_var_ctxs = ctxs.value1;
                              $copy_tree = new Three(tree, ctxs.value0.value0, ctxs.value0.value1, ctxs.value0.value2.value0, ctxs.value0.value2.value1, ctxs.value0.value2.value2, ctxs.value0.value2.value3);
                              return;
                          };
                          if (ctxs.value0 instanceof TwoRight && ctxs.value0.value0 instanceof Two) {
                              $tco_var_ctxs = ctxs.value1;
                              $copy_tree = new Three(ctxs.value0.value0.value0, ctxs.value0.value0.value1, ctxs.value0.value0.value2, ctxs.value0.value0.value3, ctxs.value0.value1, ctxs.value0.value2, tree);
                              return;
                          };
                          if (ctxs.value0 instanceof TwoLeft && ctxs.value0.value2 instanceof Three) {
                              $tco_done = true;
                              return fromZipper(dictOrd)(ctxs.value1)(new Two(new Two(tree, ctxs.value0.value0, ctxs.value0.value1, ctxs.value0.value2.value0), ctxs.value0.value2.value1, ctxs.value0.value2.value2, new Two(ctxs.value0.value2.value3, ctxs.value0.value2.value4, ctxs.value0.value2.value5, ctxs.value0.value2.value6)));
                          };
                          if (ctxs.value0 instanceof TwoRight && ctxs.value0.value0 instanceof Three) {
                              $tco_done = true;
                              return fromZipper(dictOrd)(ctxs.value1)(new Two(new Two(ctxs.value0.value0.value0, ctxs.value0.value0.value1, ctxs.value0.value0.value2, ctxs.value0.value0.value3), ctxs.value0.value0.value4, ctxs.value0.value0.value5, new Two(ctxs.value0.value0.value6, ctxs.value0.value1, ctxs.value0.value2, tree)));
                          };
                          if (ctxs.value0 instanceof ThreeLeft && (ctxs.value0.value2 instanceof Leaf && (ctxs.value0.value5 instanceof Leaf && tree instanceof Leaf))) {
                              $tco_done = true;
                              return fromZipper(dictOrd)(ctxs.value1)(new Three(Leaf.value, ctxs.value0.value0, ctxs.value0.value1, Leaf.value, ctxs.value0.value3, ctxs.value0.value4, Leaf.value));
                          };
                          if (ctxs.value0 instanceof ThreeMiddle && (ctxs.value0.value0 instanceof Leaf && (ctxs.value0.value5 instanceof Leaf && tree instanceof Leaf))) {
                              $tco_done = true;
                              return fromZipper(dictOrd)(ctxs.value1)(new Three(Leaf.value, ctxs.value0.value1, ctxs.value0.value2, Leaf.value, ctxs.value0.value3, ctxs.value0.value4, Leaf.value));
                          };
                          if (ctxs.value0 instanceof ThreeRight && (ctxs.value0.value0 instanceof Leaf && (ctxs.value0.value3 instanceof Leaf && tree instanceof Leaf))) {
                              $tco_done = true;
                              return fromZipper(dictOrd)(ctxs.value1)(new Three(Leaf.value, ctxs.value0.value1, ctxs.value0.value2, Leaf.value, ctxs.value0.value4, ctxs.value0.value5, Leaf.value));
                          };
                          if (ctxs.value0 instanceof ThreeLeft && ctxs.value0.value2 instanceof Two) {
                              $tco_done = true;
                              return fromZipper(dictOrd)(ctxs.value1)(new Two(new Three(tree, ctxs.value0.value0, ctxs.value0.value1, ctxs.value0.value2.value0, ctxs.value0.value2.value1, ctxs.value0.value2.value2, ctxs.value0.value2.value3), ctxs.value0.value3, ctxs.value0.value4, ctxs.value0.value5));
                          };
                          if (ctxs.value0 instanceof ThreeMiddle && ctxs.value0.value0 instanceof Two) {
                              $tco_done = true;
                              return fromZipper(dictOrd)(ctxs.value1)(new Two(new Three(ctxs.value0.value0.value0, ctxs.value0.value0.value1, ctxs.value0.value0.value2, ctxs.value0.value0.value3, ctxs.value0.value1, ctxs.value0.value2, tree), ctxs.value0.value3, ctxs.value0.value4, ctxs.value0.value5));
                          };
                          if (ctxs.value0 instanceof ThreeMiddle && ctxs.value0.value5 instanceof Two) {
                              $tco_done = true;
                              return fromZipper(dictOrd)(ctxs.value1)(new Two(ctxs.value0.value0, ctxs.value0.value1, ctxs.value0.value2, new Three(tree, ctxs.value0.value3, ctxs.value0.value4, ctxs.value0.value5.value0, ctxs.value0.value5.value1, ctxs.value0.value5.value2, ctxs.value0.value5.value3)));
                          };
                          if (ctxs.value0 instanceof ThreeRight && ctxs.value0.value3 instanceof Two) {
                              $tco_done = true;
                              return fromZipper(dictOrd)(ctxs.value1)(new Two(ctxs.value0.value0, ctxs.value0.value1, ctxs.value0.value2, new Three(ctxs.value0.value3.value0, ctxs.value0.value3.value1, ctxs.value0.value3.value2, ctxs.value0.value3.value3, ctxs.value0.value4, ctxs.value0.value5, tree)));
                          };
                          if (ctxs.value0 instanceof ThreeLeft && ctxs.value0.value2 instanceof Three) {
                              $tco_done = true;
                              return fromZipper(dictOrd)(ctxs.value1)(new Three(new Two(tree, ctxs.value0.value0, ctxs.value0.value1, ctxs.value0.value2.value0), ctxs.value0.value2.value1, ctxs.value0.value2.value2, new Two(ctxs.value0.value2.value3, ctxs.value0.value2.value4, ctxs.value0.value2.value5, ctxs.value0.value2.value6), ctxs.value0.value3, ctxs.value0.value4, ctxs.value0.value5));
                          };
                          if (ctxs.value0 instanceof ThreeMiddle && ctxs.value0.value0 instanceof Three) {
                              $tco_done = true;
                              return fromZipper(dictOrd)(ctxs.value1)(new Three(new Two(ctxs.value0.value0.value0, ctxs.value0.value0.value1, ctxs.value0.value0.value2, ctxs.value0.value0.value3), ctxs.value0.value0.value4, ctxs.value0.value0.value5, new Two(ctxs.value0.value0.value6, ctxs.value0.value1, ctxs.value0.value2, tree), ctxs.value0.value3, ctxs.value0.value4, ctxs.value0.value5));
                          };
                          if (ctxs.value0 instanceof ThreeMiddle && ctxs.value0.value5 instanceof Three) {
                              $tco_done = true;
                              return fromZipper(dictOrd)(ctxs.value1)(new Three(ctxs.value0.value0, ctxs.value0.value1, ctxs.value0.value2, new Two(tree, ctxs.value0.value3, ctxs.value0.value4, ctxs.value0.value5.value0), ctxs.value0.value5.value1, ctxs.value0.value5.value2, new Two(ctxs.value0.value5.value3, ctxs.value0.value5.value4, ctxs.value0.value5.value5, ctxs.value0.value5.value6)));
                          };
                          if (ctxs.value0 instanceof ThreeRight && ctxs.value0.value3 instanceof Three) {
                              $tco_done = true;
                              return fromZipper(dictOrd)(ctxs.value1)(new Three(ctxs.value0.value0, ctxs.value0.value1, ctxs.value0.value2, new Two(ctxs.value0.value3.value0, ctxs.value0.value3.value1, ctxs.value0.value3.value2, ctxs.value0.value3.value3), ctxs.value0.value3.value4, ctxs.value0.value3.value5, new Two(ctxs.value0.value3.value6, ctxs.value0.value4, ctxs.value0.value5, tree)));
                          };
                          throw new Error("Failed pattern match at Data.Map.Internal (line 511, column 9 - line 528, column 136): " + [ ctxs.value0.constructor.name, tree.constructor.name ]);
                      };
                      throw new Error("Failed pattern match at Data.Map.Internal (line 508, column 5 - line 528, column 136): " + [ ctxs.constructor.name ]);
                  };
                  while (!$tco_done) {
                      $tco_result = $tco_loop($tco_var_ctxs, $copy_tree);
                  };
                  return $tco_result;
              };
          };
          var removeMaxNode = function ($copy_ctx) {
              return function ($copy_m) {
                  var $tco_var_ctx = $copy_ctx;
                  var $tco_done = false;
                  var $tco_result;
                  function $tco_loop(ctx, m) {
                      if (m instanceof Two && (m.value0 instanceof Leaf && m.value3 instanceof Leaf)) {
                          $tco_done = true;
                          return up(ctx)(Leaf.value);
                      };
                      if (m instanceof Two) {
                          $tco_var_ctx = new Data_List_Types.Cons(new TwoRight(m.value0, m.value1, m.value2), ctx);
                          $copy_m = m.value3;
                          return;
                      };
                      if (m instanceof Three && (m.value0 instanceof Leaf && (m.value3 instanceof Leaf && m.value6 instanceof Leaf))) {
                          $tco_done = true;
                          return up(new Data_List_Types.Cons(new TwoRight(Leaf.value, m.value1, m.value2), ctx))(Leaf.value);
                      };
                      if (m instanceof Three) {
                          $tco_var_ctx = new Data_List_Types.Cons(new ThreeRight(m.value0, m.value1, m.value2, m.value3, m.value4, m.value5), ctx);
                          $copy_m = m.value6;
                          return;
                      };
                      throw new Error("Failed pattern match at Data.Map.Internal (line 540, column 5 - line 544, column 107): " + [ m.constructor.name ]);
                  };
                  while (!$tco_done) {
                      $tco_result = $tco_loop($tco_var_ctx, $copy_m);
                  };
                  return $tco_result;
              };
          };
          var maxNode = function ($copy_m) {
              var $tco_done = false;
              var $tco_result;
              function $tco_loop(m) {
                  if (m instanceof Two && m.value3 instanceof Leaf) {
                      $tco_done = true;
                      return {
                          key: m.value1,
                          value: m.value2
                      };
                  };
                  if (m instanceof Two) {
                      $copy_m = m.value3;
                      return;
                  };
                  if (m instanceof Three && m.value6 instanceof Leaf) {
                      $tco_done = true;
                      return {
                          key: m.value4,
                          value: m.value5
                      };
                  };
                  if (m instanceof Three) {
                      $copy_m = m.value6;
                      return;
                  };
                  throw new Error("Failed pattern match at Data.Map.Internal (line 531, column 33 - line 535, column 45): " + [ m.constructor.name ]);
              };
              while (!$tco_done) {
                  $tco_result = $tco_loop($copy_m);
              };
              return $tco_result;
          };
          var comp = Data_Ord.compare(dictOrd);
          var down = function ($copy_ctx) {
              return function ($copy_m) {
                  var $tco_var_ctx = $copy_ctx;
                  var $tco_done = false;
                  var $tco_result;
                  function $tco_loop(ctx, m) {
                      if (m instanceof Leaf) {
                          $tco_done = true;
                          return Data_Maybe.Nothing.value;
                      };
                      if (m instanceof Two) {
                          var v = comp(k)(m.value1);
                          if (m.value3 instanceof Leaf && v instanceof Data_Ordering.EQ) {
                              $tco_done = true;
                              return new Data_Maybe.Just(new Data_Tuple.Tuple(m.value2, up(ctx)(Leaf.value)));
                          };
                          if (v instanceof Data_Ordering.EQ) {
                              var max = maxNode(m.value0);
                              $tco_done = true;
                              return new Data_Maybe.Just(new Data_Tuple.Tuple(m.value2, removeMaxNode(new Data_List_Types.Cons(new TwoLeft(max.key, max.value, m.value3), ctx))(m.value0)));
                          };
                          if (v instanceof Data_Ordering.LT) {
                              $tco_var_ctx = new Data_List_Types.Cons(new TwoLeft(m.value1, m.value2, m.value3), ctx);
                              $copy_m = m.value0;
                              return;
                          };
                          $tco_var_ctx = new Data_List_Types.Cons(new TwoRight(m.value0, m.value1, m.value2), ctx);
                          $copy_m = m.value3;
                          return;
                      };
                      if (m instanceof Three) {
                          var leaves = (function () {
                              if (m.value0 instanceof Leaf && (m.value3 instanceof Leaf && m.value6 instanceof Leaf)) {
                                  return true;
                              };
                              return false;
                          })();
                          var v = comp(k)(m.value4);
                          var v3 = comp(k)(m.value1);
                          if (leaves && v3 instanceof Data_Ordering.EQ) {
                              $tco_done = true;
                              return new Data_Maybe.Just(new Data_Tuple.Tuple(m.value2, fromZipper(dictOrd)(ctx)(new Two(Leaf.value, m.value4, m.value5, Leaf.value))));
                          };
                          if (leaves && v instanceof Data_Ordering.EQ) {
                              $tco_done = true;
                              return new Data_Maybe.Just(new Data_Tuple.Tuple(m.value5, fromZipper(dictOrd)(ctx)(new Two(Leaf.value, m.value1, m.value2, Leaf.value))));
                          };
                          if (v3 instanceof Data_Ordering.EQ) {
                              var max = maxNode(m.value0);
                              $tco_done = true;
                              return new Data_Maybe.Just(new Data_Tuple.Tuple(m.value2, removeMaxNode(new Data_List_Types.Cons(new ThreeLeft(max.key, max.value, m.value3, m.value4, m.value5, m.value6), ctx))(m.value0)));
                          };
                          if (v instanceof Data_Ordering.EQ) {
                              var max = maxNode(m.value3);
                              $tco_done = true;
                              return new Data_Maybe.Just(new Data_Tuple.Tuple(m.value5, removeMaxNode(new Data_List_Types.Cons(new ThreeMiddle(m.value0, m.value1, m.value2, max.key, max.value, m.value6), ctx))(m.value3)));
                          };
                          if (v3 instanceof Data_Ordering.LT) {
                              $tco_var_ctx = new Data_List_Types.Cons(new ThreeLeft(m.value1, m.value2, m.value3, m.value4, m.value5, m.value6), ctx);
                              $copy_m = m.value0;
                              return;
                          };
                          if (v3 instanceof Data_Ordering.GT && v instanceof Data_Ordering.LT) {
                              $tco_var_ctx = new Data_List_Types.Cons(new ThreeMiddle(m.value0, m.value1, m.value2, m.value4, m.value5, m.value6), ctx);
                              $copy_m = m.value3;
                              return;
                          };
                          $tco_var_ctx = new Data_List_Types.Cons(new ThreeRight(m.value0, m.value1, m.value2, m.value3, m.value4, m.value5), ctx);
                          $copy_m = m.value6;
                          return;
                      };
                      throw new Error("Failed pattern match at Data.Map.Internal (line 481, column 34 - line 504, column 80): " + [ m.constructor.name ]);
                  };
                  while (!$tco_done) {
                      $tco_result = $tco_loop($tco_var_ctx, $copy_m);
                  };
                  return $tco_result;
              };
          };
          return down(Data_List_Types.Nil.value);
      };
  };
  var foldableMap = new Data_Foldable.Foldable(function (dictMonoid) {
      return function (f) {
          return function (m) {
              return Data_Foldable.foldMap(Data_List_Types.foldableList)(dictMonoid)(f)(values(m));
          };
      };
  }, function (f) {
      return function (z) {
          return function (m) {
              return Data_Foldable.foldl(Data_List_Types.foldableList)(f)(z)(values(m));
          };
      };
  }, function (f) {
      return function (z) {
          return function (m) {
              return Data_Foldable.foldr(Data_List_Types.foldableList)(f)(z)(values(m));
          };
      };
  });
  var empty = Leaf.value;
  var $$delete = function (dictOrd) {
      return function (k) {
          return function (m) {
              return Data_Maybe.maybe(m)(Data_Tuple.snd)(pop(dictOrd)(k)(m));
          };
      };
  };
  exports["empty"] = empty;
  exports["insert"] = insert;
  exports["delete"] = $$delete;
  exports["foldableMap"] = foldableMap;
})(PS);
(function($PS) {
  // Generated by purs version 0.13.8
  "use strict";
  $PS["Data.String.NonEmpty.CodeUnits"] = $PS["Data.String.NonEmpty.CodeUnits"] || {};
  var exports = $PS["Data.String.NonEmpty.CodeUnits"];
  var Data_String_CodeUnits = $PS["Data.String.CodeUnits"];
  var Unsafe_Coerce = $PS["Unsafe.Coerce"];                
  var toNonEmptyString = Unsafe_Coerce.unsafeCoerce;
  var singleton = function ($13) {
      return toNonEmptyString(Data_String_CodeUnits.singleton($13));
  };
  exports["singleton"] = singleton;
})(PS);
(function($PS) {
  // Generated by purs version 0.13.8
  "use strict";
  $PS["Data.String.NonEmpty.Internal"] = $PS["Data.String.NonEmpty.Internal"] || {};
  var exports = $PS["Data.String.NonEmpty.Internal"];
  var Data_Foldable = $PS["Data.Foldable"];
  var Data_Monoid = $PS["Data.Monoid"];
  var Data_Semigroup = $PS["Data.Semigroup"];
  var semigroupNonEmptyString = Data_Semigroup.semigroupString;
  var joinWith = function (dictFoldable) {
      return function (splice) {
          var $48 = Data_Foldable.intercalate(dictFoldable)(Data_Monoid.monoidString)(splice);
          return function ($49) {
              return $48($49);
          };
      };
  };
  exports["joinWith"] = joinWith;
  exports["semigroupNonEmptyString"] = semigroupNonEmptyString;
})(PS);
(function($PS) {
  // Generated by purs version 0.13.8
  "use strict";
  $PS["Data.String.Pattern"] = $PS["Data.String.Pattern"] || {};
  var exports = $PS["Data.String.Pattern"];
  var Data_Newtype = $PS["Data.Newtype"];
  var Pattern = function (x) {
      return x;
  };              
  var newtypePattern = new Data_Newtype.Newtype(function (n) {
      return n;
  }, Pattern);
  exports["newtypePattern"] = newtypePattern;
})(PS);
(function($PS) {
  // Generated by purs version 0.13.8
  "use strict";
  $PS["Data.Traversable"] = $PS["Data.Traversable"] || {};
  var exports = $PS["Data.Traversable"];
  var Control_Applicative = $PS["Control.Applicative"];
  var Data_Foldable = $PS["Data.Foldable"];
  var Data_Functor = $PS["Data.Functor"];
  var Data_Maybe = $PS["Data.Maybe"];                                                          
  var Traversable = function (Foldable1, Functor0, sequence, traverse) {
      this.Foldable1 = Foldable1;
      this.Functor0 = Functor0;
      this.sequence = sequence;
      this.traverse = traverse;
  };
  var traverse = function (dict) {
      return dict.traverse;
  }; 
  var traversableMaybe = new Traversable(function () {
      return Data_Foldable.foldableMaybe;
  }, function () {
      return Data_Maybe.functorMaybe;
  }, function (dictApplicative) {
      return function (v) {
          if (v instanceof Data_Maybe.Nothing) {
              return Control_Applicative.pure(dictApplicative)(Data_Maybe.Nothing.value);
          };
          if (v instanceof Data_Maybe.Just) {
              return Data_Functor.map((dictApplicative.Apply0()).Functor0())(Data_Maybe.Just.create)(v.value0);
          };
          throw new Error("Failed pattern match at Data.Traversable (line 86, column 1 - line 90, column 33): " + [ v.constructor.name ]);
      };
  }, function (dictApplicative) {
      return function (v) {
          return function (v1) {
              if (v1 instanceof Data_Maybe.Nothing) {
                  return Control_Applicative.pure(dictApplicative)(Data_Maybe.Nothing.value);
              };
              if (v1 instanceof Data_Maybe.Just) {
                  return Data_Functor.map((dictApplicative.Apply0()).Functor0())(Data_Maybe.Just.create)(v(v1.value0));
              };
              throw new Error("Failed pattern match at Data.Traversable (line 86, column 1 - line 90, column 33): " + [ v.constructor.name, v1.constructor.name ]);
          };
      };
  });
  exports["traverse"] = traverse;
  exports["traversableMaybe"] = traversableMaybe;
})(PS);
(function($PS) {
  // Generated by purs version 0.13.8
  "use strict";
  $PS["Data.Void"] = $PS["Data.Void"] || {};
  var exports = $PS["Data.Void"];
  var absurd = function (a) {
      var spin = function ($copy_v) {
          var $tco_result;
          function $tco_loop(v) {
              $copy_v = v;
              return;
          };
          while (!false) {
              $tco_result = $tco_loop($copy_v);
          };
          return $tco_result;
      };
      return spin(a);
  };
  exports["absurd"] = absurd;
})(PS);
(function(exports) {
  "use strict";

  exports.error = function (msg) {
    return new Error(msg);
  };

  exports.message = function (e) {
    return e.message;
  };

  exports.throwException = function (e) {
    return function () {
      throw e;
    };
  };

  exports.catchException = function (c) {
    return function (t) {
      return function () {
        try {
          return t();
        } catch (e) {
          if (e instanceof Error || Object.prototype.toString.call(e) === "[object Error]") {
            return c(e)();
          } else {
            return c(new Error(e.toString()))();
          }
        }
      };
    };
  };
})(PS["Effect.Exception"] = PS["Effect.Exception"] || {});
(function($PS) {
  // Generated by purs version 0.13.8
  "use strict";
  $PS["Effect.Exception"] = $PS["Effect.Exception"] || {};
  var exports = $PS["Effect.Exception"];
  var $foreign = $PS["Effect.Exception"];
  var $$throw = function ($2) {
      return $foreign.throwException($foreign.error($2));
  };
  exports["throw"] = $$throw;
  exports["error"] = $foreign.error;
  exports["message"] = $foreign.message;
  exports["throwException"] = $foreign.throwException;
  exports["catchException"] = $foreign.catchException;
})(PS);
(function(exports) {
  /* globals exports, JSON */
  "use strict";                       
  exports.unsafeDecodeURIComponent = decodeURIComponent;
  exports.unsafeEncodeURIComponent = encodeURIComponent;
})(PS["Global.Unsafe"] = PS["Global.Unsafe"] || {});
(function($PS) {
  // Generated by purs version 0.13.8
  "use strict";
  $PS["Global.Unsafe"] = $PS["Global.Unsafe"] || {};
  var exports = $PS["Global.Unsafe"];
  var $foreign = $PS["Global.Unsafe"];
  exports["unsafeDecodeURIComponent"] = $foreign.unsafeDecodeURIComponent;
  exports["unsafeEncodeURIComponent"] = $foreign.unsafeEncodeURIComponent;
})(PS);
(function($PS) {
  // Generated by purs version 0.13.8
  "use strict";
  $PS["LK"] = $PS["LK"] || {};
  var exports = $PS["LK"];
  var Control_Alt = $PS["Control.Alt"];
  var Control_Apply = $PS["Control.Apply"];
  var Control_Lazy = $PS["Control.Lazy"];
  var Data_Array = $PS["Data.Array"];
  var Data_Boolean = $PS["Data.Boolean"];
  var Data_Eq = $PS["Data.Eq"];
  var Data_Function = $PS["Data.Function"];
  var Data_Functor = $PS["Data.Functor"];
  var Data_Maybe = $PS["Data.Maybe"];
  var Data_Semigroup = $PS["Data.Semigroup"];
  var Derivation = $PS["Derivation"];
  var Spork_Html_Core = $PS["Spork.Html.Core"];
  var Text_Parsing_StringParser = $PS["Text.Parsing.StringParser"];
  var Text_Parsing_StringParser_CodePoints = $PS["Text.Parsing.StringParser.CodePoints"];
  var Text_Parsing_StringParser_Expr = $PS["Text.Parsing.StringParser.Expr"];                
  var Atom = (function () {
      function Atom(value0) {
          this.value0 = value0;
      };
      Atom.create = function (value0) {
          return new Atom(value0);
      };
      return Atom;
  })();
  var Impl = (function () {
      function Impl(value0, value1) {
          this.value0 = value0;
          this.value1 = value1;
      };
      Impl.create = function (value0) {
          return function (value1) {
              return new Impl(value0, value1);
          };
      };
      return Impl;
  })();
  var Conj = (function () {
      function Conj(value0, value1) {
          this.value0 = value0;
          this.value1 = value1;
      };
      Conj.create = function (value0) {
          return function (value1) {
              return new Conj(value0, value1);
          };
      };
      return Conj;
  })();
  var Disj = (function () {
      function Disj(value0, value1) {
          this.value0 = value0;
          this.value1 = value1;
      };
      Disj.create = function (value0) {
          return function (value1) {
              return new Disj(value0, value1);
          };
      };
      return Disj;
  })();
  var Neg = (function () {
      function Neg(value0) {
          this.value0 = value0;
      };
      Neg.create = function (value0) {
          return new Neg(value0);
      };
      return Neg;
  })();
  var table = (function () {
      var spaced = function (op) {
          return Text_Parsing_StringParser["try"](Control_Apply.applyFirst(Text_Parsing_StringParser.applyParser)(Control_Apply.applySecond(Text_Parsing_StringParser.applyParser)(Text_Parsing_StringParser_CodePoints.skipSpaces)(Text_Parsing_StringParser_CodePoints.string(op)))(Text_Parsing_StringParser_CodePoints.skipSpaces));
      };
      return [ [ new Text_Parsing_StringParser_Expr.Prefix(Data_Functor.voidRight(Text_Parsing_StringParser.functorParser)(Neg.create)(spaced("~"))) ], [ new Text_Parsing_StringParser_Expr.Infix(Data_Functor.voidRight(Text_Parsing_StringParser.functorParser)(Conj.create)(spaced("/\\")), Text_Parsing_StringParser_Expr.AssocRight.value), new Text_Parsing_StringParser_Expr.Infix(Data_Functor.voidRight(Text_Parsing_StringParser.functorParser)(Disj.create)(spaced("\\/")), Text_Parsing_StringParser_Expr.AssocRight.value) ], [ new Text_Parsing_StringParser_Expr.Infix(Data_Functor.voidRight(Text_Parsing_StringParser.functorParser)(Impl.create)(spaced("->")), Text_Parsing_StringParser_Expr.AssocRight.value) ] ];
  })();
  var ppForm = function (prec) {
      return function (form) {
          var p = function (prec$prime) {
              return function (s) {
                  if (prec <= prec$prime) {
                      return s;
                  };
                  if (Data_Boolean.otherwise) {
                      return "(" + (s + ")");
                  };
                  throw new Error("Failed pattern match at LK (line 92, column 9 - line 93, column 48): " + [ prec$prime.constructor.name, s.constructor.name ]);
              };
          };
          if (form instanceof Atom) {
              return form.value0;
          };
          if (form instanceof Impl) {
              return p(0)(ppForm(1)(form.value0) + (" \u2192 " + ppForm(0)(form.value1)));
          };
          if (form instanceof Conj) {
              return p(2)(ppForm(3)(form.value0) + (" \u2227 " + ppForm(2)(form.value1)));
          };
          if (form instanceof Disj) {
              return p(1)(ppForm(2)(form.value0) + (" \u2228 " + ppForm(1)(form.value1)));
          };
          if (form instanceof Neg) {
              return p(3)("\xac" + ppForm(3)(form.value0));
          };
          throw new Error("Failed pattern match at LK (line 86, column 20 - line 91, column 35): " + [ form.constructor.name ]);
      };
  };
  var ppFormH = function (prec) {
      var $156 = ppForm(prec);
      return function ($157) {
          return Spork_Html_Core.text($156($157));
      };
  };
  var renderForm = function (seqix) {
      return function (v) {
          var pp = [ ppFormH(-1 | 0)(v.form) ];
          var p = function (mpart) {
              return function (b) {
                  return new Derivation.PickedForm({
                      click: {
                          button: b,
                          mpart: mpart
                      },
                      seqix: seqix,
                      inst: Data_Maybe.Nothing.value
                  });
              };
          };
          if (v.tag instanceof Derivation.SideFormR1) {
              return Derivation.clickable([ "side1" ])(p(Data_Maybe.Nothing.value))(pp);
          };
          if (v.tag instanceof Derivation.SideFormR2) {
              return Derivation.clickable([ "side2" ])(p(Data_Maybe.Nothing.value))(pp);
          };
          var clss = (function () {
              var $39 = Data_Eq.eq(Derivation.eqRenderTag)(v.tag)(Derivation.NewFormR.value);
              if ($39) {
                  return [ "new" ];
              };
              return [  ];
          })();
          if (seqix.side instanceof Derivation.LHS && v.form instanceof Conj) {
              return Derivation.clickable(clss)(p(Data_Maybe.Nothing.value))([ Derivation.clickable([  ])(p(new Data_Maybe.Just(Derivation.Part1.value)))([ ppFormH(3)(v.form.value0) ]), Spork_Html_Core.text(" \u2227 "), Derivation.clickable([  ])(p(new Data_Maybe.Just(Derivation.Part2.value)))([ ppFormH(2)(v.form.value1) ]) ]);
          };
          if (seqix.side instanceof Derivation.RHS && v.form instanceof Disj) {
              return Derivation.clickable(clss)(p(Data_Maybe.Nothing.value))([ Derivation.clickable([  ])(p(new Data_Maybe.Just(Derivation.Part1.value)))([ ppFormH(2)(v.form.value0) ]), Spork_Html_Core.text(" \u2228 "), Derivation.clickable([  ])(p(new Data_Maybe.Just(Derivation.Part2.value)))([ ppFormH(1)(v.form.value1) ]) ]);
          };
          return Derivation.clickable(clss)(p(Data_Maybe.Nothing.value))(pp);
      };
  };
  var pickRule = function (v) {
      return function (v1) {
          if (v.value0.button instanceof Derivation.RightButton && v1 instanceof Derivation.LeftNG) {
              return new Derivation.Obligations([ Derivation.unitaggedEntails(Data_Semigroup.append(Data_Semigroup.semigroupArray)(v1.value0.before)(Data_Semigroup.append(Data_Semigroup.semigroupArray)([ v1["value0"]["new"], v1["value0"]["new"] ])(v1.value0.after)))(v1.value0.cqts) ]);
          };
          if (v.value0.button instanceof Derivation.RightButton && v1 instanceof Derivation.RightNG) {
              return new Derivation.Obligations([ Derivation.unitaggedEntails(v1.value0.ants)(Data_Semigroup.append(Data_Semigroup.semigroupArray)(v1.value0.before)(Data_Semigroup.append(Data_Semigroup.semigroupArray)([ v1["value0"]["new"], v1["value0"]["new"] ])(v1.value0.after))) ]);
          };
          if (v.value0.button instanceof Derivation.MiddleButton && v1 instanceof Derivation.LeftNG) {
              return new Derivation.Obligations([ Derivation.unitaggedEntails(Data_Semigroup.append(Data_Semigroup.semigroupArray)(v1.value0.before)(v1.value0.after))(v1.value0.cqts) ]);
          };
          if (v.value0.button instanceof Derivation.MiddleButton && v1 instanceof Derivation.RightNG) {
              return new Derivation.Obligations([ Derivation.unitaggedEntails(v1.value0.ants)(Data_Semigroup.append(Data_Semigroup.semigroupArray)(v1.value0.before)(v1.value0.after)) ]);
          };
          var v2 = function (v3) {
              if (v.value0.button instanceof Derivation.LeftButton && v1 instanceof Derivation.LeftNG) {
                  if (v1["value0"]["new"] instanceof Conj) {
                      if (v.value0.mpart instanceof Data_Maybe.Nothing) {
                          return Derivation.NoRule.value;
                      };
                      if (v.value0.mpart instanceof Data_Maybe.Just) {
                          return new Derivation.Obligations([ Derivation.unitaggedEntails(Data_Semigroup.append(Data_Semigroup.semigroupArray)(v1.value0.before)(Data_Semigroup.append(Data_Semigroup.semigroupArray)([ Derivation.byPart(v1["value0"]["new"].value0)(v1["value0"]["new"].value1)(v.value0.mpart.value0) ])(v1.value0.after)))(v1.value0.cqts) ]);
                      };
                      throw new Error("Failed pattern match at LK (line 40, column 17 - line 42, column 78): " + [ v.value0.mpart.constructor.name ]);
                  };
                  if (v1["value0"]["new"] instanceof Disj) {
                      return new Derivation.Obligations([ Derivation.unitaggedEntails(Data_Semigroup.append(Data_Semigroup.semigroupArray)(v1.value0.before)(Data_Semigroup.append(Data_Semigroup.semigroupArray)([ v1["value0"]["new"].value0 ])(v1.value0.after)))(v1.value0.cqts), Derivation.unitaggedEntails(Data_Semigroup.append(Data_Semigroup.semigroupArray)(v1.value0.before)(Data_Semigroup.append(Data_Semigroup.semigroupArray)([ v1["value0"]["new"].value1 ])(v1.value0.after)))(v1.value0.cqts) ]);
                  };
                  if (v1["value0"]["new"] instanceof Neg) {
                      return new Derivation.Obligations([ Derivation.unitaggedEntails(Data_Semigroup.append(Data_Semigroup.semigroupArray)(v1.value0.before)(v1.value0.after))(Data_Array.snoc(v1.value0.cqts)(v1["value0"]["new"].value0)) ]);
                  };
                  return Derivation.WrongMode.value;
              };
              if (v.value0.button instanceof Derivation.LeftButton && v1 instanceof Derivation.RightNG) {
                  if (v1["value0"]["new"] instanceof Atom) {
                      return Derivation.NoRule.value;
                  };
                  if (v1["value0"]["new"] instanceof Impl) {
                      return new Derivation.Obligations([ Derivation.unitaggedEntails(Data_Array.snoc(v1.value0.ants)(v1["value0"]["new"].value0))(Data_Semigroup.append(Data_Semigroup.semigroupArray)(v1.value0.before)(Data_Semigroup.append(Data_Semigroup.semigroupArray)([ v1["value0"]["new"].value1 ])(v1.value0.after))) ]);
                  };
                  if (v1["value0"]["new"] instanceof Conj) {
                      return new Derivation.Obligations([ Derivation.unitaggedEntails(v1.value0.ants)(Data_Semigroup.append(Data_Semigroup.semigroupArray)(v1.value0.before)(Data_Semigroup.append(Data_Semigroup.semigroupArray)([ v1["value0"]["new"].value0 ])(v1.value0.after))), Derivation.unitaggedEntails(v1.value0.ants)(Data_Semigroup.append(Data_Semigroup.semigroupArray)(v1.value0.before)(Data_Semigroup.append(Data_Semigroup.semigroupArray)([ v1["value0"]["new"].value1 ])(v1.value0.after))) ]);
                  };
                  if (v1["value0"]["new"] instanceof Disj) {
                      if (v.value0.mpart instanceof Data_Maybe.Nothing) {
                          return Derivation.NoRule.value;
                      };
                      if (v.value0.mpart instanceof Data_Maybe.Just) {
                          return new Derivation.Obligations([ Derivation.unitaggedEntails(v1.value0.ants)(Data_Semigroup.append(Data_Semigroup.semigroupArray)(v1.value0.before)(Data_Semigroup.append(Data_Semigroup.semigroupArray)([ Derivation.byPart(v1["value0"]["new"].value0)(v1["value0"]["new"].value1)(v.value0.mpart.value0) ])(v1.value0.after))) ]);
                      };
                      throw new Error("Failed pattern match at LK (line 54, column 17 - line 56, column 78): " + [ v.value0.mpart.constructor.name ]);
                  };
                  if (v1["value0"]["new"] instanceof Neg) {
                      return new Derivation.Obligations([ Derivation.unitaggedEntails(Data_Array.snoc(v1.value0.ants)(v1["value0"]["new"].value0))(Data_Semigroup.append(Data_Semigroup.semigroupArray)(v1.value0.before)(v1.value0.after)) ]);
                  };
                  throw new Error("Failed pattern match at LK (line 49, column 3 - line 57, column 60): " + [ v1["value0"]["new"].constructor.name ]);
              };
              if (v.value0.button instanceof Derivation.LeftButton && (v1 instanceof Derivation.LeftG && v1["value0"]["new"] instanceof Impl)) {
                  return new Derivation.Obligations([ Derivation.unitaggedEntails(Data_Semigroup.append(Data_Semigroup.semigroupArray)(v1.value0.before.group1)(v1.value0.after.group1))(Data_Array.cons(v1["value0"]["new"].value0)(v1.value0.cqts.group1)), Derivation.unitaggedEntails(Data_Semigroup.append(Data_Semigroup.semigroupArray)(v1.value0.before.group2)(Data_Semigroup.append(Data_Semigroup.semigroupArray)([ v1["value0"]["new"].value1 ])(v1.value0.after.group2)))(v1.value0.cqts.group2) ]);
              };
              return Derivation.WrongMode.value;
          };
          if (v.value0.button instanceof Derivation.LeftButton) {
              var $133 = Derivation.enew(v1);
              if ($133 instanceof Atom) {
                  return Derivation.NoRule.value;
              };
              return v2(true);
          };
          return v2(true);
      };
  };
  var lkRender = new Derivation.RenderForm(renderForm);
  var formParser = function (v) {
      return Control_Apply.applyFirst(Text_Parsing_StringParser.applyParser)(Control_Apply.applySecond(Text_Parsing_StringParser.applyParser)(Text_Parsing_StringParser_CodePoints.skipSpaces)(Text_Parsing_StringParser_Expr.buildExprParser(table)(Control_Lazy.defer(Text_Parsing_StringParser.lazyParser)(expr))))(Text_Parsing_StringParser_CodePoints.skipSpaces);
  };
  var expr = function (v) {
      return Control_Alt.alt(Text_Parsing_StringParser.altParser)(Control_Apply.applyFirst(Text_Parsing_StringParser.applyParser)(Control_Apply.applySecond(Text_Parsing_StringParser.applyParser)(Text_Parsing_StringParser_CodePoints["char"]("("))(Control_Lazy.defer(Text_Parsing_StringParser.lazyParser)(formParser)))(Text_Parsing_StringParser_CodePoints["char"](")")))(Data_Functor.map(Text_Parsing_StringParser.functorParser)(Atom.create)(Text_Parsing_StringParser_CodePoints.regex("\\w+")));
  };
  var eqForm = new Data_Eq.Eq(function (x) {
      return function (y) {
          if (x instanceof Atom && y instanceof Atom) {
              return x.value0 === y.value0;
          };
          if (x instanceof Impl && y instanceof Impl) {
              return Data_Eq.eq(eqForm)(x.value0)(y.value0) && Data_Eq.eq(eqForm)(x.value1)(y.value1);
          };
          if (x instanceof Conj && y instanceof Conj) {
              return Data_Eq.eq(eqForm)(x.value0)(y.value0) && Data_Eq.eq(eqForm)(x.value1)(y.value1);
          };
          if (x instanceof Disj && y instanceof Disj) {
              return Data_Eq.eq(eqForm)(x.value0)(y.value0) && Data_Eq.eq(eqForm)(x.value1)(y.value1);
          };
          if (x instanceof Neg && y instanceof Neg) {
              return Data_Eq.eq(eqForm)(x.value0)(y.value0);
          };
          return false;
      };
  });
  var lkCalculus = new Derivation.Calculus(Data_Eq.eq(eqForm), formParser, Data_Function["const"](true), pickRule);
  exports["eqForm"] = eqForm;
  exports["lkCalculus"] = lkCalculus;
  exports["lkRender"] = lkRender;
})(PS);
(function($PS) {
  // Generated by purs version 0.13.8
  "use strict";
  $PS["LJ"] = $PS["LJ"] || {};
  var exports = $PS["LJ"];
  var Data_Array = $PS["Data.Array"];
  var Data_Boolean = $PS["Data.Boolean"];
  var Data_Eq = $PS["Data.Eq"];
  var Data_Foldable = $PS["Data.Foldable"];
  var Data_Functor = $PS["Data.Functor"];
  var Data_HeytingAlgebra = $PS["Data.HeytingAlgebra"];
  var Data_Unit = $PS["Data.Unit"];
  var Derivation = $PS["Derivation"];
  var LK = $PS["LK"];
  var Spork_Html_Core = $PS["Spork.Html.Core"];
  var Text_Parsing_StringParser = $PS["Text.Parsing.StringParser"];                
  var J = function (x) {
      return x;
  };
  var unInt = function (v) {
      return v;
  };
  var ljRender = new Derivation.RenderForm(function (seqix) {
      return function (v) {
          return Data_Functor.map(Spork_Html_Core.functorHtml)(Data_Functor.map(Derivation.functorNodeAction)(J))(Derivation.renderForm(LK.lkRender)(seqix)({
              form: v.form,
              tag: v.tag
          }));
      };
  });
  var eqForm = new Data_Eq.Eq(function (x) {
      return function (y) {
          return Data_Eq.eq(LK.eqForm)(x)(y);
      };
  });
  var ljCalculus = new Derivation.Calculus(Data_Eq.eq(eqForm), function (v) {
      return Data_Functor.map(Text_Parsing_StringParser.functorParser)(J)(Derivation.formParser(LK.lkCalculus)(Data_Unit.unit));
  }, function (v) {
      return Data_Array.length(v.value1) <= 1;
  }, function (rule) {
      return function (eseq) {
          return Data_Functor.map(Derivation.functorPickAction)(J)((function () {
              var v = Derivation.pickRule(LK.lkCalculus)(Data_Functor.map(Derivation.functorRuleChoice)(unInt)(rule))(Data_Functor.map(Derivation.functorExplodedSequent)(unInt)(eseq));
              if (v instanceof Derivation.Obligations) {
                  if (Data_Foldable.all(Data_Foldable.foldableArray)(Data_HeytingAlgebra.heytingAlgebraBoolean)(function (v1) {
                      return Data_Array.length(v1.value1) <= 1;
                  })(v.value0)) {
                      return v;
                  };
                  if (Data_Boolean.otherwise) {
                      return Derivation.NoRule.value;
                  };
              };
              return v;
          })());
      };
  });
  exports["ljCalculus"] = ljCalculus;
  exports["ljRender"] = ljRender;
})(PS);
(function($PS) {
  // Generated by purs version 0.13.8
  "use strict";
  $PS["RCLL2"] = $PS["RCLL2"] || {};
  var exports = $PS["RCLL2"];
  var Control_Alt = $PS["Control.Alt"];
  var Control_Apply = $PS["Control.Apply"];
  var Control_Lazy = $PS["Control.Lazy"];
  var Data_Array = $PS["Data.Array"];
  var Data_Boolean = $PS["Data.Boolean"];
  var Data_Eq = $PS["Data.Eq"];
  var Data_Foldable = $PS["Data.Foldable"];
  var Data_Function = $PS["Data.Function"];
  var Data_Functor = $PS["Data.Functor"];
  var Data_HeytingAlgebra = $PS["Data.HeytingAlgebra"];
  var Data_Maybe = $PS["Data.Maybe"];
  var Data_Semigroup = $PS["Data.Semigroup"];
  var Derivation = $PS["Derivation"];
  var Spork_Html_Core = $PS["Spork.Html.Core"];
  var Spork_Html_Elements = $PS["Spork.Html.Elements"];
  var Spork_Html_Events = $PS["Spork.Html.Events"];
  var Spork_Html_Properties = $PS["Spork.Html.Properties"];
  var Text_Parsing_StringParser = $PS["Text.Parsing.StringParser"];
  var Text_Parsing_StringParser_CodePoints = $PS["Text.Parsing.StringParser.CodePoints"];
  var Text_Parsing_StringParser_Expr = $PS["Text.Parsing.StringParser.Expr"];
  var Web_UIEvent_KeyboardEvent = $PS["Web.UIEvent.KeyboardEvent"];                
  var Atom = (function () {
      function Atom(value0) {
          this.value0 = value0;
      };
      Atom.create = function (value0) {
          return new Atom(value0);
      };
      return Atom;
  })();
  var NegAtom = (function () {
      function NegAtom(value0) {
          this.value0 = value0;
      };
      NegAtom.create = function (value0) {
          return new NegAtom(value0);
      };
      return NegAtom;
  })();
  var Tens = (function () {
      function Tens(value0, value1) {
          this.value0 = value0;
          this.value1 = value1;
      };
      Tens.create = function (value0) {
          return function (value1) {
              return new Tens(value0, value1);
          };
      };
      return Tens;
  })();
  var Par = (function () {
      function Par(value0, value1) {
          this.value0 = value0;
          this.value1 = value1;
      };
      Par.create = function (value0) {
          return function (value1) {
              return new Par(value0, value1);
          };
      };
      return Par;
  })();
  var One = (function () {
      function One() {

      };
      One.value = new One();
      return One;
  })();
  var Bot = (function () {
      function Bot() {

      };
      Bot.value = new Bot();
      return Bot;
  })();
  var Plus = (function () {
      function Plus(value0, value1) {
          this.value0 = value0;
          this.value1 = value1;
      };
      Plus.create = function (value0) {
          return function (value1) {
              return new Plus(value0, value1);
          };
      };
      return Plus;
  })();
  var With = (function () {
      function With(value0, value1) {
          this.value0 = value0;
          this.value1 = value1;
      };
      With.create = function (value0) {
          return function (value1) {
              return new With(value0, value1);
          };
      };
      return With;
  })();
  var Zero = (function () {
      function Zero() {

      };
      Zero.value = new Zero();
      return Zero;
  })();
  var Top = (function () {
      function Top() {

      };
      Top.value = new Top();
      return Top;
  })();
  var Ofc = (function () {
      function Ofc(value0) {
          this.value0 = value0;
      };
      Ofc.create = function (value0) {
          return new Ofc(value0);
      };
      return Ofc;
  })();
  var Ynot = (function () {
      function Ynot(value0) {
          this.value0 = value0;
      };
      Ynot.create = function (value0) {
          return new Ynot(value0);
      };
      return Ynot;
  })();
  var Forall2 = (function () {
      function Forall2(value0, value1) {
          this.value0 = value0;
          this.value1 = value1;
      };
      Forall2.create = function (value0) {
          return function (value1) {
              return new Forall2(value0, value1);
          };
      };
      return Forall2;
  })();
  var Exists2 = (function () {
      function Exists2(value0, value1) {
          this.value0 = value0;
          this.value1 = value1;
      };
      Exists2.create = function (value0) {
          return function (value1) {
              return new Exists2(value0, value1);
          };
      };
      return Exists2;
  })();
  var ppForm = function (prec) {
      return function (form) {
          var p = function (prec$prime) {
              return function (s) {
                  if (prec <= prec$prime) {
                      return s;
                  };
                  if (Data_Boolean.otherwise) {
                      return "(" + (s + ")");
                  };
                  throw new Error("Failed pattern match at RCLL2 (line 229, column 9 - line 230, column 48): " + [ prec$prime.constructor.name, s.constructor.name ]);
              };
          };
          if (form instanceof Atom) {
              return form.value0;
          };
          if (form instanceof NegAtom) {
              return "\xac" + form.value0;
          };
          if (form instanceof Tens) {
              return p(3)(ppForm(4)(form.value0) + (" \u2297 " + ppForm(3)(form.value1)));
          };
          if (form instanceof Par) {
              return p(1)(ppForm(2)(form.value0) + (" \u214b " + ppForm(1)(form.value1)));
          };
          if (form instanceof One) {
              return "1";
          };
          if (form instanceof Bot) {
              return "\u22a5";
          };
          if (form instanceof Plus) {
              return p(0)(ppForm(1)(form.value0) + (" \u2295 " + ppForm(0)(form.value1)));
          };
          if (form instanceof With) {
              return p(2)(ppForm(3)(form.value0) + (" & " + ppForm(2)(form.value1)));
          };
          if (form instanceof Zero) {
              return "0";
          };
          if (form instanceof Top) {
              return "\u22a4";
          };
          if (form instanceof Ofc) {
              return p(4)("!" + ppForm(4)(form.value0));
          };
          if (form instanceof Ynot) {
              return p(4)("?" + ppForm(4)(form.value0));
          };
          if (form instanceof Forall2) {
              return p(-2 | 0)("\u2200" + (form.value0 + ("." + ppForm(-2 | 0)(form.value1))));
          };
          if (form instanceof Exists2) {
              return p(-2 | 0)("\u2203" + (form.value0 + ("." + ppForm(-2 | 0)(form.value1))));
          };
          throw new Error("Failed pattern match at RCLL2 (line 214, column 20 - line 228, column 59): " + [ form.constructor.name ]);
      };
  };
  var ppFormH = function (prec) {
      var $272 = ppForm(prec);
      return function ($273) {
          return Spork_Html_Core.text($272($273));
      };
  };
  var renderForm = function (seqix) {
      return function (v) {
          var pp = [ ppFormH(-3 | 0)(v.form) ];
          var p = function (mpart) {
              return function (b) {
                  return new Derivation.PickedForm({
                      click: {
                          button: b,
                          mpart: mpart
                      },
                      seqix: seqix,
                      inst: Data_Maybe.Nothing.value
                  });
              };
          };
          var key = function (ev) {
              var v1 = Web_UIEvent_KeyboardEvent.key(ev);
              if (v1 === "Enter") {
                  return new Data_Maybe.Just(Derivation.Submit.value);
              };
              if (v1 === "Escape") {
                  return new Data_Maybe.Just(new Derivation.ClickedTurnstile({
                      button: Derivation.RightButton.value,
                      mpart: Data_Maybe.Nothing.value
                  }));
              };
              return Data_Maybe.Nothing.value;
          };
          var clickedQuantifier = function (b) {
              if (b instanceof Derivation.LeftButton) {
                  return new Derivation.NeedInstantiation(seqix);
              };
              return p(Data_Maybe.Nothing.value)(b);
          };
          if (v.tag instanceof Derivation.SideFormR1) {
              return Derivation.clickable([ "side1" ])(p(Data_Maybe.Nothing.value))(pp);
          };
          if (v.tag instanceof Derivation.SideFormR2) {
              return Derivation.clickable([ "side2" ])(p(Data_Maybe.Nothing.value))(pp);
          };
          if (v.tag instanceof Derivation.HasInput) {
              return Spork_Html_Elements.span([  ])([ Spork_Html_Elements.span([ Spork_Html_Properties.classes([ "dropdown" ]) ])([ Spork_Html_Elements.input([ Spork_Html_Properties.value(v.tag.value0), Spork_Html_Events.onValueInput(Spork_Html_Events.always(Derivation.Input.create)), Spork_Html_Events.onKeyDown(key) ]), Spork_Html_Elements.button([ Spork_Html_Events.onClick(Spork_Html_Events.always(Data_Function["const"](Derivation.Submit.value))) ])([ Spork_Html_Core.text("Instantiate") ]) ]), renderForm(seqix)({
                  form: v.form,
                  tag: Derivation.NewFormR.value
              }) ]);
          };
          var clss = (function () {
              var $68 = Data_Eq.eq(Derivation.eqRenderTag)(v.tag)(Derivation.NewFormR.value);
              if ($68) {
                  return [ "new" ];
              };
              return [  ];
          })();
          if (v.form instanceof Plus) {
              return Derivation.clickable(clss)(p(Data_Maybe.Nothing.value))([ Derivation.clickable([  ])(p(new Data_Maybe.Just(Derivation.Part1.value)))([ ppFormH(1)(v.form.value0) ]), Spork_Html_Core.text(" \u2295 "), Derivation.clickable([  ])(p(new Data_Maybe.Just(Derivation.Part2.value)))([ ppFormH(0)(v.form.value1) ]) ]);
          };
          if (v.form instanceof Ynot) {
              return Derivation.clickable(clss)(p(Data_Maybe.Nothing.value))([ Derivation.clickable([  ])(p(new Data_Maybe.Just(Derivation.Part1.value)))([ Spork_Html_Core.text("?") ]), Derivation.clickable([  ])(p(new Data_Maybe.Just(Derivation.Part2.value)))([ ppFormH(4)(v.form.value0) ]) ]);
          };
          if (v.form instanceof Exists2) {
              return Derivation.clickable(clss)(clickedQuantifier)(pp);
          };
          return Derivation.clickable(clss)(p(Data_Maybe.Nothing.value))(pp);
      };
  };
  var neg = function (form) {
      if (form instanceof Atom) {
          return new NegAtom(form.value0);
      };
      if (form instanceof NegAtom) {
          return new Atom(form.value0);
      };
      if (form instanceof Tens) {
          return new Par(neg(form.value0), neg(form.value1));
      };
      if (form instanceof Par) {
          return new Tens(neg(form.value0), neg(form.value1));
      };
      if (form instanceof One) {
          return Bot.value;
      };
      if (form instanceof Bot) {
          return One.value;
      };
      if (form instanceof Plus) {
          return new With(neg(form.value0), neg(form.value1));
      };
      if (form instanceof With) {
          return new Plus(neg(form.value0), neg(form.value1));
      };
      if (form instanceof Zero) {
          return Top.value;
      };
      if (form instanceof Top) {
          return Zero.value;
      };
      if (form instanceof Ofc) {
          return new Ynot(neg(form.value0));
      };
      if (form instanceof Ynot) {
          return new Ofc(neg(form.value0));
      };
      if (form instanceof Forall2) {
          return new Exists2(form.value0, neg(form.value1));
      };
      if (form instanceof Exists2) {
          return new Forall2(form.value0, neg(form.value1));
      };
      throw new Error("Failed pattern match at RCLL2 (line 28, column 12 - line 42, column 35): " + [ form.constructor.name ]);
  };
  var isYnot = function (v) {
      if (v instanceof Ynot) {
          return true;
      };
      return false;
  };
  var impl = function (l) {
      return function (r) {
          return new Par(neg(l), r);
      };
  };
  var table = (function () {
      var spaced = function (op) {
          return Text_Parsing_StringParser["try"](Control_Apply.applyFirst(Text_Parsing_StringParser.applyParser)(Control_Apply.applySecond(Text_Parsing_StringParser.applyParser)(Text_Parsing_StringParser_CodePoints.skipSpaces)(Text_Parsing_StringParser_CodePoints.string(op)))(Text_Parsing_StringParser_CodePoints.skipSpaces));
      };
      return [ [ new Text_Parsing_StringParser_Expr.Prefix(Data_Functor.voidRight(Text_Parsing_StringParser.functorParser)(neg)(spaced("~"))), new Text_Parsing_StringParser_Expr.Prefix(Data_Functor.voidRight(Text_Parsing_StringParser.functorParser)(Ofc.create)(spaced("!"))), new Text_Parsing_StringParser_Expr.Prefix(Data_Functor.voidRight(Text_Parsing_StringParser.functorParser)(Ynot.create)(spaced("?"))) ], [ new Text_Parsing_StringParser_Expr.Infix(Data_Functor.voidRight(Text_Parsing_StringParser.functorParser)(Tens.create)(spaced("*")), Text_Parsing_StringParser_Expr.AssocRight.value), new Text_Parsing_StringParser_Expr.Infix(Data_Functor.voidRight(Text_Parsing_StringParser.functorParser)(Par.create)(spaced("@")), Text_Parsing_StringParser_Expr.AssocRight.value) ], [ new Text_Parsing_StringParser_Expr.Infix(Data_Functor.voidRight(Text_Parsing_StringParser.functorParser)(Plus.create)(spaced("+")), Text_Parsing_StringParser_Expr.AssocRight.value), new Text_Parsing_StringParser_Expr.Infix(Data_Functor.voidRight(Text_Parsing_StringParser.functorParser)(With.create)(spaced("&")), Text_Parsing_StringParser_Expr.AssocRight.value) ], [ new Text_Parsing_StringParser_Expr.Infix(Data_Functor.voidRight(Text_Parsing_StringParser.functorParser)(impl)(spaced("-o")), Text_Parsing_StringParser_Expr.AssocRight.value) ], [ new Text_Parsing_StringParser_Expr.Prefix(Control_Apply.applyFirst(Text_Parsing_StringParser.applyParser)(Control_Apply.apply(Text_Parsing_StringParser.applyParser)(Data_Functor.voidRight(Text_Parsing_StringParser.functorParser)(Forall2.create)(spaced("forall")))(Text_Parsing_StringParser_CodePoints.regex("\\w[\\w']*")))(spaced(","))), new Text_Parsing_StringParser_Expr.Prefix(Control_Apply.applyFirst(Text_Parsing_StringParser.applyParser)(Control_Apply.apply(Text_Parsing_StringParser.applyParser)(Data_Functor.voidRight(Text_Parsing_StringParser.functorParser)(Exists2.create)(spaced("exists")))(Text_Parsing_StringParser_CodePoints.regex("\\w[\\w']*")))(spaced(","))) ] ];
  })();
  var hasAnts = function (v) {
      if (v instanceof Derivation.LeftNG) {
          return true;
      };
      if (v instanceof Derivation.RightNG) {
          return !Data_Array["null"](v.value0.ants);
      };
      if (v instanceof Derivation.LeftG) {
          return true;
      };
      if (v instanceof Derivation.RightG) {
          return !Data_Array["null"](v.value0.ants.group1) || !Data_Array["null"](v.value0.ants.group2);
      };
      throw new Error("Failed pattern match at RCLL2 (line 123, column 11 - line 127, column 69): " + [ v.constructor.name ]);
  };
  var freeInForm = function (a) {
      return function (form) {
          if (form instanceof Atom) {
              return a === form.value0;
          };
          if (form instanceof NegAtom) {
              return a === form.value0;
          };
          if (form instanceof Tens) {
              return freeInForm(a)(form.value0) || freeInForm(a)(form.value1);
          };
          if (form instanceof Par) {
              return freeInForm(a)(form.value0) || freeInForm(a)(form.value1);
          };
          if (form instanceof One) {
              return false;
          };
          if (form instanceof Bot) {
              return false;
          };
          if (form instanceof Plus) {
              return freeInForm(a)(form.value0) || freeInForm(a)(form.value1);
          };
          if (form instanceof With) {
              return freeInForm(a)(form.value0) || freeInForm(a)(form.value1);
          };
          if (form instanceof Zero) {
              return false;
          };
          if (form instanceof Top) {
              return false;
          };
          if (form instanceof Ofc) {
              return freeInForm(a)(form.value0);
          };
          if (form instanceof Ynot) {
              return freeInForm(a)(form.value0);
          };
          if (form instanceof Forall2) {
              var $116 = a === form.value0;
              if ($116) {
                  return false;
              };
              return freeInForm(a)(form.value1);
          };
          if (form instanceof Exists2) {
              var $119 = a === form.value0;
              if ($119) {
                  return false;
              };
              return freeInForm(a)(form.value1);
          };
          throw new Error("Failed pattern match at RCLL2 (line 51, column 21 - line 65, column 60): " + [ form.constructor.name ]);
      };
  };
  var freshen = function ($copy_a) {
      return function ($copy_from) {
          var $tco_var_a = $copy_a;
          var $tco_done = false;
          var $tco_result;
          function $tco_loop(a, from) {
              if (Data_Foldable.all(Data_Foldable.foldableArray)(Data_HeytingAlgebra.heytingAlgebraBoolean)((function () {
                  var $274 = Data_HeytingAlgebra.not(Data_HeytingAlgebra.heytingAlgebraBoolean);
                  var $275 = freeInForm(a);
                  return function ($276) {
                      return $274($275($276));
                  };
              })())(from)) {
                  $tco_done = true;
                  return a;
              };
              if (Data_Boolean.otherwise) {
                  $tco_var_a = a + "'";
                  $copy_from = from;
                  return;
              };
              throw new Error("Failed pattern match at RCLL2 (line 67, column 1 - line 67, column 42): " + [ a.constructor.name, from.constructor.name ]);
          };
          while (!$tco_done) {
              $tco_result = $tco_loop($tco_var_a, $copy_from);
          };
          return $tco_result;
      };
  };
  var subst = function (arg) {
      return function (a) {
          return function (into) {
              if (into instanceof Atom) {
                  var $125 = into.value0 === a;
                  if ($125) {
                      return arg;
                  };
                  return into;
              };
              if (into instanceof NegAtom) {
                  var $127 = into.value0 === a;
                  if ($127) {
                      return neg(arg);
                  };
                  return into;
              };
              if (into instanceof Tens) {
                  return new Tens(subst(arg)(a)(into.value0), subst(arg)(a)(into.value1));
              };
              if (into instanceof Par) {
                  return new Par(subst(arg)(a)(into.value0), subst(arg)(a)(into.value1));
              };
              if (into instanceof One) {
                  return One.value;
              };
              if (into instanceof Bot) {
                  return Bot.value;
              };
              if (into instanceof Plus) {
                  return new Plus(subst(arg)(a)(into.value0), subst(arg)(a)(into.value1));
              };
              if (into instanceof With) {
                  return new With(subst(arg)(a)(into.value0), subst(arg)(a)(into.value1));
              };
              if (into instanceof Zero) {
                  return Zero.value;
              };
              if (into instanceof Top) {
                  return Top.value;
              };
              if (into instanceof Ofc) {
                  return new Ofc(subst(arg)(a)(into.value0));
              };
              if (into instanceof Ynot) {
                  return new Ynot(subst(arg)(a)(into.value0));
              };
              if (into instanceof Forall2) {
                  if (into.value0 === a) {
                      return into;
                  };
                  if (Data_Boolean.otherwise) {
                      var a$prime$prime = freshen(into.value0)([ arg ]);
                      return new Forall2(a$prime$prime, subst(arg)(a)(subst(new Atom(a$prime$prime))(into.value0)(into.value1)));
                  };
              };
              if (into instanceof Exists2) {
                  if (into.value0 === a) {
                      return into;
                  };
                  if (Data_Boolean.otherwise) {
                      var a$prime$prime = freshen(into.value0)([ arg ]);
                      return new Exists2(a$prime$prime, subst(arg)(a)(subst(new Atom(a$prime$prime))(into.value0)(into.value1)));
                  };
              };
              throw new Error("Failed pattern match at RCLL2 (line 72, column 20 - line 92, column 70): " + [ into.constructor.name ]);
          };
      };
  };
  var formParser = function (v) {
      return Control_Apply.applyFirst(Text_Parsing_StringParser.applyParser)(Control_Apply.applySecond(Text_Parsing_StringParser.applyParser)(Text_Parsing_StringParser_CodePoints.skipSpaces)(Text_Parsing_StringParser_Expr.buildExprParser(table)(Control_Lazy.defer(Text_Parsing_StringParser.lazyParser)(expr))))(Text_Parsing_StringParser_CodePoints.skipSpaces);
  };
  var expr = function (v) {
      return Control_Alt.alt(Text_Parsing_StringParser.altParser)(Control_Alt.alt(Text_Parsing_StringParser.altParser)(Control_Alt.alt(Text_Parsing_StringParser.altParser)(Control_Alt.alt(Text_Parsing_StringParser.altParser)(Control_Alt.alt(Text_Parsing_StringParser.altParser)(Control_Apply.applyFirst(Text_Parsing_StringParser.applyParser)(Control_Apply.applySecond(Text_Parsing_StringParser.applyParser)(Text_Parsing_StringParser_CodePoints["char"]("("))(Control_Lazy.defer(Text_Parsing_StringParser.lazyParser)(formParser)))(Text_Parsing_StringParser_CodePoints["char"](")")))(Data_Functor.voidRight(Text_Parsing_StringParser.functorParser)(One.value)(Text_Parsing_StringParser_CodePoints.string("1"))))(Data_Functor.voidRight(Text_Parsing_StringParser.functorParser)(Bot.value)(Text_Parsing_StringParser_CodePoints.string("F"))))(Data_Functor.voidRight(Text_Parsing_StringParser.functorParser)(Zero.value)(Text_Parsing_StringParser_CodePoints.string("0"))))(Data_Functor.voidRight(Text_Parsing_StringParser.functorParser)(Top.value)(Text_Parsing_StringParser_CodePoints.string("T"))))(Data_Functor.map(Text_Parsing_StringParser.functorParser)(Atom.create)(Text_Parsing_StringParser_CodePoints.regex("\\w[\\w']*")));
  };
  var eqForm = new Data_Eq.Eq(function (x) {
      return function (y) {
          if (x instanceof Atom && y instanceof Atom) {
              return x.value0 === y.value0;
          };
          if (x instanceof NegAtom && y instanceof NegAtom) {
              return x.value0 === y.value0;
          };
          if (x instanceof Tens && y instanceof Tens) {
              return Data_Eq.eq(eqForm)(x.value0)(y.value0) && Data_Eq.eq(eqForm)(x.value1)(y.value1);
          };
          if (x instanceof Par && y instanceof Par) {
              return Data_Eq.eq(eqForm)(x.value0)(y.value0) && Data_Eq.eq(eqForm)(x.value1)(y.value1);
          };
          if (x instanceof One && y instanceof One) {
              return true;
          };
          if (x instanceof Bot && y instanceof Bot) {
              return true;
          };
          if (x instanceof Plus && y instanceof Plus) {
              return Data_Eq.eq(eqForm)(x.value0)(y.value0) && Data_Eq.eq(eqForm)(x.value1)(y.value1);
          };
          if (x instanceof With && y instanceof With) {
              return Data_Eq.eq(eqForm)(x.value0)(y.value0) && Data_Eq.eq(eqForm)(x.value1)(y.value1);
          };
          if (x instanceof Zero && y instanceof Zero) {
              return true;
          };
          if (x instanceof Top && y instanceof Top) {
              return true;
          };
          if (x instanceof Ofc && y instanceof Ofc) {
              return Data_Eq.eq(eqForm)(x.value0)(y.value0);
          };
          if (x instanceof Ynot && y instanceof Ynot) {
              return Data_Eq.eq(eqForm)(x.value0)(y.value0);
          };
          if (x instanceof Forall2 && y instanceof Forall2) {
              return x.value0 === y.value0 && Data_Eq.eq(eqForm)(x.value1)(y.value1);
          };
          if (x instanceof Exists2 && y instanceof Exists2) {
              return x.value0 === y.value0 && Data_Eq.eq(eqForm)(x.value1)(y.value1);
          };
          return false;
      };
  });
  var pickRule = function (v) {
      return function (v1) {
          if (hasAnts(v1)) {
              return Derivation.NoRule.value;
          };
          if (v.value0.button instanceof Derivation.MiddleButton) {
              return Derivation.NoRule.value;
          };
          if (v.value0.button instanceof Derivation.RightButton) {
              if (v1 instanceof Derivation.RightNG && v1["value0"]["new"] instanceof Ynot) {
                  return new Derivation.Obligations([ Derivation.unitaggedEntails([  ])(Data_Semigroup.append(Data_Semigroup.semigroupArray)(v1.value0.before)(Data_Semigroup.append(Data_Semigroup.semigroupArray)([ v1["value0"]["new"], v1["value0"]["new"] ])(v1.value0.after))) ]);
              };
              if (v1 instanceof Derivation.RightG && v1["value0"]["new"] instanceof Ynot) {
                  return Derivation.WrongMode.value;
              };
              return Derivation.NoRule.value;
          };
          if (v.value0.button instanceof Derivation.LeftButton && v1 instanceof Derivation.RightNG) {
              if (v1["value0"]["new"] instanceof Atom) {
                  if (Data_Eq.eq(Data_Eq.eqArray(eqForm))(Data_Semigroup.append(Data_Semigroup.semigroupArray)(v1.value0.before)(v1.value0.after))([ new NegAtom(v1["value0"]["new"].value0) ])) {
                      return new Derivation.Obligations([  ]);
                  };
                  if (Data_Boolean.otherwise) {
                      return Derivation.NoRule.value;
                  };
              };
              if (v1["value0"]["new"] instanceof NegAtom) {
                  return Derivation.NoRule.value;
              };
              if (v1["value0"]["new"] instanceof Tens) {
                  return Derivation.WrongMode.value;
              };
              if (v1["value0"]["new"] instanceof Par) {
                  return new Derivation.Obligations([ Derivation.unitaggedEntails([  ])(Data_Semigroup.append(Data_Semigroup.semigroupArray)(v1.value0.before)(Data_Semigroup.append(Data_Semigroup.semigroupArray)([ v1["value0"]["new"].value0, v1["value0"]["new"].value1 ])(v1.value0.after))) ]);
              };
              if (v1["value0"]["new"] instanceof One) {
                  if (Data_Eq.eq(Data_Eq.eqArray(Data_Eq.eqArray(eqForm)))([ v1.value0.before, v1.value0.after ])([ [  ], [  ] ])) {
                      return new Derivation.Obligations([  ]);
                  };
                  if (Data_Boolean.otherwise) {
                      return Derivation.NoRule.value;
                  };
              };
              if (v1["value0"]["new"] instanceof Bot) {
                  return new Derivation.Obligations([ Derivation.unitaggedEntails([  ])(Data_Semigroup.append(Data_Semigroup.semigroupArray)(v1.value0.before)(v1.value0.after)) ]);
              };
              if (v1["value0"]["new"] instanceof Plus) {
                  if (v.value0.mpart instanceof Data_Maybe.Nothing) {
                      return Derivation.NoRule.value;
                  };
                  if (v.value0.mpart instanceof Data_Maybe.Just) {
                      return new Derivation.Obligations([ Derivation.unitaggedEntails([  ])(Data_Semigroup.append(Data_Semigroup.semigroupArray)(v1.value0.before)(Data_Semigroup.append(Data_Semigroup.semigroupArray)([ Derivation.byPart(v1["value0"]["new"].value0)(v1["value0"]["new"].value1)(v.value0.mpart.value0) ])(v1.value0.after))) ]);
                  };
                  throw new Error("Failed pattern match at RCLL2 (line 150, column 17 - line 152, column 76): " + [ v.value0.mpart.constructor.name ]);
              };
              if (v1["value0"]["new"] instanceof With) {
                  return new Derivation.Obligations([ Derivation.unitaggedEntails([  ])(Data_Semigroup.append(Data_Semigroup.semigroupArray)(v1.value0.before)(Data_Semigroup.append(Data_Semigroup.semigroupArray)([ v1["value0"]["new"].value0 ])(v1.value0.after))), Derivation.unitaggedEntails([  ])(Data_Semigroup.append(Data_Semigroup.semigroupArray)(v1.value0.before)(Data_Semigroup.append(Data_Semigroup.semigroupArray)([ v1["value0"]["new"].value1 ])(v1.value0.after))) ]);
              };
              if (v1["value0"]["new"] instanceof Zero) {
                  return Derivation.NoRule.value;
              };
              if (v1["value0"]["new"] instanceof Top) {
                  return new Derivation.Obligations([  ]);
              };
              if (v1["value0"]["new"] instanceof Ofc) {
                  if (Data_Foldable.all(Data_Foldable.foldableArray)(Data_HeytingAlgebra.heytingAlgebraBoolean)(isYnot)(Data_Semigroup.append(Data_Semigroup.semigroupArray)(v1.value0.before)(v1.value0.after))) {
                      return new Derivation.Obligations([ Derivation.unitaggedEntails([  ])(Data_Semigroup.append(Data_Semigroup.semigroupArray)(v1.value0.before)(Data_Semigroup.append(Data_Semigroup.semigroupArray)([ v1["value0"]["new"].value0 ])(v1.value0.after))) ]);
                  };
                  if (Data_Boolean.otherwise) {
                      return Derivation.NoRule.value;
                  };
              };
              if (v1["value0"]["new"] instanceof Ynot) {
                  if (v.value0.mpart instanceof Data_Maybe.Nothing) {
                      return Derivation.NoRule.value;
                  };
                  if (v.value0.mpart instanceof Data_Maybe.Just && v.value0.mpart.value0 instanceof Derivation.Part1) {
                      return new Derivation.Obligations([ Derivation.unitaggedEntails([  ])(Data_Semigroup.append(Data_Semigroup.semigroupArray)(v1.value0.before)(v1.value0.after)) ]);
                  };
                  if (v.value0.mpart instanceof Data_Maybe.Just && v.value0.mpart.value0 instanceof Derivation.Part2) {
                      return new Derivation.Obligations([ Derivation.unitaggedEntails([  ])(Data_Semigroup.append(Data_Semigroup.semigroupArray)(v1.value0.before)(Data_Semigroup.append(Data_Semigroup.semigroupArray)([ v1["value0"]["new"].value0 ])(v1.value0.after))) ]);
                  };
                  throw new Error("Failed pattern match at RCLL2 (line 160, column 15 - line 163, column 63): " + [ v.value0.mpart.constructor.name ]);
              };
              if (v1["value0"]["new"] instanceof Forall2) {
                  var fresh = new Atom(freshen(v1["value0"]["new"].value0)(Data_Semigroup.append(Data_Semigroup.semigroupArray)(v1.value0.before)(Data_Semigroup.append(Data_Semigroup.semigroupArray)([ v1["value0"]["new"] ])(v1.value0.after))));
                  return new Derivation.Obligations([ Derivation.unitaggedEntails([  ])(Data_Semigroup.append(Data_Semigroup.semigroupArray)(v1.value0.before)(Data_Semigroup.append(Data_Semigroup.semigroupArray)([ subst(fresh)(v1["value0"]["new"].value0)(v1["value0"]["new"].value1) ])(v1.value0.after))) ]);
              };
              if (v1["value0"]["new"] instanceof Exists2) {
                  if (v.value1 instanceof Data_Maybe.Nothing) {
                      return Derivation.NoRule.value;
                  };
                  if (v.value1 instanceof Data_Maybe.Just) {
                      return new Derivation.Obligations([ Derivation.unitaggedEntails([  ])(Data_Semigroup.append(Data_Semigroup.semigroupArray)(v1.value0.before)(Data_Semigroup.append(Data_Semigroup.semigroupArray)([ subst(v.value1.value0)(v1["value0"]["new"].value0)(v1["value0"]["new"].value1) ])(v1.value0.after))) ]);
                  };
                  throw new Error("Failed pattern match at RCLL2 (line 167, column 20 - line 169, column 73): " + [ v.value1.constructor.name ]);
              };
              throw new Error("Failed pattern match at RCLL2 (line 141, column 3 - line 169, column 73): " + [ v1["value0"]["new"].constructor.name ]);
          };
          if (v.value0.button instanceof Derivation.LeftButton && (v1 instanceof Derivation.RightG && v1["value0"]["new"] instanceof Tens)) {
              return new Derivation.Obligations([ Derivation.unitaggedEntails([  ])(Data_Semigroup.append(Data_Semigroup.semigroupArray)(v1.value0.before.group1)(Data_Semigroup.append(Data_Semigroup.semigroupArray)([ v1["value0"]["new"].value0 ])(v1.value0.after.group1))), Derivation.unitaggedEntails([  ])(Data_Semigroup.append(Data_Semigroup.semigroupArray)(v1.value0.before.group2)(Data_Semigroup.append(Data_Semigroup.semigroupArray)([ v1["value0"]["new"].value1 ])(v1.value0.after.group2))) ]);
          };
          return Derivation.WrongMode.value;
      };
  };
  var cllRender = new Derivation.RenderForm(renderForm);
  var aeq = function (form1) {
      return function (form2) {
          if (form1 instanceof Atom && form2 instanceof Atom) {
              return form1.value0 === form2.value0;
          };
          if (form1 instanceof NegAtom && form2 instanceof NegAtom) {
              return form1.value0 === form2.value0;
          };
          if (form1 instanceof Tens && form2 instanceof Tens) {
              return aeq(form1.value0)(form2.value0) && aeq(form1.value1)(form2.value1);
          };
          if (form1 instanceof Par && form2 instanceof Par) {
              return aeq(form1.value0)(form2.value0) && aeq(form1.value1)(form2.value1);
          };
          if (form1 instanceof One && form2 instanceof One) {
              return true;
          };
          if (form1 instanceof Bot && form2 instanceof Bot) {
              return true;
          };
          if (form1 instanceof Plus && form2 instanceof Plus) {
              return aeq(form1.value0)(form2.value0) && aeq(form1.value1)(form2.value1);
          };
          if (form1 instanceof With && form2 instanceof With) {
              return aeq(form1.value0)(form2.value0) && aeq(form1.value1)(form2.value1);
          };
          if (form1 instanceof Zero && form2 instanceof Zero) {
              return true;
          };
          if (form1 instanceof Top && form2 instanceof Top) {
              return true;
          };
          if (form1 instanceof Ofc && form2 instanceof Ofc) {
              return aeq(form1.value0)(form2.value0);
          };
          if (form1 instanceof Ynot && form2 instanceof Ynot) {
              return aeq(form1.value0)(form2.value0);
          };
          if (form1 instanceof Forall2 && form2 instanceof Forall2) {
              var a$prime$prime = freshen(form1.value0)([ form1.value1, form2.value1, new Atom(form1.value0), new Atom(form2.value0) ]);
              return aeq(subst(new Atom(a$prime$prime))(form1.value0)(form1.value1))(subst(new Atom(a$prime$prime))(form2.value0)(form2.value1));
          };
          if (form1 instanceof Exists2 && form2 instanceof Exists2) {
              var a$prime$prime = freshen(form1.value0)([ form1.value1, form2.value1, new Atom(form1.value0), new Atom(form2.value0) ]);
              return aeq(subst(new Atom(a$prime$prime))(form1.value0)(form1.value1))(subst(new Atom(a$prime$prime))(form2.value0)(form2.value1));
          };
          return false;
      };
  };
  var cllCalculus = new Derivation.Calculus(aeq, formParser, function (v) {
      return Data_Array["null"](v.value0);
  }, pickRule);
  exports["cllCalculus"] = cllCalculus;
  exports["cllRender"] = cllRender;
})(PS);
(function($PS) {
  // Generated by purs version 0.13.8
  "use strict";
  $PS["Spork.Batch"] = $PS["Spork.Batch"] || {};
  var exports = $PS["Spork.Batch"];
  var Data_Monoid = $PS["Data.Monoid"];
  var Data_Semigroup = $PS["Data.Semigroup"];
  var unBatch = function (v) {
      return v;
  };
  var semigroupBatch = new Data_Semigroup.Semigroup(function (v) {
      return function (v1) {
          return Data_Semigroup.append(Data_Semigroup.semigroupArray)(v)(v1);
      };
  });
  var monoidBatch = new Data_Monoid.Monoid(function () {
      return semigroupBatch;
  }, [  ]);
  exports["unBatch"] = unBatch;
  exports["monoidBatch"] = monoidBatch;
})(PS);
(function($PS) {
  // Generated by purs version 0.13.8
  "use strict";
  $PS["Spork.EventQueue"] = $PS["Spork.EventQueue"] || {};
  var exports = $PS["Spork.EventQueue"];
  var Control_Applicative = $PS["Control.Applicative"];
  var Control_Apply = $PS["Control.Apply"];
  var Control_Bind = $PS["Control.Bind"];
  var Control_Monad_Rec_Class = $PS["Control.Monad.Rec.Class"];
  var Data_Array = $PS["Data.Array"];
  var Data_Foldable = $PS["Data.Foldable"];
  var Data_Function = $PS["Data.Function"];
  var Data_Functor = $PS["Data.Functor"];
  var Data_Maybe = $PS["Data.Maybe"];
  var Data_Unit = $PS["Data.Unit"];
  var Effect = $PS["Effect"];
  var Effect_Ref = $PS["Effect.Ref"];                
  var Loop = (function () {
      function Loop(value0, value1) {
          this.value0 = value0;
          this.value1 = value1;
      };
      Loop.create = function (value0) {
          return function (value1) {
              return new Loop(value0, value1);
          };
      };
      return Loop;
  })();
  var withAccum = function (dictApplicative) {
      return function (specFn) {
          return function (next) {
              return Data_Functor.mapFlipped((dictApplicative.Apply0()).Functor0())(specFn(next))(function (spec) {
                  var update = function (state) {
                      return function (input) {
                          return Data_Functor.map((dictApplicative.Apply0()).Functor0())(tick)(spec.update(state)(input));
                      };
                  };
                  var tick = function (nextState) {
                      return new Loop(update(nextState), commit(nextState));
                  };
                  var commit = function (state) {
                      return function (v) {
                          return Data_Functor.map((dictApplicative.Apply0()).Functor0())(tick)(spec.commit(state));
                      };
                  };
                  return tick(spec.init);
              });
          };
      };
  };
  var stepper = function (dictMonad) {
      return function (k) {
          return function (next) {
              var tick = function (v) {
                  return Control_Applicative.pure(dictMonad.Applicative0())(new Loop(loop, tick));
              };
              var loop = function (i) {
                  return Control_Bind.discard(Control_Bind.discardUnit)(dictMonad.Bind1())(Control_Bind.bindFlipped(dictMonad.Bind1())(next.push)(k(i)))(function () {
                      return Control_Bind.discard(Control_Bind.discardUnit)(dictMonad.Bind1())(next.run)(function () {
                          return Control_Applicative.pure(dictMonad.Applicative0())(new Loop(loop, tick));
                      });
                  });
              };
              return tick(Data_Unit.unit);
          };
      };
  };
  var fix = function (proc) {
      return function __do() {
          var queue = Effect_Ref["new"]([  ])();
          var machine = Effect_Ref["new"](Data_Maybe.Nothing.value)();
          var push = (function () {
              var $17 = Data_Function.flip(Effect_Ref.modify_)(queue);
              var $18 = Data_Function.flip(Data_Array.snoc);
              return function ($19) {
                  return $17($18($19));
              };
          })();
          var loop = Control_Monad_Rec_Class.tailRecM(Control_Monad_Rec_Class.monadRecEffect)(function (v) {
              return function __do() {
                  var q = Effect_Ref.read(queue)();
                  var v1 = Data_Array.uncons(q);
                  if (v1 instanceof Data_Maybe.Just) {
                      Effect_Ref.write(v1.value0.tail)(queue)();
                      return Data_Functor.map(Effect.functorEffect)(Control_Monad_Rec_Class.Loop.create)(v.value0(v1.value0.head))();
                  };
                  if (v1 instanceof Data_Maybe.Nothing) {
                      var step = v.value1(Data_Unit.unit)();
                      var isEmpty = Data_Functor.map(Effect.functorEffect)(Data_Array["null"])(Effect_Ref.read(queue))();
                      if (isEmpty) {
                          Effect_Ref.write(new Data_Maybe.Just(step))(machine)();
                          Effect_Ref.write([  ])(queue)();
                          return new Control_Monad_Rec_Class.Done(Data_Unit.unit);
                      };
                      return new Control_Monad_Rec_Class.Loop(step);
                  };
                  throw new Error("Failed pattern match at Spork.EventQueue (line 118, column 7 - line 131, column 34): " + [ v1.constructor.name ]);
              };
          });
          var run = Control_Bind.bindFlipped(Effect.bindEffect)(Data_Foldable.traverse_(Effect.applicativeEffect)(Data_Foldable.foldableMaybe)(loop))(Control_Apply.applyFirst(Effect.applyEffect)(Effect_Ref.read(machine))(Effect_Ref.write(Data_Maybe.Nothing.value)(machine)));
          var inst = {
              run: run,
              push: push
          };
          var step = proc(inst)();
          Effect_Ref.write(new Data_Maybe.Just(step))(machine)();
          return inst;
      };
  };
  exports["Loop"] = Loop;
  exports["stepper"] = stepper;
  exports["withAccum"] = withAccum;
  exports["fix"] = fix;
})(PS);
(function(exports) {
  "use strict";

  exports.createTextNode = function (data) {
    return function (doc) {
      return function () {
        return doc.createTextNode(data);
      };
    };
  };
})(PS["Web.DOM.Document"] = PS["Web.DOM.Document"] || {});
(function($PS) {
  // Generated by purs version 0.13.8
  "use strict";
  $PS["Web.DOM.Document"] = $PS["Web.DOM.Document"] || {};
  var exports = $PS["Web.DOM.Document"];
  var $foreign = $PS["Web.DOM.Document"];
  exports["createTextNode"] = $foreign.createTextNode;
})(PS);
(function(exports) {
  "use strict";

  exports.mutationObserver = function (cb) {
    return function () {
      return new MutationObserver(function (mr, mo) {
        return cb(mr)(mo)();
      });
    };
  };

  exports._observe = function (node) {
    return function (config) {
      return function (mo) {
        return function () {
          return mo.observe(node, config);
        };
      };
    };
  };
})(PS["Web.DOM.MutationObserver"] = PS["Web.DOM.MutationObserver"] || {});
(function($PS) {
  // Generated by purs version 0.13.8
  "use strict";
  $PS["Web.DOM.MutationObserver"] = $PS["Web.DOM.MutationObserver"] || {};
  var exports = $PS["Web.DOM.MutationObserver"];
  var $foreign = $PS["Web.DOM.MutationObserver"];
  var observe = function (dictUnion) {
      return $foreign["_observe"];
  };
  exports["observe"] = observe;
  exports["mutationObserver"] = $foreign.mutationObserver;
})(PS);
(function(exports) {
  "use strict";                               

  exports.setNodeValue = function (value) {
    return function (node) {
      return function () {
        node.nodeValue = value;
        return {};
      };
    };
  };

  exports.appendChild = function (node) {
    return function (parent) {
      return function () {
        return parent.appendChild(node);
      };
    };
  };
})(PS["Web.DOM.Node"] = PS["Web.DOM.Node"] || {});
(function($PS) {
  // Generated by purs version 0.13.8
  "use strict";
  $PS["Web.DOM.Node"] = $PS["Web.DOM.Node"] || {};
  var exports = $PS["Web.DOM.Node"];
  var $foreign = $PS["Web.DOM.Node"];
  exports["setNodeValue"] = $foreign.setNodeValue;
  exports["appendChild"] = $foreign.appendChild;
})(PS);
(function($PS) {
  // Generated by purs version 0.13.8
  "use strict";
  $PS["Web.DOM.Text"] = $PS["Web.DOM.Text"] || {};
  var exports = $PS["Web.DOM.Text"];
  var Unsafe_Coerce = $PS["Unsafe.Coerce"];                   
  var toNode = Unsafe_Coerce.unsafeCoerce;
  exports["toNode"] = toNode;
})(PS);
(function(exports) {
  /* global window */
  "use strict";

  exports.window = function () {
    return window;
  };
})(PS["Web.HTML"] = PS["Web.HTML"] || {});
(function($PS) {
  // Generated by purs version 0.13.8
  "use strict";
  $PS["Web.HTML"] = $PS["Web.HTML"] || {};
  var exports = $PS["Web.HTML"];
  var $foreign = $PS["Web.HTML"];
  exports["window"] = $foreign.window;
})(PS);
(function($PS) {
  // Generated by purs version 0.13.8
  "use strict";
  $PS["Web.HTML.HTMLDocument"] = $PS["Web.HTML.HTMLDocument"] || {};
  var exports = $PS["Web.HTML.HTMLDocument"];
  var Unsafe_Coerce = $PS["Unsafe.Coerce"];                      
  var toParentNode = Unsafe_Coerce.unsafeCoerce; 
  var toDocument = Unsafe_Coerce.unsafeCoerce;
  exports["toDocument"] = toDocument;
  exports["toParentNode"] = toParentNode;
})(PS);
(function(exports) {
  "use strict";

  exports.document = function (window) {
    return function () {
      return window.document;
    };
  };

  exports.location = function (window) {
    return function () {
      return window.location;
    };
  };

  exports.alert = function (str) {
    return function (window) {
      return function () {
        window.alert(str);
        return {};
      };
    };
  };
})(PS["Web.HTML.Window"] = PS["Web.HTML.Window"] || {});
(function($PS) {
  // Generated by purs version 0.13.8
  "use strict";
  $PS["Web.HTML.Window"] = $PS["Web.HTML.Window"] || {};
  var exports = $PS["Web.HTML.Window"];
  var $foreign = $PS["Web.HTML.Window"];
  exports["document"] = $foreign.document;
  exports["location"] = $foreign.location;
  exports["alert"] = $foreign.alert;
})(PS);
(function($PS) {
  // Generated by purs version 0.13.8
  "use strict";
  $PS["Spork.Scheduler"] = $PS["Spork.Scheduler"] || {};
  var exports = $PS["Spork.Scheduler"];
  var Control_Bind = $PS["Control.Bind"];
  var Data_Either = $PS["Data.Either"];
  var Data_Foldable = $PS["Data.Foldable"];
  var Data_Functor = $PS["Data.Functor"];
  var Data_Semiring = $PS["Data.Semiring"];
  var Data_Show = $PS["Data.Show"];
  var Effect = $PS["Effect"];
  var Effect_Ref = $PS["Effect.Ref"];
  var Web_DOM_Document = $PS["Web.DOM.Document"];
  var Web_DOM_MutationObserver = $PS["Web.DOM.MutationObserver"];
  var Web_DOM_Node = $PS["Web.DOM.Node"];
  var Web_DOM_Text = $PS["Web.DOM.Text"];
  var Web_HTML = $PS["Web.HTML"];
  var Web_HTML_HTMLDocument = $PS["Web.HTML.HTMLDocument"];
  var Web_HTML_Window = $PS["Web.HTML.Window"];                
  var makeImmediate = function (run) {
      return function __do() {
          var document = Control_Bind.bind(Effect.bindEffect)(Web_HTML.window)((function () {
              var $2 = Data_Functor.map(Effect.functorEffect)(Web_HTML_HTMLDocument.toDocument);
              return function ($3) {
                  return $2(Web_HTML_Window.document($3));
              };
          })())();
          var nextTick = Effect_Ref["new"](new Data_Either.Right(0))();
          var obsvNode = Data_Functor.map(Effect.functorEffect)(Web_DOM_Text.toNode)(Web_DOM_Document.createTextNode("")(document))();
          var observer = Web_DOM_MutationObserver.mutationObserver(function (v) {
              return function (v1) {
                  return function __do() {
                      Effect_Ref.modify_(Data_Either.either((function () {
                          var $4 = Data_Semiring.add(Data_Semiring.semiringInt)(1);
                          return function ($5) {
                              return Data_Either.Right.create($4($5));
                          };
                      })())(Data_Either.Right.create))(nextTick)();
                      return run();
                  };
              };
          })();
          Web_DOM_MutationObserver.observe()(obsvNode)({
              characterData: true
          })(observer)();
          return Control_Bind.bind(Effect.bindEffect)(Effect_Ref.read(nextTick))(Data_Foldable.traverse_(Effect.applicativeEffect)(Data_Either.foldableEither)(function (tick) {
              return function __do() {
                  Effect_Ref.write(new Data_Either.Left(tick + 1 | 0))(nextTick)();
                  return Web_DOM_Node.setNodeValue(Data_Show.show(Data_Show.showInt)(tick))(obsvNode)();
              };
          }));
      };
  };
  exports["makeImmediate"] = makeImmediate;
})(PS);
(function(exports) {
  "use strict";

  exports.reallyUnsafeRefEq = function (a) {
    return function (b) {
      return a === b;
    };
  };
})(PS["Unsafe.Reference"] = PS["Unsafe.Reference"] || {});
(function($PS) {
  // Generated by purs version 0.13.8
  "use strict";
  $PS["Unsafe.Reference"] = $PS["Unsafe.Reference"] || {};
  var exports = $PS["Unsafe.Reference"];
  var $foreign = $PS["Unsafe.Reference"];
  var unsafeRefEq = $foreign.reallyUnsafeRefEq;
  exports["unsafeRefEq"] = unsafeRefEq;
})(PS);
(function(exports) {
  "use strict";                                               

  exports._querySelector = function (selector) {
    return function (node) {
      return function () {
        return node.querySelector(selector);
      };
    };
  };
})(PS["Web.DOM.ParentNode"] = PS["Web.DOM.ParentNode"] || {});
(function($PS) {
  // Generated by purs version 0.13.8
  "use strict";
  $PS["Web.DOM.ParentNode"] = $PS["Web.DOM.ParentNode"] || {};
  var exports = $PS["Web.DOM.ParentNode"];
  var $foreign = $PS["Web.DOM.ParentNode"];
  var Data_Functor = $PS["Data.Functor"];
  var Data_Nullable = $PS["Data.Nullable"];
  var Effect = $PS["Effect"];
  var querySelector = function (qs) {
      var $3 = Data_Functor.map(Effect.functorEffect)(Data_Nullable.toMaybe);
      var $4 = $foreign["_querySelector"](qs);
      return function ($5) {
          return $3($4($5));
      };
  };
  exports["querySelector"] = querySelector;
})(PS);
(function($PS) {
  // Generated by purs version 0.13.8
  "use strict";
  $PS["Spork.App"] = $PS["Spork.App"] || {};
  var exports = $PS["Spork.App"];
  var Control_Applicative = $PS["Control.Applicative"];
  var Control_Apply = $PS["Control.Apply"];
  var Control_Bind = $PS["Control.Bind"];
  var Data_Boolean = $PS["Data.Boolean"];
  var Data_Eq = $PS["Data.Eq"];
  var Data_Foldable = $PS["Data.Foldable"];
  var Data_Functor = $PS["Data.Functor"];
  var Data_Functor_Coproduct = $PS["Data.Functor.Coproduct"];
  var Data_Map_Internal = $PS["Data.Map.Internal"];
  var Data_Maybe = $PS["Data.Maybe"];
  var Data_Newtype = $PS["Data.Newtype"];
  var Data_Ord = $PS["Data.Ord"];
  var Data_Unit = $PS["Data.Unit"];
  var Effect = $PS["Effect"];
  var Effect_Exception = $PS["Effect.Exception"];
  var Effect_Ref = $PS["Effect.Ref"];
  var Halogen_VDom_DOM = $PS["Halogen.VDom.DOM"];
  var Halogen_VDom_DOM_Prop = $PS["Halogen.VDom.DOM.Prop"];
  var Halogen_VDom_Machine = $PS["Halogen.VDom.Machine"];
  var Halogen_VDom_Thunk = $PS["Halogen.VDom.Thunk"];
  var Spork_Batch = $PS["Spork.Batch"];
  var Spork_EventQueue = $PS["Spork.EventQueue"];
  var Spork_Html_Core = $PS["Spork.Html.Core"];
  var Spork_Scheduler = $PS["Spork.Scheduler"];
  var Unsafe_Reference = $PS["Unsafe.Reference"];
  var Web_DOM_Element = $PS["Web.DOM.Element"];
  var Web_DOM_Node = $PS["Web.DOM.Node"];
  var Web_DOM_ParentNode = $PS["Web.DOM.ParentNode"];
  var Web_HTML = $PS["Web.HTML"];
  var Web_HTML_HTMLDocument = $PS["Web.HTML.HTMLDocument"];
  var Web_HTML_Window = $PS["Web.HTML.Window"];                
  var NoChange = (function () {
      function NoChange() {

      };
      NoChange.value = new NoChange();
      return NoChange;
  })();
  var Pending = (function () {
      function Pending() {

      };
      Pending.value = new Pending();
      return Pending;
  })();
  var Flushed = (function () {
      function Flushed() {

      };
      Flushed.value = new Flushed();
      return Flushed;
  })();
  var Restore = (function () {
      function Restore(value0) {
          this.value0 = value0;
      };
      Restore.create = function (value0) {
          return new Restore(value0);
      };
      return Restore;
  })();
  var Action = (function () {
      function Action(value0) {
          this.value0 = value0;
      };
      Action.create = function (value0) {
          return new Action(value0);
      };
      return Action;
  })();
  var Interpret = (function () {
      function Interpret(value0) {
          this.value0 = value0;
      };
      Interpret.create = function (value0) {
          return new Interpret(value0);
      };
      return Interpret;
  })();
  var Render = (function () {
      function Render() {

      };
      Render.value = new Render();
      return Render;
  })();
  var eqRenderStatus = new Data_Eq.Eq(function (x) {
      return function (y) {
          if (x instanceof NoChange && y instanceof NoChange) {
              return true;
          };
          if (x instanceof Pending && y instanceof Pending) {
              return true;
          };
          if (x instanceof Flushed && y instanceof Flushed) {
              return true;
          };
          return false;
      };
  });
  var makeAppQueue = function (onChange) {
      return function (v) {
          return function (app) {
              return function (el) {
                  return Spork_EventQueue.withAccum(Effect.applicativeEffect)(function (self) {
                      return function __do() {
                          var schedule = Spork_Scheduler.makeImmediate(Control_Apply.applySecond(Effect.applyEffect)(self.push(Render.value))(self.run))();
                          var runSubs = function (interpret) {
                              return function (subs) {
                                  return function __do() {
                                      var ref = Effect_Ref["new"](interpret)();
                                      Effect.foreachE(subs)(function (sub) {
                                          return function __do() {
                                              var v1 = Effect_Ref.read(ref)();
                                              var next = v1.value0(Data_Functor_Coproduct.right(sub))();
                                              return Effect_Ref.write(next)(ref)();
                                          };
                                      })();
                                      return Effect_Ref.read(ref)();
                                  };
                              };
                          };
                          var pushEffect = function ($44) {
                              return self.push(Interpret.create(Data_Functor_Coproduct.left($44)));
                          };
                          var pushAction = function ($45) {
                              return self.push(Action.create($45));
                          };
                          var nextStatus = function (prevModel) {
                              return function (nextModel) {
                                  return function (v1) {
                                      if (v1 instanceof NoChange) {
                                          if (Unsafe_Reference.unsafeRefEq(prevModel)(nextModel)) {
                                              return NoChange.value;
                                          };
                                          if (Data_Boolean.otherwise) {
                                              return Pending.value;
                                          };
                                      };
                                      if (v1 instanceof Flushed) {
                                          return NoChange.value;
                                      };
                                      if (v1 instanceof Pending) {
                                          return Pending.value;
                                      };
                                      throw new Error("Failed pattern match at Spork.App (line 112, column 38 - line 117, column 24): " + [ v1.constructor.name ]);
                                  };
                              };
                          };
                          var update = function (v1) {
                              return function (v2) {
                                  if (v2 instanceof Interpret) {
                                      return function __do() {
                                          var nextInterpret = v1.interpret.value0(v2.value0)();
                                          return {
                                              interpret: nextInterpret,
                                              model: v1.model,
                                              status: v1.status,
                                              vdom: v1.vdom
                                          };
                                      };
                                  };
                                  if (v2 instanceof Action) {
                                      var next = app.update(v1.model)(v2.value0);
                                      var status = nextStatus(v1.model)(next.model)(v1.status);
                                      var nextState = {
                                          model: next.model,
                                          status: status,
                                          interpret: v1.interpret,
                                          vdom: v1.vdom
                                      };
                                      var appChange = {
                                          old: v1.model,
                                          action: v2.value0,
                                          "new": next.model
                                      };
                                      return function __do() {
                                          onChange(appChange)();
                                          Effect.foreachE(Spork_Batch.unBatch(next.effects))(pushEffect)();
                                          return nextState;
                                      };
                                  };
                                  if (v2 instanceof Restore) {
                                      var status = nextStatus(v1.model)(v2.value0)(v1.status);
                                      var nextState = {
                                          model: v2.value0,
                                          status: status,
                                          interpret: v1.interpret,
                                          vdom: v1.vdom
                                      };
                                      return Control_Applicative.pure(Effect.applicativeEffect)(nextState);
                                  };
                                  if (v2 instanceof Render) {
                                      return function __do() {
                                          var vdom = Halogen_VDom_Machine.step(v1.vdom, Data_Newtype.unwrap(Spork_Html_Core.newtypeHtml)(app.render(v1.model)));
                                          return {
                                              vdom: vdom,
                                              status: Flushed.value,
                                              interpret: v1.interpret,
                                              model: v1.model
                                          };
                                      };
                                  };
                                  throw new Error("Failed pattern match at Spork.App (line 135, column 44 - line 155, column 55): " + [ v2.constructor.name ]);
                              };
                          };
                          var commit = function (state) {
                              if (state.status instanceof Flushed) {
                                  return Control_Applicative.pure(Effect.applicativeEffect)({
                                      status: NoChange.value,
                                      interpret: state.interpret,
                                      model: state.model,
                                      vdom: state.vdom
                                  });
                              };
                              return function __do() {
                                  Control_Applicative.when(Effect.applicativeEffect)(Data_Eq.eq(eqRenderStatus)(state.status)(Pending.value))(schedule)();
                                  var tickInterpret = runSubs(state.interpret)(Spork_Batch.unBatch(app.subs(state.model)))();
                                  var nextInterpret = tickInterpret.value1(Data_Unit.unit)();
                                  return {
                                      interpret: nextInterpret,
                                      status: NoChange.value,
                                      model: state.model,
                                      vdom: state.vdom
                                  };
                              };
                          };
                          var document = Control_Bind.bind(Effect.bindEffect)(Web_HTML.window)((function () {
                              var $46 = Data_Functor.map(Effect.functorEffect)(Web_HTML_HTMLDocument.toDocument);
                              return function ($47) {
                                  return $46(Web_HTML_Window.document($47));
                              };
                          })())();
                          var vdomSpec = {
                              document: document,
                              buildWidget: Halogen_VDom_Thunk.buildThunk(Data_Newtype.unwrap(Spork_Html_Core.newtypeHtml)),
                              buildAttributes: Halogen_VDom_DOM_Prop.buildProp(function (a) {
                                  return Control_Apply.applySecond(Effect.applyEffect)(pushAction(a))(self.run);
                              })
                          };
                          var vdom = Halogen_VDom_DOM.buildVDom(vdomSpec)(Data_Newtype.unwrap(Spork_Html_Core.newtypeHtml)(app.render(app.init.model)));
                          Data_Functor["void"](Effect.functorEffect)(Web_DOM_Node.appendChild(Halogen_VDom_Machine.extract(vdom))(el))();
                          var interpret = v({
                              run: self.run,
                              push: function ($48) {
                                  return self.push(Action.create($48));
                              }
                          })();
                          Effect.foreachE(Spork_Batch.unBatch(app.init.effects))(pushEffect)();
                          var init = {
                              model: app.init.model,
                              status: NoChange.value,
                              interpret: interpret,
                              vdom: vdom
                          };
                          return {
                              init: init,
                              update: update,
                              commit: commit
                          };
                      };
                  });
              };
          };
      };
  };
  var make = function (interpreter) {
      return function (app) {
          return function (el) {
              return function __do() {
                  var subsRef = Effect_Ref["new"]({
                      fresh: 0,
                      cbs: Data_Map_Internal.empty
                  })();
                  var stateRef = Effect_Ref["new"](app.init.model)();
                  var remove = function (key) {
                      return Effect_Ref.modify_(function (subs) {
                          return {
                              cbs: Data_Map_Internal["delete"](Data_Ord.ordInt)(key)(subs.cbs),
                              fresh: subs.fresh
                          };
                      })(subsRef);
                  };
                  var subscribe$prime = function (cb) {
                      return function __do() {
                          var subs = Effect_Ref.read(subsRef)();
                          Effect_Ref.write({
                              fresh: subs.fresh + 1 | 0,
                              cbs: Data_Map_Internal.insert(Data_Ord.ordInt)(subs.fresh)(cb)(subs.cbs)
                          })(subsRef)();
                          return remove(subs.fresh);
                      };
                  };
                  var handleChange = function (appChange) {
                      return function __do() {
                          Effect_Ref.write(appChange["new"])(stateRef)();
                          var subs = Effect_Ref.read(subsRef)();
                          return Data_Foldable.for_(Effect.applicativeEffect)(Data_Map_Internal.foldableMap)(subs.cbs)(function (v) {
                              return v(appChange);
                          })();
                      };
                  };
                  var v = Spork_EventQueue.fix(makeAppQueue(handleChange)(interpreter)(app)(el))();
                  return {
                      push: function ($49) {
                          return v.push(Action.create($49));
                      },
                      snapshot: Effect_Ref.read(stateRef),
                      restore: function ($50) {
                          return v.push(Restore.create($50));
                      },
                      subscribe: subscribe$prime,
                      run: v.run
                  };
              };
          };
      };
  };
  var makeWithSelector = function (interpret) {
      return function (app) {
          return function (sel) {
              return function __do() {
                  var mbEl = Control_Bind.bind(Effect.bindEffect)(Control_Bind.bind(Effect.bindEffect)(Web_HTML.window)((function () {
                      var $51 = Data_Functor.map(Effect.functorEffect)(Web_HTML_HTMLDocument.toParentNode);
                      return function ($52) {
                          return $51(Web_HTML_Window.document($52));
                      };
                  })()))(Web_DOM_ParentNode.querySelector(sel))();
                  if (mbEl instanceof Data_Maybe.Nothing) {
                      return Effect_Exception.throwException(Effect_Exception.error("Element does not exist: " + sel))();
                  };
                  if (mbEl instanceof Data_Maybe.Just) {
                      return make(interpret)(app)(Web_DOM_Element.toNode(mbEl.value0))();
                  };
                  throw new Error("Failed pattern match at Spork.App (line 272, column 3 - line 274, column 56): " + [ mbEl.constructor.name ]);
              };
          };
      };
  };
  exports["makeWithSelector"] = makeWithSelector;
})(PS);
(function($PS) {
  // Generated by purs version 0.13.8
  "use strict";
  $PS["Spork.Interpreter"] = $PS["Spork.Interpreter"] || {};
  var exports = $PS["Spork.Interpreter"];
  var Control_Apply = $PS["Control.Apply"];
  var Data_Const = $PS["Data.Const"];
  var Data_Function = $PS["Data.Function"];
  var Data_Functor = $PS["Data.Functor"];
  var Data_Functor_Coproduct = $PS["Data.Functor.Coproduct"];
  var Data_Newtype = $PS["Data.Newtype"];
  var Data_Unit = $PS["Data.Unit"];
  var Data_Void = $PS["Data.Void"];
  var Spork_EventQueue = $PS["Spork.EventQueue"];
  var never = function (dictMonad) {
      return Spork_EventQueue.stepper(dictMonad)((function () {
          var $26 = Data_Newtype.unwrap(Data_Const.newtypeConst);
          return function ($27) {
              return Data_Void.absurd($26($27));
          };
      })());
  };
  var merge = function (dictApplicative) {
      return function (v) {
          return function (v1) {
              return function (queue) {
                  var update = function (v2) {
                      return function (v3) {
                          return Data_Functor_Coproduct.coproduct((function () {
                              var $28 = Data_Functor.map((dictApplicative.Apply0()).Functor0())(Data_Function.flip(tick)(v3));
                              return function ($29) {
                                  return $28(v2.value0($29));
                              };
                          })())((function () {
                              var $30 = Data_Functor.map((dictApplicative.Apply0()).Functor0())(tick(v2));
                              return function ($31) {
                                  return $30(v3.value0($31));
                              };
                          })());
                      };
                  };
                  var tick = function (l) {
                      return function (r) {
                          return new Spork_EventQueue.Loop(update(l)(r), commit(l)(r));
                      };
                  };
                  var commit = function (v2) {
                      return function (v3) {
                          return function (v4) {
                              return Control_Apply.apply(dictApplicative.Apply0())(Data_Functor.map((dictApplicative.Apply0()).Functor0())(tick)(v2.value1(Data_Unit.unit)))(v3.value1(Data_Unit.unit));
                          };
                      };
                  };
                  return Control_Apply.apply(dictApplicative.Apply0())(Data_Functor.map((dictApplicative.Apply0()).Functor0())(tick)(v(queue)))(v1(queue));
              };
          };
      };
  };
  exports["merge"] = merge;
  exports["never"] = never;
})(PS);
(function($PS) {
  // Generated by purs version 0.13.8
  "use strict";
  $PS["Spork.Transition"] = $PS["Spork.Transition"] || {};
  var exports = $PS["Spork.Transition"];
  var Data_Monoid = $PS["Data.Monoid"];
  var Spork_Batch = $PS["Spork.Batch"];                
  var purely = function (v) {
      return {
          model: v,
          effects: Data_Monoid.mempty(Spork_Batch.monoidBatch)
      };
  };
  exports["purely"] = purely;
})(PS);
(function($PS) {
  // Generated by purs version 0.13.8
  "use strict";
  $PS["Spork.PureApp"] = $PS["Spork.PureApp"] || {};
  var exports = $PS["Spork.PureApp"];
  var Data_Monoid = $PS["Data.Monoid"];
  var Effect = $PS["Effect"];
  var Spork_App = $PS["Spork.App"];
  var Spork_Batch = $PS["Spork.Batch"];
  var Spork_Interpreter = $PS["Spork.Interpreter"];
  var Spork_Transition = $PS["Spork.Transition"];                
  var toApp = function (app) {
      return {
          render: app.render,
          update: function (model) {
              return function (action) {
                  return Spork_Transition.purely(app.update(model)(action));
              };
          },
          init: Spork_Transition.purely(app.init),
          subs: Data_Monoid.mempty(Data_Monoid.monoidFn(Spork_Batch.monoidBatch))
      };
  };
  var makeWithSelector = (function () {
      var $0 = Spork_App.makeWithSelector(Spork_Interpreter.merge(Effect.applicativeEffect)(Spork_Interpreter.never(Effect.monadEffect))(Spork_Interpreter.never(Effect.monadEffect)));
      return function ($1) {
          return $0(toApp($1));
      };
  })();
  exports["makeWithSelector"] = makeWithSelector;
})(PS);
(function($PS) {
  // Generated by purs version 0.13.8
  "use strict";
  $PS["Text.Parsing.Parser.Pos"] = $PS["Text.Parsing.Parser.Pos"] || {};
  var exports = $PS["Text.Parsing.Parser.Pos"];
  var Data_EuclideanRing = $PS["Data.EuclideanRing"];
  var Data_Foldable = $PS["Data.Foldable"];
  var Data_Newtype = $PS["Data.Newtype"];
  var Data_String_Common = $PS["Data.String.Common"];
  var Data_String_Pattern = $PS["Data.String.Pattern"];
  var updatePosString = function (pos$prime) {
      return function (str) {
          var updatePosChar = function (v) {
              return function (c) {
                  if (c === "\x0a") {
                      return {
                          line: v.line + 1 | 0,
                          column: 1
                      };
                  };
                  if (c === "\x0d") {
                      return {
                          line: v.line + 1 | 0,
                          column: 1
                      };
                  };
                  if (c === "\x09") {
                      return {
                          line: v.line,
                          column: (v.column + 8 | 0) - Data_EuclideanRing.mod(Data_EuclideanRing.euclideanRingInt)(v.column - 1 | 0)(8) | 0
                      };
                  };
                  return {
                      line: v.line,
                      column: v.column + 1 | 0
                  };
              };
          };
          return Data_Foldable.foldl(Data_Foldable.foldableArray)(updatePosChar)(pos$prime)(Data_String_Common.split(Data_Newtype.wrap(Data_String_Pattern.newtypePattern)(""))(str));
      };
  }; 
  var initialPos = {
      line: 1,
      column: 1
  };
  exports["initialPos"] = initialPos;
  exports["updatePosString"] = updatePosString;
})(PS);
(function($PS) {
  // Generated by purs version 0.13.8
  "use strict";
  $PS["Text.Parsing.Parser"] = $PS["Text.Parsing.Parser"] || {};
  var exports = $PS["Text.Parsing.Parser"];
  var Control_Alt = $PS["Control.Alt"];
  var Control_Alternative = $PS["Control.Alternative"];
  var Control_Applicative = $PS["Control.Applicative"];
  var Control_Bind = $PS["Control.Bind"];
  var Control_Lazy = $PS["Control.Lazy"];
  var Control_Monad_Error_Class = $PS["Control.Monad.Error.Class"];
  var Control_Monad_Except_Trans = $PS["Control.Monad.Except.Trans"];
  var Control_Monad_State_Class = $PS["Control.Monad.State.Class"];
  var Control_Monad_State_Trans = $PS["Control.Monad.State.Trans"];
  var Control_Plus = $PS["Control.Plus"];
  var Data_Either = $PS["Data.Either"];
  var Data_Identity = $PS["Data.Identity"];
  var Data_Newtype = $PS["Data.Newtype"];
  var Data_Tuple = $PS["Data.Tuple"];
  var Text_Parsing_Parser_Pos = $PS["Text.Parsing.Parser.Pos"];                
  var ParseState = (function () {
      function ParseState(value0, value1, value2) {
          this.value0 = value0;
          this.value1 = value1;
          this.value2 = value2;
      };
      ParseState.create = function (value0) {
          return function (value1) {
              return function (value2) {
                  return new ParseState(value0, value1, value2);
              };
          };
      };
      return ParseState;
  })();
  var ParseError = (function () {
      function ParseError(value0, value1) {
          this.value0 = value0;
          this.value1 = value1;
      };
      ParseError.create = function (value0) {
          return function (value1) {
              return new ParseError(value0, value1);
          };
      };
      return ParseError;
  })();
  var ParserT = function (x) {
      return x;
  };
  var newtypeParserT = new Data_Newtype.Newtype(function (n) {
      return n;
  }, ParserT);
  var runParserT = function (dictMonad) {
      return function (s) {
          return function (p) {
              var initialState = new ParseState(s, Text_Parsing_Parser_Pos.initialPos, false);
              return Control_Monad_State_Trans.evalStateT(((dictMonad.Bind1()).Apply0()).Functor0())(Control_Monad_Except_Trans.runExceptT(Data_Newtype.unwrap(newtypeParserT)(p)))(initialState);
          };
      };
  };
  var runParser = function (s) {
      var $90 = Data_Newtype.unwrap(Data_Identity.newtypeIdentity);
      var $91 = runParserT(Data_Identity.monadIdentity)(s);
      return function ($92) {
          return $90($91($92));
      };
  }; 
  var monadThrowParserT = function (dictMonad) {
      return Control_Monad_Except_Trans.monadThrowExceptT(Control_Monad_State_Trans.monadStateT(dictMonad));
  };
  var monadStateParserT = function (dictMonad) {
      return Control_Monad_Except_Trans.monadStateExceptT(Control_Monad_State_Trans.monadStateStateT(dictMonad));
  };
  var position = function (dictMonad) {
      return Control_Monad_State_Class.gets(monadStateParserT(dictMonad))(function (v) {
          return v.value1;
      });
  };   
  var lazyParserT = new Control_Lazy.Lazy(function (f) {
      return Control_Lazy.defer(Control_Monad_State_Trans.lazyStateT)((function () {
          var $98 = Data_Newtype.unwrap(newtypeParserT);
          return function ($99) {
              return Control_Monad_Except_Trans.runExceptT($98(f($99)));
          };
      })());
  });                           
  var functorParserT = function (dictFunctor) {
      return Control_Monad_Except_Trans.functorExceptT(Control_Monad_State_Trans.functorStateT(dictFunctor));
  };
  var failWithPosition = function (dictMonad) {
      return function (message) {
          return function (pos) {
              return Control_Monad_Error_Class.throwError(monadThrowParserT(dictMonad))(new ParseError(message, pos));
          };
      };
  };
  var bindParserT = function (dictMonad) {
      return Control_Monad_Except_Trans.bindExceptT(Control_Monad_State_Trans.monadStateT(dictMonad));
  };
  var fail = function (dictMonad) {
      return function (message) {
          return Control_Bind.bindFlipped(bindParserT(dictMonad))(failWithPosition(dictMonad)(message))(position(dictMonad));
      };
  };
  var applyParserT = function (dictMonad) {
      return Control_Monad_Except_Trans.applyExceptT(Control_Monad_State_Trans.monadStateT(dictMonad));
  };
  var applicativeParserT = function (dictMonad) {
      return Control_Monad_Except_Trans.applicativeExceptT(Control_Monad_State_Trans.monadStateT(dictMonad));
  };
  var altParserT = function (dictMonad) {
      return new Control_Alt.Alt(function () {
          return functorParserT(((dictMonad.Bind1()).Apply0()).Functor0());
      }, function (p1) {
          return function (p2) {
              return ParserT(Control_Monad_Except_Trans.ExceptT(Control_Monad_State_Trans.StateT(function (v) {
                  return Control_Bind.bind(dictMonad.Bind1())(Control_Monad_State_Trans.runStateT(Control_Monad_Except_Trans.runExceptT(Data_Newtype.unwrap(newtypeParserT)(p1)))(new ParseState(v.value0, v.value1, false)))(function (v1) {
                      if (v1.value0 instanceof Data_Either.Left && !v1.value1.value2) {
                          return Control_Monad_State_Trans.runStateT(Control_Monad_Except_Trans.runExceptT(Data_Newtype.unwrap(newtypeParserT)(p2)))(v);
                      };
                      return Control_Applicative.pure(dictMonad.Applicative0())(new Data_Tuple.Tuple(v1.value0, v1.value1));
                  });
              })));
          };
      });
  };
  var plusParserT = function (dictMonad) {
      return new Control_Plus.Plus(function () {
          return altParserT(dictMonad);
      }, fail(dictMonad)("No alternative"));
  };
  var alternativeParserT = function (dictMonad) {
      return new Control_Alternative.Alternative(function () {
          return applicativeParserT(dictMonad);
      }, function () {
          return plusParserT(dictMonad);
      });
  };
  exports["ParseError"] = ParseError;
  exports["ParseState"] = ParseState;
  exports["ParserT"] = ParserT;
  exports["runParser"] = runParser;
  exports["fail"] = fail;
  exports["newtypeParserT"] = newtypeParserT;
  exports["lazyParserT"] = lazyParserT;
  exports["functorParserT"] = functorParserT;
  exports["applyParserT"] = applyParserT;
  exports["applicativeParserT"] = applicativeParserT;
  exports["bindParserT"] = bindParserT;
  exports["monadStateParserT"] = monadStateParserT;
  exports["altParserT"] = altParserT;
  exports["alternativeParserT"] = alternativeParserT;
})(PS);
(function($PS) {
  // Generated by purs version 0.13.8
  "use strict";
  $PS["Text.Parsing.Parser.Combinators"] = $PS["Text.Parsing.Parser.Combinators"] || {};
  var exports = $PS["Text.Parsing.Parser.Combinators"];
  var Control_Alt = $PS["Control.Alt"];
  var Control_Applicative = $PS["Control.Applicative"];
  var Control_Apply = $PS["Control.Apply"];
  var Control_Bind = $PS["Control.Bind"];
  var Control_Monad_Except_Trans = $PS["Control.Monad.Except.Trans"];
  var Control_Monad_State_Trans = $PS["Control.Monad.State.Trans"];
  var Data_Either = $PS["Data.Either"];
  var Data_Functor = $PS["Data.Functor"];
  var Data_List = $PS["Data.List"];
  var Data_List_Types = $PS["Data.List.Types"];
  var Data_Maybe = $PS["Data.Maybe"];
  var Data_Newtype = $PS["Data.Newtype"];
  var Data_Tuple = $PS["Data.Tuple"];
  var Text_Parsing_Parser = $PS["Text.Parsing.Parser"];                
  var withErrorMessage = function (dictMonad) {
      return function (p) {
          return function (msg) {
              return Control_Alt.alt(Text_Parsing_Parser.altParserT(dictMonad))(p)(Text_Parsing_Parser.fail(dictMonad)("Expected " + msg));
          };
      };
  };
  var tryRethrow = function (dictMonad) {
      return function (p) {
          return Text_Parsing_Parser.ParserT(Control_Monad_Except_Trans.ExceptT(Control_Monad_State_Trans.StateT(function (v) {
              return Control_Bind.bind(dictMonad.Bind1())(Control_Monad_State_Trans.runStateT(Control_Monad_Except_Trans.runExceptT(Data_Newtype.unwrap(Text_Parsing_Parser.newtypeParserT)(p)))(v))(function (v1) {
                  if (v1.value0 instanceof Data_Either.Left) {
                      return Control_Applicative.pure(dictMonad.Applicative0())(new Data_Tuple.Tuple(new Data_Either.Left(new Text_Parsing_Parser.ParseError(v1.value0.value0.value0, v.value1)), new Text_Parsing_Parser.ParseState(v1.value1.value0, v1.value1.value1, v.value2)));
                  };
                  return Control_Applicative.pure(dictMonad.Applicative0())(new Data_Tuple.Tuple(v1.value0, v1.value1));
              });
          })));
      };
  };
  var sepBy1 = function (dictMonad) {
      return function (p) {
          return function (sep) {
              return Control_Bind.bind(Text_Parsing_Parser.bindParserT(dictMonad))(p)(function (a) {
                  return Control_Bind.bind(Text_Parsing_Parser.bindParserT(dictMonad))(Data_List.many(Text_Parsing_Parser.alternativeParserT(dictMonad))(Text_Parsing_Parser.lazyParserT)(Control_Apply.applySecond(Text_Parsing_Parser.applyParserT(dictMonad))(sep)(p)))(function (as) {
                      return Control_Applicative.pure(Text_Parsing_Parser.applicativeParserT(dictMonad))(new Data_List_Types.Cons(a, as));
                  });
              });
          };
      };
  };
  var sepBy = function (dictMonad) {
      return function (p) {
          return function (sep) {
              return Control_Alt.alt(Text_Parsing_Parser.altParserT(dictMonad))(sepBy1(dictMonad)(p)(sep))(Control_Applicative.pure(Text_Parsing_Parser.applicativeParserT(dictMonad))(Data_List_Types.Nil.value));
          };
      };
  };
  var option = function (dictMonad) {
      return function (a) {
          return function (p) {
              return Control_Alt.alt(Text_Parsing_Parser.altParserT(dictMonad))(p)(Control_Applicative.pure(Text_Parsing_Parser.applicativeParserT(dictMonad))(a));
          };
      };
  };
  var optionMaybe = function (dictMonad) {
      return function (p) {
          return option(dictMonad)(Data_Maybe.Nothing.value)(Data_Functor.map(Text_Parsing_Parser.functorParserT(((dictMonad.Bind1()).Apply0()).Functor0()))(Data_Maybe.Just.create)(p));
      };
  };
  exports["withErrorMessage"] = withErrorMessage;
  exports["optionMaybe"] = optionMaybe;
  exports["tryRethrow"] = tryRethrow;
  exports["sepBy"] = sepBy;
})(PS);
(function($PS) {
  // Generated by purs version 0.13.8
  "use strict";
  $PS["Text.Parsing.Parser.String"] = $PS["Text.Parsing.Parser.String"] || {};
  var exports = $PS["Text.Parsing.Parser.String"];
  var Control_Applicative = $PS["Control.Applicative"];
  var Control_Bind = $PS["Control.Bind"];
  var Control_Monad_State_Class = $PS["Control.Monad.State.Class"];
  var Data_Eq = $PS["Data.Eq"];
  var Data_Foldable = $PS["Data.Foldable"];
  var Data_Function = $PS["Data.Function"];
  var Data_Maybe = $PS["Data.Maybe"];
  var Data_Show = $PS["Data.Show"];
  var Data_String_CodePoints = $PS["Data.String.CodePoints"];
  var Data_String_CodeUnits = $PS["Data.String.CodeUnits"];
  var Data_String_Common = $PS["Data.String.Common"];
  var Text_Parsing_Parser = $PS["Text.Parsing.Parser"];
  var Text_Parsing_Parser_Combinators = $PS["Text.Parsing.Parser.Combinators"];
  var Text_Parsing_Parser_Pos = $PS["Text.Parsing.Parser.Pos"];                
  var StringLike = function (drop, indexOf, $$null, uncons) {
      this.drop = drop;
      this.indexOf = indexOf;
      this["null"] = $$null;
      this.uncons = uncons;
  };
  var uncons = function (dict) {
      return dict.uncons;
  };
  var stringLikeString = new StringLike(Data_String_CodePoints.drop, Data_String_CodePoints.indexOf, Data_String_Common["null"], Data_String_CodeUnits.uncons);
  var $$null = function (dict) {
      return dict["null"];
  };
  var indexOf = function (dict) {
      return dict.indexOf;
  };
  var eof = function (dictStringLike) {
      return function (dictMonad) {
          return Control_Bind.bind(Text_Parsing_Parser.bindParserT(dictMonad))(Control_Monad_State_Class.gets(Text_Parsing_Parser.monadStateParserT(dictMonad))(function (v) {
              return v.value0;
          }))(function (input) {
              return Control_Applicative.unless(Text_Parsing_Parser.applicativeParserT(dictMonad))($$null(dictStringLike)(input))(Text_Parsing_Parser.fail(dictMonad)("Expected EOF"));
          });
      };
  };
  var drop = function (dict) {
      return dict.drop;
  };
  var anyChar = function (dictStringLike) {
      return function (dictMonad) {
          return Control_Bind.bind(Text_Parsing_Parser.bindParserT(dictMonad))(Control_Monad_State_Class.gets(Text_Parsing_Parser.monadStateParserT(dictMonad))(function (v) {
              return v.value0;
          }))(function (input) {
              var v = uncons(dictStringLike)(input);
              if (v instanceof Data_Maybe.Nothing) {
                  return Text_Parsing_Parser.fail(dictMonad)("Unexpected EOF");
              };
              if (v instanceof Data_Maybe.Just) {
                  return Control_Bind.discard(Control_Bind.discardUnit)(Text_Parsing_Parser.bindParserT(dictMonad))(Control_Monad_State_Class.modify_(Text_Parsing_Parser.monadStateParserT(dictMonad))(function (v1) {
                      return new Text_Parsing_Parser.ParseState(v.value0.tail, Text_Parsing_Parser_Pos.updatePosString(v1.value1)(Data_String_CodeUnits.singleton(v.value0.head)), true);
                  }))(function () {
                      return Control_Applicative.pure(Text_Parsing_Parser.applicativeParserT(dictMonad))(v.value0.head);
                  });
              };
              throw new Error("Failed pattern match at Text.Parsing.Parser.String (line 56, column 3 - line 63, column 16): " + [ v.constructor.name ]);
          });
      };
  };
  var satisfy = function (dictStringLike) {
      return function (dictMonad) {
          return function (f) {
              return Text_Parsing_Parser_Combinators.tryRethrow(dictMonad)(Control_Bind.bind(Text_Parsing_Parser.bindParserT(dictMonad))(anyChar(dictStringLike)(dictMonad))(function (c) {
                  var $52 = f(c);
                  if ($52) {
                      return Control_Applicative.pure(Text_Parsing_Parser.applicativeParserT(dictMonad))(c);
                  };
                  return Text_Parsing_Parser.fail(dictMonad)("Character '" + (Data_String_CodeUnits.singleton(c) + "' did not satisfy predicate"));
              }));
          };
      };
  };
  var $$char = function (dictStringLike) {
      return function (dictMonad) {
          return function (c) {
              return Text_Parsing_Parser_Combinators.withErrorMessage(dictMonad)(satisfy(dictStringLike)(dictMonad)(function (v) {
                  return v === c;
              }))(Data_Show.show(Data_Show.showChar)(c));
          };
      };
  };
  var oneOf = function (dictStringLike) {
      return function (dictMonad) {
          return function (ss) {
              return Text_Parsing_Parser_Combinators.withErrorMessage(dictMonad)(satisfy(dictStringLike)(dictMonad)(Data_Function.flip(Data_Foldable.elem(Data_Foldable.foldableArray)(Data_Eq.eqChar))(ss)))("one of " + Data_Show.show(Data_Show.showArray(Data_Show.showChar))(ss));
          };
      };
  };
  exports["eof"] = eof;
  exports["anyChar"] = anyChar;
  exports["satisfy"] = satisfy;
  exports["char"] = $$char;
  exports["oneOf"] = oneOf;
  exports["stringLikeString"] = stringLikeString;
})(PS);
(function($PS) {
  // Generated by purs version 0.13.8
  "use strict";
  $PS["Text.Parsing.Parser.Token"] = $PS["Text.Parsing.Parser.Token"] || {};
  var exports = $PS["Text.Parsing.Parser.Token"];
  var Data_Char_Unicode = $PS["Data.Char.Unicode"];
  var Text_Parsing_Parser_Combinators = $PS["Text.Parsing.Parser.Combinators"];
  var Text_Parsing_Parser_String = $PS["Text.Parsing.Parser.String"];
  var hexDigit = function (dictMonad) {
      return Text_Parsing_Parser_Combinators.withErrorMessage(dictMonad)(Text_Parsing_Parser_String.satisfy(Text_Parsing_Parser_String.stringLikeString)(dictMonad)(Data_Char_Unicode.isHexDigit))("hex digit");
  };
  var digit = function (dictMonad) {
      return Text_Parsing_Parser_Combinators.withErrorMessage(dictMonad)(Text_Parsing_Parser_String.satisfy(Text_Parsing_Parser_String.stringLikeString)(dictMonad)(Data_Char_Unicode.isDigit))("digit");
  };
  exports["digit"] = digit;
  exports["hexDigit"] = hexDigit;
})(PS);
(function($PS) {
  // Generated by purs version 0.13.8
  "use strict";
  $PS["URI.Common"] = $PS["URI.Common"] || {};
  var exports = $PS["URI.Common"];
  var Control_Alt = $PS["Control.Alt"];
  var Control_Applicative = $PS["Control.Applicative"];
  var Control_Apply = $PS["Control.Apply"];
  var Control_Bind = $PS["Control.Bind"];
  var Control_Category = $PS["Control.Category"];
  var Control_Monad_Error_Class = $PS["Control.Monad.Error.Class"];
  var Control_Monad_Except_Trans = $PS["Control.Monad.Except.Trans"];
  var Control_Monad_State_Class = $PS["Control.Monad.State.Class"];
  var Control_Monad_State_Trans = $PS["Control.Monad.State.Trans"];
  var Data_Array = $PS["Data.Array"];
  var Data_Either = $PS["Data.Either"];
  var Data_Function = $PS["Data.Function"];
  var Data_Functor = $PS["Data.Functor"];
  var Data_Identity = $PS["Data.Identity"];
  var Data_Newtype = $PS["Data.Newtype"];
  var Data_Semigroup = $PS["Data.Semigroup"];
  var Data_String_CodeUnits = $PS["Data.String.CodeUnits"];
  var Data_String_Common = $PS["Data.String.Common"];
  var Data_String_NonEmpty_CodeUnits = $PS["Data.String.NonEmpty.CodeUnits"];
  var Data_String_NonEmpty_Internal = $PS["Data.String.NonEmpty.Internal"];
  var Global_Unsafe = $PS["Global.Unsafe"];
  var Text_Parsing_Parser = $PS["Text.Parsing.Parser"];
  var Text_Parsing_Parser_String = $PS["Text.Parsing.Parser.String"];
  var Text_Parsing_Parser_Token = $PS["Text.Parsing.Parser.Token"];
  var wrapParser = function (dictMonad) {
      return function (parseA) {
          return function (p) {
              return Control_Bind.bind(Control_Monad_Except_Trans.bindExceptT(Control_Monad_State_Trans.monadStateT(dictMonad)))(Control_Monad_State_Class.get(Control_Monad_Except_Trans.monadStateExceptT(Control_Monad_State_Trans.monadStateStateT(dictMonad))))(function (v) {
                  return Control_Bind.bind(Control_Monad_Except_Trans.bindExceptT(Control_Monad_State_Trans.monadStateT(dictMonad)))(Data_Newtype.un(Text_Parsing_Parser.newtypeParserT)(Text_Parsing_Parser.ParserT)(p))(function (a) {
                      var v1 = parseA(a);
                      if (v1 instanceof Data_Either.Left) {
                          return Control_Monad_Error_Class.throwError(Control_Monad_Except_Trans.monadThrowExceptT(Control_Monad_State_Trans.monadStateT(dictMonad)))(new Text_Parsing_Parser.ParseError(v1.value0, v.value1));
                      };
                      if (v1 instanceof Data_Either.Right) {
                          return Control_Applicative.pure(Control_Monad_Except_Trans.applicativeExceptT(Control_Monad_State_Trans.monadStateT(dictMonad)))(v1.value0);
                      };
                      throw new Error("Failed pattern match at URI.Common (line 56, column 3 - line 58, column 21): " + [ v1.constructor.name ]);
                  });
              });
          };
      };
  };
  var subDelims = Text_Parsing_Parser_String.oneOf(Text_Parsing_Parser_String.stringLikeString)(Data_Identity.monadIdentity)([ "!", "$", "&", "'", "(", ")", "*", "+", ";", "=", "," ]);
  var printEncoded = function (p) {
      return function (s) {
          var simpleChar = Data_Functor.map(Text_Parsing_Parser.functorParserT(Data_Identity.functorIdentity))(Data_String_CodeUnits.singleton)(p);
          var encodedChar = Data_Functor.map(Text_Parsing_Parser.functorParserT(Data_Identity.functorIdentity))(function ($19) {
              return Global_Unsafe.unsafeEncodeURIComponent(Data_String_CodeUnits.singleton($19));
          })(Text_Parsing_Parser_String.anyChar(Text_Parsing_Parser_String.stringLikeString)(Data_Identity.monadIdentity));
          var parse = Control_Apply.applyFirst(Text_Parsing_Parser.applyParserT(Data_Identity.monadIdentity))(Data_Functor.map(Text_Parsing_Parser.functorParserT(Data_Identity.functorIdentity))(Data_String_Common.joinWith(""))(Data_Array.many(Text_Parsing_Parser.alternativeParserT(Data_Identity.monadIdentity))(Text_Parsing_Parser.lazyParserT)(Control_Alt.alt(Text_Parsing_Parser.altParserT(Data_Identity.monadIdentity))(simpleChar)(encodedChar))))(Text_Parsing_Parser_String.eof(Text_Parsing_Parser_String.stringLikeString)(Data_Identity.monadIdentity));
          return Data_Either.either(Data_Function["const"](s))(Control_Category.identity(Control_Category.categoryFn))(Text_Parsing_Parser.runParser(s)(parse));
      };
  };
  var pctEncoded = Control_Bind.bind(Text_Parsing_Parser.bindParserT(Data_Identity.monadIdentity))(Text_Parsing_Parser_String["char"](Text_Parsing_Parser_String.stringLikeString)(Data_Identity.monadIdentity)("%"))(function (d0) {
      return Control_Bind.bind(Text_Parsing_Parser.bindParserT(Data_Identity.monadIdentity))(Text_Parsing_Parser_Token.hexDigit(Data_Identity.monadIdentity))(function (d1) {
          return Control_Bind.bind(Text_Parsing_Parser.bindParserT(Data_Identity.monadIdentity))(Text_Parsing_Parser_Token.hexDigit(Data_Identity.monadIdentity))(function (d2) {
              return Control_Applicative.pure(Text_Parsing_Parser.applicativeParserT(Data_Identity.monadIdentity))(Data_Semigroup.append(Data_String_NonEmpty_Internal.semigroupNonEmptyString)(Data_String_NonEmpty_CodeUnits.singleton(d0))(Data_Semigroup.append(Data_String_NonEmpty_Internal.semigroupNonEmptyString)(Data_String_NonEmpty_CodeUnits.singleton(d1))(Data_String_NonEmpty_CodeUnits.singleton(d2))));
          });
      });
  });  
  var alpha = Text_Parsing_Parser_String.satisfy(Text_Parsing_Parser_String.stringLikeString)(Data_Identity.monadIdentity)(function (c) {
      return c >= "a" && c <= "z" || c >= "A" && c <= "Z";
  });
  var alphaNum = Control_Alt.alt(Text_Parsing_Parser.altParserT(Data_Identity.monadIdentity))(alpha)(Text_Parsing_Parser_Token.digit(Data_Identity.monadIdentity));
  var unreserved = Control_Alt.alt(Text_Parsing_Parser.altParserT(Data_Identity.monadIdentity))(Control_Alt.alt(Text_Parsing_Parser.altParserT(Data_Identity.monadIdentity))(Control_Alt.alt(Text_Parsing_Parser.altParserT(Data_Identity.monadIdentity))(Control_Alt.alt(Text_Parsing_Parser.altParserT(Data_Identity.monadIdentity))(alphaNum)(Text_Parsing_Parser_String["char"](Text_Parsing_Parser_String.stringLikeString)(Data_Identity.monadIdentity)("-")))(Text_Parsing_Parser_String["char"](Text_Parsing_Parser_String.stringLikeString)(Data_Identity.monadIdentity)(".")))(Text_Parsing_Parser_String["char"](Text_Parsing_Parser_String.stringLikeString)(Data_Identity.monadIdentity)("_")))(Text_Parsing_Parser_String["char"](Text_Parsing_Parser_String.stringLikeString)(Data_Identity.monadIdentity)("~"));
  exports["wrapParser"] = wrapParser;
  exports["unreserved"] = unreserved;
  exports["pctEncoded"] = pctEncoded;
  exports["subDelims"] = subDelims;
  exports["printEncoded"] = printEncoded;
})(PS);
(function($PS) {
  // Generated by purs version 0.13.8
  "use strict";
  $PS["URI.Query"] = $PS["URI.Query"] || {};
  var exports = $PS["URI.Query"];
  var Control_Alt = $PS["Control.Alt"];
  var Control_Apply = $PS["Control.Apply"];
  var Data_Array = $PS["Data.Array"];
  var Data_Foldable = $PS["Data.Foldable"];
  var Data_Functor = $PS["Data.Functor"];
  var Data_Identity = $PS["Data.Identity"];
  var Data_Monoid = $PS["Data.Monoid"];
  var Data_String_NonEmpty_CodeUnits = $PS["Data.String.NonEmpty.CodeUnits"];
  var Data_String_NonEmpty_Internal = $PS["Data.String.NonEmpty.Internal"];
  var Text_Parsing_Parser = $PS["Text.Parsing.Parser"];
  var Text_Parsing_Parser_String = $PS["Text.Parsing.Parser.String"];
  var URI_Common = $PS["URI.Common"];                
  var Query = function (x) {
      return x;
  };
  var unsafeToString = function (v) {
      return v;
  };                                                  
  var queryChar = Control_Alt.alt(Text_Parsing_Parser.altParserT(Data_Identity.monadIdentity))(Control_Alt.alt(Text_Parsing_Parser.altParserT(Data_Identity.monadIdentity))(Control_Alt.alt(Text_Parsing_Parser.altParserT(Data_Identity.monadIdentity))(Control_Alt.alt(Text_Parsing_Parser.altParserT(Data_Identity.monadIdentity))(Control_Alt.alt(Text_Parsing_Parser.altParserT(Data_Identity.monadIdentity))(URI_Common.unreserved)(URI_Common.subDelims))(Text_Parsing_Parser_String["char"](Text_Parsing_Parser_String.stringLikeString)(Data_Identity.monadIdentity)(":")))(Text_Parsing_Parser_String["char"](Text_Parsing_Parser_String.stringLikeString)(Data_Identity.monadIdentity)("@")))(Text_Parsing_Parser_String["char"](Text_Parsing_Parser_String.stringLikeString)(Data_Identity.monadIdentity)("/")))(Text_Parsing_Parser_String["char"](Text_Parsing_Parser_String.stringLikeString)(Data_Identity.monadIdentity)("?"));
  var parser = Control_Apply.applySecond(Text_Parsing_Parser.applyParserT(Data_Identity.monadIdentity))(Text_Parsing_Parser_String["char"](Text_Parsing_Parser_String.stringLikeString)(Data_Identity.monadIdentity)("?"))(Data_Functor.map(Text_Parsing_Parser.functorParserT(Data_Identity.functorIdentity))((function () {
      var $8 = Data_String_NonEmpty_Internal.joinWith(Data_Foldable.foldableArray)("");
      return function ($9) {
          return Query($8($9));
      };
  })())(Data_Array.many(Text_Parsing_Parser.alternativeParserT(Data_Identity.monadIdentity))(Text_Parsing_Parser.lazyParserT)(Control_Alt.alt(Text_Parsing_Parser.altParserT(Data_Identity.monadIdentity))(Data_Functor.map(Text_Parsing_Parser.functorParserT(Data_Identity.functorIdentity))(Data_String_NonEmpty_CodeUnits.singleton)(queryChar))(URI_Common.pctEncoded))));
  var monoidQuery = Data_Monoid.monoidString;
  exports["unsafeToString"] = unsafeToString;
  exports["parser"] = parser;
  exports["monoidQuery"] = monoidQuery;
})(PS);
(function($PS) {
  // Generated by purs version 0.13.8
  "use strict";
  $PS["URI.Extra.QueryPairs"] = $PS["URI.Extra.QueryPairs"] || {};
  var exports = $PS["URI.Extra.QueryPairs"];
  var Control_Alt = $PS["Control.Alt"];
  var Control_Applicative = $PS["Control.Applicative"];
  var Control_Bind = $PS["Control.Bind"];
  var Data_Array = $PS["Data.Array"];
  var Data_Bifunctor = $PS["Data.Bifunctor"];
  var Data_Either = $PS["Data.Either"];
  var Data_Eq = $PS["Data.Eq"];
  var Data_Foldable = $PS["Data.Foldable"];
  var Data_Function = $PS["Data.Function"];
  var Data_Functor = $PS["Data.Functor"];
  var Data_Identity = $PS["Data.Identity"];
  var Data_List_Types = $PS["Data.List.Types"];
  var Data_String_NonEmpty_CodeUnits = $PS["Data.String.NonEmpty.CodeUnits"];
  var Data_String_NonEmpty_Internal = $PS["Data.String.NonEmpty.Internal"];
  var Data_Traversable = $PS["Data.Traversable"];
  var Data_Tuple = $PS["Data.Tuple"];
  var Global_Unsafe = $PS["Global.Unsafe"];
  var Text_Parsing_Parser = $PS["Text.Parsing.Parser"];
  var Text_Parsing_Parser_Combinators = $PS["Text.Parsing.Parser.Combinators"];
  var Text_Parsing_Parser_String = $PS["Text.Parsing.Parser.String"];
  var URI_Common = $PS["URI.Common"];
  var URI_Query = $PS["URI.Query"];                
  var Value = function (x) {
      return x;
  };
  var QueryPairs = function (x) {
      return x;
  };
  var Key = function (x) {
      return x;
  };
  var valueToString = function (v) {
      return Global_Unsafe.unsafeDecodeURIComponent(v);
  };
  var keyPartChar = Control_Alt.alt(Text_Parsing_Parser.altParserT(Data_Identity.monadIdentity))(URI_Common.unreserved)(Text_Parsing_Parser_String.oneOf(Text_Parsing_Parser_String.stringLikeString)(Data_Identity.monadIdentity)([ "!", "$", "'", "(", ")", "*", "+", ",", ":", "@", "/", "?" ]));
  var valuePartChar = Control_Alt.alt(Text_Parsing_Parser.altParserT(Data_Identity.monadIdentity))(keyPartChar)(Text_Parsing_Parser_String["char"](Text_Parsing_Parser_String.stringLikeString)(Data_Identity.monadIdentity)("="));
  var parsePart = function (parseK) {
      return function (parseV) {
          return Control_Bind.bind(Text_Parsing_Parser.bindParserT(Data_Identity.monadIdentity))(URI_Common.wrapParser(Data_Identity.monadIdentity)(function ($39) {
              return parseK(Key($39));
          })(Data_Functor.map(Text_Parsing_Parser.functorParserT(Data_Identity.functorIdentity))(Data_String_NonEmpty_Internal.joinWith(Data_Foldable.foldableArray)(""))(Data_Array.some(Text_Parsing_Parser.alternativeParserT(Data_Identity.monadIdentity))(Text_Parsing_Parser.lazyParserT)(Control_Alt.alt(Text_Parsing_Parser.altParserT(Data_Identity.monadIdentity))(Data_Functor.map(Text_Parsing_Parser.functorParserT(Data_Identity.functorIdentity))(Data_String_NonEmpty_CodeUnits.singleton)(keyPartChar))(URI_Common.pctEncoded)))))(function (key) {
              return Control_Bind.bind(Text_Parsing_Parser.bindParserT(Data_Identity.monadIdentity))(URI_Common.wrapParser(Data_Identity.monadIdentity)(Data_Traversable.traverse(Data_Traversable.traversableMaybe)(Data_Either.applicativeEither)(function ($40) {
                  return parseV(Value($40));
              }))(Text_Parsing_Parser_Combinators.optionMaybe(Data_Identity.monadIdentity)(Control_Bind.bind(Text_Parsing_Parser.bindParserT(Data_Identity.monadIdentity))(Text_Parsing_Parser_String["char"](Text_Parsing_Parser_String.stringLikeString)(Data_Identity.monadIdentity)("="))(function () {
                  return Data_Functor.map(Text_Parsing_Parser.functorParserT(Data_Identity.functorIdentity))(Data_String_NonEmpty_Internal.joinWith(Data_Foldable.foldableArray)(""))(Data_Array.many(Text_Parsing_Parser.alternativeParserT(Data_Identity.monadIdentity))(Text_Parsing_Parser.lazyParserT)(Control_Alt.alt(Text_Parsing_Parser.altParserT(Data_Identity.monadIdentity))(Data_Functor.map(Text_Parsing_Parser.functorParserT(Data_Identity.functorIdentity))(Data_String_NonEmpty_CodeUnits.singleton)(valuePartChar))(URI_Common.pctEncoded)));
              }))))(function (value) {
                  return Control_Applicative.pure(Text_Parsing_Parser.applicativeParserT(Data_Identity.monadIdentity))(new Data_Tuple.Tuple(key, value));
              });
          });
      };
  };
  var parse = function (parseK) {
      return function (parseV) {
          var $41 = Data_Bifunctor.bimap(Data_Either.bifunctorEither)(function (v) {
              return v.value0;
          })(QueryPairs);
          var $42 = Data_Function.flip(Text_Parsing_Parser.runParser)(Data_Functor.map(Text_Parsing_Parser.functorParserT(Data_Identity.functorIdentity))(Data_Array.fromFoldable(Data_List_Types.foldableList))(Text_Parsing_Parser_Combinators.sepBy(Data_Identity.monadIdentity)(parsePart(parseK)(parseV))(Text_Parsing_Parser_String["char"](Text_Parsing_Parser_String.stringLikeString)(Data_Identity.monadIdentity)("&"))));
          return function ($43) {
              return $41($42(URI_Query.unsafeToString($43)));
          };
      };
  };
  var keyFromString = (function () {
      var $44 = URI_Common.printEncoded(keyPartChar);
      return function ($45) {
          return Key($44($45));
      };
  })();
  var eqKey = Data_Eq.eqString;
  exports["parse"] = parse;
  exports["keyFromString"] = keyFromString;
  exports["valueToString"] = valueToString;
  exports["eqKey"] = eqKey;
})(PS);
(function(exports) {
  "use strict";

  // ----------------------------------------------------------------------------

  exports.search = function (location) {
    return function () {
      return location.search;
    };
  };
})(PS["Web.HTML.Location"] = PS["Web.HTML.Location"] || {});
(function($PS) {
  // Generated by purs version 0.13.8
  "use strict";
  $PS["Web.HTML.Location"] = $PS["Web.HTML.Location"] || {};
  var exports = $PS["Web.HTML.Location"];
  var $foreign = $PS["Web.HTML.Location"];
  exports["search"] = $foreign.search;
})(PS);
(function($PS) {
  // Generated by purs version 0.13.8
  "use strict";
  $PS["Main"] = $PS["Main"] || {};
  var exports = $PS["Main"];
  var CLL2 = $PS["CLL2"];
  var Control_Alt = $PS["Control.Alt"];
  var Control_Applicative = $PS["Control.Applicative"];
  var Control_Apply = $PS["Control.Apply"];
  var Control_Bind = $PS["Control.Bind"];
  var Control_Category = $PS["Control.Category"];
  var Control_MonadZero = $PS["Control.MonadZero"];
  var Data_Either = $PS["Data.Either"];
  var Data_Eq = $PS["Data.Eq"];
  var Data_Foldable = $PS["Data.Foldable"];
  var Data_Function = $PS["Data.Function"];
  var Data_Functor = $PS["Data.Functor"];
  var Data_Identity = $PS["Data.Identity"];
  var Data_List = $PS["Data.List"];
  var Data_Maybe = $PS["Data.Maybe"];
  var Data_Monoid = $PS["Data.Monoid"];
  var Data_Unfoldable = $PS["Data.Unfoldable"];
  var Data_Unit = $PS["Data.Unit"];
  var Derivation = $PS["Derivation"];
  var Effect = $PS["Effect"];
  var Effect_Exception = $PS["Effect.Exception"];
  var LJ = $PS["LJ"];
  var LK = $PS["LK"];
  var Partial_Unsafe = $PS["Partial.Unsafe"];
  var RCLL2 = $PS["RCLL2"];
  var Spork_Html_Core = $PS["Spork.Html.Core"];
  var Spork_Html_Elements = $PS["Spork.Html.Elements"];
  var Spork_Html_Events = $PS["Spork.Html.Events"];
  var Spork_Html_Properties = $PS["Spork.Html.Properties"];
  var Spork_PureApp = $PS["Spork.PureApp"];
  var Text_Parsing_Parser = $PS["Text.Parsing.Parser"];
  var Text_Parsing_Parser_String = $PS["Text.Parsing.Parser.String"];
  var Text_Parsing_StringParser = $PS["Text.Parsing.StringParser"];
  var Text_Parsing_StringParser_CodePoints = $PS["Text.Parsing.StringParser.CodePoints"];
  var Text_Parsing_StringParser_Combinators = $PS["Text.Parsing.StringParser.Combinators"];
  var URI_Extra_QueryPairs = $PS["URI.Extra.QueryPairs"];
  var URI_Query = $PS["URI.Query"];
  var Web_DOM_Element = $PS["Web.DOM.Element"];
  var Web_DOM_ParentNode = $PS["Web.DOM.ParentNode"];
  var Web_HTML = $PS["Web.HTML"];
  var Web_HTML_HTMLDocument = $PS["Web.HTML.HTMLDocument"];
  var Web_HTML_Location = $PS["Web.HTML.Location"];
  var Web_HTML_Window = $PS["Web.HTML.Window"];                
  var DerAction = (function () {
      function DerAction(value0) {
          this.value0 = value0;
      };
      DerAction.create = function (value0) {
          return new DerAction(value0);
      };
      return DerAction;
  })();
  var Input = (function () {
      function Input(value0) {
          this.value0 = value0;
      };
      Input.create = function (value0) {
          return new Input(value0);
      };
      return Input;
  })();
  var Submit = (function () {
      function Submit() {

      };
      Submit.value = new Submit();
      return Submit;
  })();
  var sequentParser = function (dictCalculus) {
      var forms = Data_Functor.map(Text_Parsing_StringParser.functorParser)(Data_List.toUnfoldable(Data_Unfoldable.unfoldableArray))(Control_Apply.applyFirst(Text_Parsing_StringParser.applyParser)(Control_Apply.applySecond(Text_Parsing_StringParser.applyParser)(Text_Parsing_StringParser_CodePoints.skipSpaces)(Text_Parsing_StringParser_Combinators.sepBy(Derivation.formParser(dictCalculus)(Data_Unit.unit))(Text_Parsing_StringParser_CodePoints["char"](","))))(Text_Parsing_StringParser_CodePoints.skipSpaces));
      return Control_Bind.bind(Text_Parsing_StringParser.bindParser)(Control_Apply.apply(Text_Parsing_StringParser.applyParser)(Data_Functor.map(Text_Parsing_StringParser.functorParser)(Derivation.unitaggedEntails)(forms))(Control_Apply.applySecond(Text_Parsing_StringParser.applyParser)(Text_Parsing_StringParser_CodePoints.string("|-"))(forms)))(function (seq) {
          return Control_Bind.discard(Control_Bind.discardUnit)(Text_Parsing_StringParser.bindParser)(Control_MonadZero.guard(Text_Parsing_StringParser.monadZeroParser)(Derivation.okInitial(dictCalculus)(seq)))(function () {
              return Control_Applicative.pure(Text_Parsing_StringParser.applicativeParser)(seq);
          });
      });
  };
  var update = function (dictCalculus) {
      return function (v) {
          return function (v1) {
              if (v1 instanceof DerAction) {
                  return {
                      input: v.input,
                      prf: Derivation.update(dictCalculus)(v.prf)(v1.value0)
                  };
              };
              if (v1 instanceof Input) {
                  return {
                      input: v1.value0,
                      prf: v.prf
                  };
              };
              if (v1 instanceof Submit) {
                  var v2 = Text_Parsing_StringParser.runParser(sequentParser(dictCalculus))(v.input);
                  if (v2 instanceof Data_Either.Left) {
                      var v3 = Text_Parsing_StringParser.runParser(Derivation.formParser(dictCalculus)(Data_Unit.unit))(v.input);
                      if (v3 instanceof Data_Either.Left) {
                          return v;
                      };
                      if (v3 instanceof Data_Either.Right) {
                          return {
                              input: "",
                              prf: Derivation.Assertion.create(Derivation.unitaggedEntails([  ])([ v3.value0 ]))
                          };
                      };
                      throw new Error("Failed pattern match at Main (line 105, column 15 - line 107, column 65): " + [ v3.constructor.name ]);
                  };
                  if (v2 instanceof Data_Either.Right) {
                      return {
                          input: "",
                          prf: new Derivation.Assertion(v2.value0)
                      };
                  };
                  throw new Error("Failed pattern match at Main (line 104, column 29 - line 108, column 49): " + [ v2.constructor.name ]);
              };
              throw new Error("Failed pattern match at Main (line 100, column 1 - line 101, column 42): " + [ v.constructor.name, v1.constructor.name ]);
          };
      };
  };
  var render = function (dictRenderForm) {
      return function (v) {
          var submit = Spork_Html_Events.always(Data_Function["const"](Submit.value));
          return Spork_Html_Elements.div([ Spork_Html_Properties.id_("main") ])([ Data_Functor.map(Spork_Html_Core.functorHtml)(DerAction.create)(Derivation.renderDerivation(dictRenderForm)(v.prf)), Spork_Html_Elements.br([  ]), Spork_Html_Elements.input([ Spork_Html_Properties.value(v.input), Spork_Html_Events.onValueInput(Spork_Html_Events.always(Input.create)) ]), Spork_Html_Elements.button([ Spork_Html_Events.onClick(submit) ])([ Spork_Html_Core.text("New goal") ]) ]);
      };
  };
  var readme = function (win) {
      return function __do() {
          var pnode = Data_Functor.map(Effect.functorEffect)(Web_HTML_HTMLDocument.toParentNode)(Web_HTML_Window.document(win))();
          var mdiv = Web_DOM_ParentNode.querySelector("#readme")(pnode)();
          if (mdiv instanceof Data_Maybe.Just) {
              return Web_DOM_Element.removeAttribute("hidden")(mdiv.value0)();
          };
          if (mdiv instanceof Data_Maybe.Nothing) {
              return Effect_Exception["throw"]("missing readme?!")();
          };
          throw new Error("Failed pattern match at Main (line 64, column 3 - line 66, column 40): " + [ mdiv.constructor.name ]);
      };
  };
  var initRCLL2 = {
      input: "",
      prf: Derivation.Assertion.create(Data_Either.either(function (v) {
          return Partial_Unsafe.unsafeCrashWith("?");
      })(Control_Category.identity(Control_Category.categoryFn))(Text_Parsing_StringParser.runParser(sequentParser(RCLL2.cllCalculus))("|- !(A & B) -o !A * !B")))
  };
  var initLK = {
      input: "",
      prf: Derivation.Assertion.create(Data_Either.either(function (v) {
          return Partial_Unsafe.unsafeCrashWith("?");
      })(Control_Category.identity(Control_Category.categoryFn))(Text_Parsing_StringParser.runParser(sequentParser(LK.lkCalculus))("|- ((P -> Q) -> P) -> P")))
  };
  var initLJ = {
      input: "",
      prf: Derivation.Assertion.create(Data_Either.either(function (v) {
          return Partial_Unsafe.unsafeCrashWith("?");
      })(Control_Category.identity(Control_Category.categoryFn))(Text_Parsing_StringParser.runParser(sequentParser(LJ.ljCalculus))("|- ~(P \\/ Q) -> ~P /\\ ~Q")))
  };
  var initCLL2 = {
      input: "",
      prf: Derivation.Assertion.create(Data_Either.either(function (v) {
          return Partial_Unsafe.unsafeCrashWith("?");
      })(Control_Category.identity(Control_Category.categoryFn))(Text_Parsing_StringParser.runParser(sequentParser(CLL2.cllCalculus))("|- !(A & B) -o !A * !B")))
  };
  var main = function __do() {
      var win = Web_HTML.window();
      return Effect_Exception.catchException((function () {
          var $46 = Data_Function.flip(Web_HTML_Window.alert)(win);
          return function ($47) {
              return $46(Effect_Exception.message($47));
          };
      })())(function __do() {
          var loc = Web_HTML_Window.location(win)();
          var params = Web_HTML_Location.search(loc)();
          var q = Data_Either.either(function (v) {
              return Effect_Exception["throw"]("bad query string");
          })(Control_Applicative.pure(Effect.applicativeEffect))(Text_Parsing_Parser.runParser(params)(Control_Alt.alt(Text_Parsing_Parser.altParserT(Data_Identity.monadIdentity))(URI_Query.parser)(Data_Functor.voidRight(Text_Parsing_Parser.functorParserT(Data_Identity.functorIdentity))(Data_Monoid.mempty(URI_Query.monoidQuery))(Text_Parsing_Parser_String.eof(Text_Parsing_Parser_String.stringLikeString)(Data_Identity.monadIdentity)))))();
          var v = Data_Either.either(function (v) {
              return Effect_Exception["throw"]("could not parse query string");
          })(Control_Applicative.pure(Effect.applicativeEffect))(URI_Extra_QueryPairs.parse(Control_Applicative.pure(Data_Either.applicativeEither))(Control_Applicative.pure(Data_Either.applicativeEither))(q))();
          var k = URI_Extra_QueryPairs.keyFromString("system");
          var mv = Data_Functor.map(Data_Maybe.functorMaybe)(URI_Extra_QueryPairs.valueToString)(Data_Foldable.findMap(Data_Foldable.foldableArray)(function (v1) {
              var $37 = Data_Eq.eq(URI_Extra_QueryPairs.eqKey)(v1.value0)(k);
              if ($37) {
                  return v1.value1;
              };
              return Data_Maybe.Nothing.value;
          })(v));
          if (mv instanceof Data_Maybe.Just && mv.value0 === "lk") {
              return Data_Functor.voidRight(Effect.functorEffect)(Data_Unit.unit)(Spork_PureApp.makeWithSelector({
                  init: initLK,
                  update: update(LK.lkCalculus),
                  render: render(LK.lkRender)
              })("body"))();
          };
          if (mv instanceof Data_Maybe.Just && mv.value0 === "lj") {
              return Data_Functor.voidRight(Effect.functorEffect)(Data_Unit.unit)(Spork_PureApp.makeWithSelector({
                  init: initLJ,
                  update: update(LJ.ljCalculus),
                  render: render(LJ.ljRender)
              })("body"))();
          };
          if (mv instanceof Data_Maybe.Just && mv.value0 === "cll") {
              return Data_Functor.voidRight(Effect.functorEffect)(Data_Unit.unit)(Spork_PureApp.makeWithSelector({
                  init: initCLL2,
                  update: update(CLL2.cllCalculus),
                  render: render(CLL2.cllRender)
              })("body"))();
          };
          if (mv instanceof Data_Maybe.Just && mv.value0 === "rcll") {
              return Data_Functor.voidRight(Effect.functorEffect)(Data_Unit.unit)(Spork_PureApp.makeWithSelector({
                  init: initRCLL2,
                  update: update(RCLL2.cllCalculus),
                  render: render(RCLL2.cllRender)
              })("body"))();
          };
          if (mv instanceof Data_Maybe.Just) {
              return Effect_Exception["throw"]("unknown system")();
          };
          if (mv instanceof Data_Maybe.Nothing) {
              return readme(win)();
          };
          throw new Error("Failed pattern match at Main (line 48, column 3 - line 58, column 26): " + [ mv.constructor.name ]);
      })();
  };
  exports["main"] = main;
  exports["readme"] = readme;
  exports["initLK"] = initLK;
  exports["initLJ"] = initLJ;
  exports["initCLL2"] = initCLL2;
  exports["initRCLL2"] = initRCLL2;
  exports["DerAction"] = DerAction;
  exports["Input"] = Input;
  exports["Submit"] = Submit;
  exports["sequentParser"] = sequentParser;
  exports["update"] = update;
  exports["render"] = render;
})(PS);
PS["Main"].main();
},{}]},{},[1]);
